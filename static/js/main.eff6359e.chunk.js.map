{"version":3,"sources":["app/PGNParser.js","app/OpeningGraph.js","app/OpeningManager.js","pres/Navigator.js","pres/GlobalHeader.js","app/LichessIterator.js","app/ChessComIterator.js","app/PGNReader.js","pres/PGNLoader.js","pres/Settings.js","pres/MovesList.js","pres/ControlsContainer.js","pres/StateManagement.js","pres/MainContainer.js","index.js"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","h","c","mr","m","r","headers","reduce","acc","x","Object","assign","comment","moves","result","make_game","peg$c4","peg$c6","peg$literalExpectation","peg$c7","peg$c8","peg$classExpectation","peg$c10","peg$c11","peg$c12","peg$c13","peg$c15","peg$c16","peg$c17","chars","peg$c19","peg$c21","peg$c23","peg$c25","peg$c27","peg$c29","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c39","peg$c41","peg$c42","peg$c43","peg$c45","peg$c47","peg$c49","peg$c51","peg$c53","peg$c57","peg$c58","peg$c59","peg$c61","peg$c63","peg$c65","peg$c67","peg$c69","peg$c71","peg$c73","peg$c74","peg$c75","peg$c77","peg$c79","peg$c82","peg$c84","peg$c85","flatten","a","isArray","push","peg$c86","mn","n","peg$c88","nags","com","peg$c92","peg$c94","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","s2","s3","s4","s5","peg$parsegame","peg$parsenewline","charAt","peg$parseEOF","map","g","s6","s7","peg$parseheader","peg$parseheaders","peg$parsecomment","peg$parsewhitespace","peg$parsemovetext","peg$parseresult","peg$c2","peg$parsedouble_quote","peg$parseinteger","test","parseInt","peg$parsews","peg$parsesymbol","peg$parsestring","hn","hv","make_header","peg$parsepiece","peg$parserank","peg$parsefile","peg$parsecapture","peg$parseperiod","substr","peg$parsesquare","peg$parsenag","peg$parsecomment_chars","peg$parsepawn_half_move","peg$parsepromotion","peg$parsehalf_move","peg$parsecontinuation","peg$parsecastle_half_move","peg$parsepiece_disambiguation_half_move","peg$parsepiece_half_move","peg$parsecheck","peg$parsecheckmate","peg$parsenag_alts","peg$parsemove","s8","s9","peg$parsemove_number","peg$parserav","move_number","move","ravs","make_move","first","rest","concat","OpeningGraph","graph","Graph","fen","gameResult","currNode","nodes","get","GraphNode","set","gameResults","movesPlayedBy","playedBy","movePlayedBy","san","GraphMove","whiteWin","blackWin","draw","count","blackWins","whiteWins","draws","playedByMax","Math","max","movesPlayedAgainst","playedAgainst","movePlayedAgainst","playedAgainstMax","from","entries","entry","gMove","orig","dest","to","level","levelFor","moveCount","maxCount","Map","rootNode","properties","openingGraph","OpeningManager","plys","pgn","currentIndex","pgnAsList","moveForward","pgnList","pgnSoFar","pgnListSoFar","moveNumber","whitePly","blackPly","currMove","floor","moveTo","index","Navigator","props","openingManager","state","currentMove","newProps","addPly","newState","moveBack","onChange","setState","opening","ChessEcoCodes","openingCode","code","Container","Row","Col","lg","className","Button","color","onClick","previous","bind","icon","faStepBackward","next","faStepForward","key","sm","React","Component","GlobalHeader","useState","isOpen","setIsOpen","modal","setModal","toggleModal","launch","url","window","open","Navbar","light","expand","src","height","width","alt","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","divider","Modal","toggle","ModalHeader","ListGroup","ListGroupItem","tag","target","action","ModalFooter","LichessIterator","playerName","ready","showError","stopDownloading","remainingBody","requestObject","request","encodeURIComponent","json","on","error","response","statusCode","data","newBody","lastValidPGN","lastIndexOf","body","trim","parsedPGNs","split","pgnString","e","console","log","filter","Variant","Black","toLowerCase","White","abort","ChessComIterator","chessAPI","ChessWebAPI","queue","pendingRequests","parseGames","archiveResponse","games","game","rules","dequeue","jsonBody","JSON","archives","reverse","forEach","archiveUrl","components","year","month","dispatch","getPlayerCompleteMonthlyArchives","PGNReader","site","notify","continueProcessingGames","handleResponse","setTimeout","parsePGNTimed","pgnArray","playerColor","chess","Chess","element","addMoveForFen","addMoveAgainstFen","addGameResultOnFen","Result","white","black","Link","Site","PGNLoader","event","value","clear","parsePGN","setDownloading","RadioGroup","defaultValue","siteChange","FormControlLabel","control","Radio","label","playerNameChange","id","placeholder","load","handleChange","settings","gamesProcessed","isDownloading","switchToMovesTab","faList","SettingsView","eventName","newValue","faRetweet","faRandom","faTrashAlt","reset","faFastBackward","analyse","faDesktop","MovesList","onMove","settingsChange","resultsTable","movesToShow","movesTable","switchToUserTab","faUser","Table","TableBody","TableRow","TableCell","TableHead","size","Progress","multi","bar","TableFooter","colSpan","turnColor","changePlayerColor","ControlsContainer","activeTab","tab","tabs","NavItem","NavLink","classnames","active","faCog","TabContent","TabPane","tabId","updateProcessedGames","turn","brushes","forBrushes","againstBrushes","calcMovable","dests","SQUARES","ms","square","verbose","free","orientation","promotion","lastMove","navigateTo","previousMove","downloadingGames","moveToShape","brush","autoShapes","shapes","fillArray","movesForFen","movesAgainstFen","b","gameResultsForFen","arr","len","errorMessage","closeError","val","MainContainer","obj","lastMoveArray","snackBarOpen","movable","drawable","enabled","visible","style","margin","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eff6359e.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(gs) {return gs.map(function(g) { return g[0]})},\n      peg$c1 = function(h, c, m, r) {return [m, r]},\n      peg$c2 = function(h, c, r) {return [null, r]},\n      peg$c3 = function(h, c, mr) {return make_game(h, c, mr[0], mr[1])},\n      peg$c4 = peg$anyExpectation(),\n      peg$c5 = \"\\\"\",\n      peg$c6 = peg$literalExpectation(\"\\\"\", false),\n      peg$c7 = /^[^\"]/,\n      peg$c8 = peg$classExpectation([\"\\\"\"], true, false),\n      peg$c9 = function(str) {return str.join('')},\n      peg$c10 = /^[1-9]/,\n      peg$c11 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c12 = /^[0-9]/,\n      peg$c13 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c14 = function(a, b) {return parseInt(a+b.join(''), 10)},\n      peg$c15 = /^[A-Za-z0-9_\\-]/,\n      peg$c16 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"], \"_\", \"-\"], false, false),\n      peg$c17 = function(chars) {return chars.join('')},\n      peg$c18 = \" \",\n      peg$c19 = peg$literalExpectation(\" \", false),\n      peg$c20 = \"\\f\",\n      peg$c21 = peg$literalExpectation(\"\\f\", false),\n      peg$c22 = \"\\t\",\n      peg$c23 = peg$literalExpectation(\"\\t\", false),\n      peg$c24 = \"\\n\",\n      peg$c25 = peg$literalExpectation(\"\\n\", false),\n      peg$c26 = \"[\",\n      peg$c27 = peg$literalExpectation(\"[\", false),\n      peg$c28 = \"]\",\n      peg$c29 = peg$literalExpectation(\"]\", false),\n      peg$c30 = function(hn, hv) { return make_header(hn,hv) },\n      peg$c31 = function(hs) {return hs},\n      peg$c32 = /^[NKQRBP]/,\n      peg$c33 = peg$classExpectation([\"N\", \"K\", \"Q\", \"R\", \"B\", \"P\"], false, false),\n      peg$c34 = /^[a-h]/,\n      peg$c35 = peg$classExpectation([[\"a\", \"h\"]], false, false),\n      peg$c36 = /^[1-8]/,\n      peg$c37 = peg$classExpectation([[\"1\", \"8\"]], false, false),\n      peg$c38 = \"+\",\n      peg$c39 = peg$literalExpectation(\"+\", false),\n      peg$c40 = \"#\",\n      peg$c41 = peg$literalExpectation(\"#\", false),\n      peg$c42 = /^[x@]/,\n      peg$c43 = peg$classExpectation([\"x\", \"@\"], false, false),\n      peg$c44 = \".\",\n      peg$c45 = peg$literalExpectation(\".\", false),\n      peg$c46 = \"1-0\",\n      peg$c47 = peg$literalExpectation(\"1-0\", false),\n      peg$c48 = \"0-1\",\n      peg$c49 = peg$literalExpectation(\"0-1\", false),\n      peg$c50 = \"*\",\n      peg$c51 = peg$literalExpectation(\"*\", false),\n      peg$c52 = \"1/2-1/2\",\n      peg$c53 = peg$literalExpectation(\"1/2-1/2\", false),\n      peg$c54 = function(mn) {return mn},\n      peg$c55 = function(r, f) {return r+f},\n      peg$c56 = \"=\",\n      peg$c57 = peg$literalExpectation(\"=\", false),\n      peg$c58 = /^[QRBNK]/,\n      peg$c59 = peg$classExpectation([\"Q\", \"R\", \"B\", \"N\", \"K\"], false, false),\n      peg$c60 = \"$\",\n      peg$c61 = peg$literalExpectation(\"$\", false),\n      peg$c62 = \"!!\",\n      peg$c63 = peg$literalExpectation(\"!!\", false),\n      peg$c64 = \"??\",\n      peg$c65 = peg$literalExpectation(\"??\", false),\n      peg$c66 = \"!?\",\n      peg$c67 = peg$literalExpectation(\"!?\", false),\n      peg$c68 = \"?!\",\n      peg$c69 = peg$literalExpectation(\"?!\", false),\n      peg$c70 = \"!\",\n      peg$c71 = peg$literalExpectation(\"!\", false),\n      peg$c72 = \"?\",\n      peg$c73 = peg$literalExpectation(\"?\", false),\n      peg$c74 = /^[^}]/,\n      peg$c75 = peg$classExpectation([\"}\"], true, false),\n      peg$c76 = \"{\",\n      peg$c77 = peg$literalExpectation(\"{\", false),\n      peg$c78 = \"}\",\n      peg$c79 = peg$literalExpectation(\"}\", false),\n      peg$c80 = function(cc) {return cc.join('');},\n      peg$c81 = \"O-O-O\",\n      peg$c82 = peg$literalExpectation(\"O-O-O\", false),\n      peg$c83 = \"O-O\",\n      peg$c84 = peg$literalExpectation(\"O-O\", false),\n      peg$c85 = function(m) {return flatten(m).join('');},\n      peg$c86 = function(mn, m, n) {return n},\n      peg$c87 = function(mn, m, nags, c2) {return c2},\n      peg$c88 = function(mn, m, nags, com, r) {return r},\n      peg$c89 = function(mn, m, nags, com, ravs) {return make_move(mn, m, nags, ravs, com)},\n      peg$c90 = function(first, rest) {return first ? [first].concat(rest.map(function(m) {return m[1]})) : []},\n      peg$c91 = \"(\",\n      peg$c92 = peg$literalExpectation(\"(\", false),\n      peg$c93 = \")\",\n      peg$c94 = peg$literalExpectation(\")\", false),\n      peg$c95 = function(m, r) {return make_rav(m, r)},\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsegame();\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$parsenewline();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parsenewline();\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$parsegame();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsenewline();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsenewline();\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOF();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsegame() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseheaders();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsewhitespace();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsewhitespace();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parsemovetext();\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseresult();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c1(s1, s2, s5, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parseresult();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c2(s1, s2, s5);\n            }\n            s4 = s5;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsewhitespace();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsewhitespace();\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c3(s1, s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedouble_quote() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s0 = peg$c5;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestring() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedouble_quote();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c7.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c7.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsedouble_quote();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c9(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (peg$c10.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c12.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c12.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesymbol() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c15.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c15.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 12) {\n        s0 = peg$c20;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 9) {\n          s0 = peg$c22;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewhitespace() {\n    var s0;\n\n    s0 = peg$parsews();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsenewline();\n    }\n\n    return s0;\n  }\n\n  function peg$parsenewline() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c24;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseheader() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c26;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesymbol();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsews();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsestring();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c28;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c30(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseheaders() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseheader();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseheader();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c31(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepiece() {\n    var s0;\n\n    if (peg$c32.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserank() {\n    var s0;\n\n    if (peg$c34.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefile() {\n    var s0;\n\n    if (peg$c36.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheck() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c38;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheckmate() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s0 = peg$c40;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecapture() {\n    var s0;\n\n    if (peg$c42.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseperiod() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c44;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseresult() {\n    var s0;\n\n    if (input.substr(peg$currPos, 3) === peg$c46) {\n      s0 = peg$c46;\n      peg$currPos += 3;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c48) {\n        s0 = peg$c48;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s0 = peg$c50;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c52) {\n            s0 = peg$c52;\n            peg$currPos += 7;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c53); }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemove_number() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseperiod();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseperiod();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c54(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesquare() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parserank();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefile();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c55(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepromotion() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s1 = peg$c56;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$c58.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenag() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s2 = peg$c60;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseinteger();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsenag_alts() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c62) {\n      s0 = peg$c62;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c64) {\n        s0 = peg$c64;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c66) {\n          s0 = peg$c66;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c68) {\n            s0 = peg$c68;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c69); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 33) {\n              s0 = peg$c70;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 63) {\n                s0 = peg$c72;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c73); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecontinuation() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseperiod();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseperiod();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment_chars() {\n    var s0;\n\n    if (peg$c74.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c75); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c76;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsecomment_chars();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsecomment_chars();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c78;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c79); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c80(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepawn_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parserank();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecapture();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesquare();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepromotion();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecapture();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsesquare();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_disambiguation_half_move() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parserank();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsefile();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecapture();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesquare();\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecastle_half_move() {\n    var s0;\n\n    if (input.substr(peg$currPos, 5) === peg$c81) {\n      s0 = peg$c81;\n      peg$currPos += 5;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c82); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c83) {\n        s0 = peg$c83;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c84); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsehalf_move() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsecontinuation();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecastle_half_move();\n      if (s3 === peg$FAILED) {\n        s3 = peg$parsepiece_disambiguation_half_move();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parsepiece_half_move();\n          if (s3 === peg$FAILED) {\n            s3 = peg$parsepawn_half_move();\n          }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsecheck();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parsecheckmate();\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsenag_alts();\n          if (s5 === peg$FAILED) {\n            s5 = null;\n          }\n          if (s5 !== peg$FAILED) {\n            s2 = [s2, s3, s4, s5];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c85(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsemove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove_number();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsehalf_move();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = [];\n          s7 = peg$parsewhitespace();\n          if (s7 !== peg$FAILED) {\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parsewhitespace();\n            }\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsenag();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c86(s1, s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsenag();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c86(s1, s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsecomment();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c87(s1, s3, s4, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$currPos;\n              s8 = [];\n              s9 = peg$parsewhitespace();\n              if (s9 !== peg$FAILED) {\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parsewhitespace();\n                }\n              } else {\n                s8 = peg$FAILED;\n              }\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parserav();\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s7;\n                  s8 = peg$c88(s1, s3, s4, s5, s9);\n                  s7 = s8;\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$currPos;\n                s8 = [];\n                s9 = peg$parsewhitespace();\n                if (s9 !== peg$FAILED) {\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parsewhitespace();\n                  }\n                } else {\n                  s8 = peg$FAILED;\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parserav();\n                  if (s9 !== peg$FAILED) {\n                    peg$savedPos = s7;\n                    s8 = peg$c88(s1, s3, s4, s5, s9);\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c89(s1, s3, s4, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemovetext() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parsewhitespace();\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewhitespace();\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsemove();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parsewhitespace();\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsemove();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserav() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c91;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c92); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsemovetext();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsewhitespace();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseresult();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c93;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c94); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c95(s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n\n      function flatten(a, acc = []) {\n          for (var i = 0; i < a.length; i++) {\n              if (Array.isArray(a[i])) {\n                  flatten(a[i], acc);\n              } else {\n                  acc.push(a[i]);\n              }\n          }\n          return acc;\n      }\n      function make_header(hn,hv) {\n          var m = {};\n          m[hn] = hv;\n          return m;\n      }\n      function make_move(move_number, move, nags, ravs, comment) {\n          var m = {};\n          if (move_number) m.move_number = move_number;\n          if (move) m.move = move;\n          if (nags && nags.length) m.nags = nags;\n          if (ravs && ravs.length) m.ravs = ravs;\n          if (comment) m.comment = comment;\n          return m;\n      }\n      function make_rav(moves, result) {\n          return {\n              moves, \n              result\n          };\n      }\n      function make_game(h, c, m, r) {\n          h = h || [];\n          return {\n              headers: h.reduce((acc, x) => Object.assign(acc, x), {}),\n              comment: c,\n              moves: m || [],\n              result: r\n          };\n      }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","\nclass OpeningGraph {\n    graph = new Graph()\n    clear() {\n        this.graph = new Graph()\n    }\n    addGameResultOnFen(fen, gameResult) {\n        var currNode = this.graph.nodes.get(fen)\n        if(!currNode) {\n            currNode = new GraphNode()\n            currNode.fen = fen\n            this.graph.nodes.set(fen, currNode)\n        }\n        currNode.gameResults.push(gameResult)\n    }\n    addMoveForFen(fen, move, result) {\n        var currNode = this.graph.nodes.get(fen)\n        if(!currNode) {\n            currNode = new GraphNode()\n            currNode.fen = fen\n            this.graph.nodes.set(fen, currNode)\n        }\n        var movesPlayedBy = currNode.playedBy\n        var movePlayedBy = movesPlayedBy.get(move.san)\n        if(!movePlayedBy) {\n            movePlayedBy = new GraphMove()\n            movePlayedBy.move = move\n            movesPlayedBy.set(move.san, movePlayedBy)\n        }\n\n        let whiteWin = 0, blackWin = 0, draw = 0\n        if(result === '1-0') {\n            whiteWin = 1\n        } else if (result === '0-1') {\n            blackWin = 1\n        } else {\n            draw = 1\n        }\n        movePlayedBy.count += 1\n        movePlayedBy.blackWins += blackWin\n        movePlayedBy.whiteWins += whiteWin\n        movePlayedBy.draws += draw\n        \n        currNode.playedByMax = Math.max(currNode.playedByMax, movePlayedBy.count)\n        \n        currNode.playedBy = movesPlayedBy\n\n        \n    }\n    addMoveAgainstFen(fen, move, result) {\n        var currNode = this.graph.nodes.get(fen)\n        if(!currNode) {\n            currNode = new GraphNode()\n            currNode.fen = fen\n            this.graph.nodes.set(fen, currNode)\n        }\n        var movesPlayedAgainst = currNode.playedAgainst\n        var movePlayedAgainst = movesPlayedAgainst.get(move.san)\n        if(!movePlayedAgainst) {\n            movePlayedAgainst = new GraphMove()\n            movePlayedAgainst.move = move\n            movesPlayedAgainst.set(move.san, movePlayedAgainst)\n        }\n        let whiteWin = 0, blackWin = 0, draw = 0\n        if(result === '1-0') {\n            whiteWin = 1\n        } else if (result === '0-1') {\n            blackWin = 1\n        } else {\n            draw = 1\n        }\n        movePlayedAgainst.count += 1\n        movePlayedAgainst.blackWins += blackWin\n        movePlayedAgainst.whiteWins += whiteWin\n        movePlayedAgainst.draws += draw\n        \n        currNode.playedAgainstMax = Math.max(currNode.playedAgainstMax, movePlayedAgainst.count)\n        \n        currNode.playedAgainst = movesPlayedAgainst\n    }\n    gameResultsForFen(fen) {\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return currNode.gameResults\n        }\n        return null\n    }\n    movesForFen(fen) {\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return Array.from(currNode.playedBy.entries()).map((entry)=> {\n                let gMove = entry[1]\n                return {\n                    orig:gMove.move.from,\n                    dest:gMove.move.to,\n                    level:this.levelFor(gMove.count, currNode.playedByMax),\n                    count:gMove.count,\n                    whiteWins:gMove.whiteWins,\n                    blackWins:gMove.blackWins,\n                    draws:gMove.draws,\n                    san:gMove.move.san\n                }\n            })\n        }        \n        return null\n    }\n    movesAgainstFen(fen) {\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return Array.from(currNode.playedAgainst.entries()).map((entry)=> {\n                let gMove = entry[1]\n                return {\n                    orig:gMove.move.from,\n                    dest:gMove.move.to,\n                    level:this.levelFor(gMove.count, currNode.playedAgainstMax),\n                    count:gMove.count,\n                    whiteWins:gMove.whiteWins,\n                    blackWins:gMove.blackWins,\n                    draws:gMove.draws,\n                    san:gMove.move.san\n                }\n            })\n        }        \n        return null\n    }\n    levelFor(moveCount, maxCount){\n        if(maxCount <= 0 ||moveCount/maxCount > 0.8) {\n            return 2\n        }\n        if(moveCount/maxCount>0.3) {\n            return 1\n        }\n        return 0\n    }\n\n}\n\n\nclass Graph {\n    nodes = new Map(/*[\n        ['rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', {\n                    'playedByMax' : 5,\n                    'playedBy':new Map([['e4',{'count':5,'move': {'from':'e2', to:'e4'}}]])\n        }],\n        ['rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1', {\n            'playedByMax' : 10,\n            'playedBy':new Map([['Nf6',{'count':3,'move': {'from':'g8', to:'f6'}}]])\n        }]\n                ]*/)\n    rootNode = null\n\n}\n\nclass GraphNode {\n    fen = ''\n    //totalCount = 0\n    //children = new Map() //map of Move to fen\n    playedByMax = 0 // used to keep track of how many times the most frequent move is played for ease of calculation later\n    playedBy = new Map()\n    playedAgainstMax = 0\n    playedAgainst = new Map()\n    gameResults = []\n//    engineAnalyses = []\n//    filters = {}\n    properties = {}\n}\n\nclass GraphMove {\n    fen = ''\n    move = {}\n    count = 0\n    blackWins = 0\n    whiteWins = 0\n    draws = 0\n}\n\n/*class EngineAnalysis {\n    engineNme = ''\n    searchDepth = 0\n    evaluation = 0.0\n}*/\n\nexport const openingGraph = new OpeningGraph()","\nexport default class OpeningManager {\n    plys = [{pgn:'', fen:'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', move:{from:'x1', to:'x2', san:''}}]\n    currentIndex = 0\n    addPly(fen,move) {\n        if(this.currentIndex<this.plys.length-1 && this.plys[this.currentIndex+1].move.san === move.san) {\n            this.moveForward()\n            return\n        }\n        this.plys = this.plys.slice(0,this.currentIndex+1)\n        this.plys.push({\n            pgnAsList:this.pgnAsList(move.san),\n            fen: fen,\n            move: move\n        })\n        this.currentIndex++;\n        return this.plys[this.currentIndex]\n    }\n\n    pgnAsList(san) {\n        let pgnSoFar = this.pgnListSoFar()\n        let pgnList\n        if (!pgnSoFar) {\n            pgnList = []\n        } else {\n            pgnList = [...pgnSoFar]\n        }\n        let numPlys = this.plys.length\n        if(numPlys%2 !== 0) {\n            pgnList.push({\n                moveNumber:pgnList.length+1,\n                whitePly:san,\n                blackPly:''\n            })\n        } else {\n            let currMove = pgnList[pgnList.length-1]\n            currMove.blackPly = san\n            pgnList[pgnList.length-1] = currMove\n        }\n        return pgnList\n    }\n\n    currentMove() {\n        return Math.floor((this.currentIndex-1)/2);\n    }\n\n    pgnListSoFar(){\n        return this.plys[this.plys.length-1].pgnAsList\n    }\n\n    fen(){\n        return this.plys[this.currentIndex].fen\n    }\n\n    moveForward() {\n        return this.moveTo(this.currentIndex+1)\n    }\n    moveBack() {\n        return this.moveTo(this.currentIndex-1)\n    }\n    moveTo(index) {\n        if(index>=0 && index<this.plys.length) {\n            this.currentIndex = index\n        }\n        return this.plys[this.currentIndex]\n    }\n\n}","import React from 'react'\nimport ChessEcoCodes from 'chess-eco-codes'\nimport OpeningManager from '../app/OpeningManager'\nimport {Container, Row, Col, Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepForward, faStepBackward } from '@fortawesome/free-solid-svg-icons'\n\nexport default class Navigator extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.openingManager = new OpeningManager()\n        this.state = {\n            currentMove:0,\n          }        \n    }\n\n    shouldComponentUpdate(newProps) {\n        //console.log(newProps)\n        if(newProps.fen !== this.openingManager.fen()) {\n            if(newProps.move.from === \"ab1\") {\n                this.openingManager = new OpeningManager()\n                return true\n            }\n            this.openingManager.addPly(newProps.fen, newProps.move)\n            return true\n        }\n        return true\n    }\n\n    previous() {\n        let newState = this.openingManager.moveBack()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n    }\n\n    next() {\n        let newState = this.openingManager.moveForward()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n    }\n\n    moveTo(index) {\n        return () => {\n            let newState = this.openingManager.moveTo(index*2+1)\n            this.props.onChange(newState.fen, newState.move)\n            this.setState({currentMove:this.openingManager.currentMove()})\n        }\n    }\n\n    render(){\n        let opening = ChessEcoCodes(this.openingManager.fen())\n        if (opening) {\n            this.opening = opening.name\n            this.openingCode = opening.code\n        }\n        if(!this.openingManager.pgnListSoFar()) {\n            return <div></div>\n        }\n        return <Container>\n            <Row>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick= {this.previous.bind(this)}><FontAwesomeIcon icon={faStepBackward} /> prev</Button> </Col>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick = {this.next.bind(this)}>next <FontAwesomeIcon icon={faStepForward} /></Button></Col></Row>\n            <Row className=\"greyText\">{this.openingCode}: {this.opening}</Row>\n            {\n                this.openingManager.pgnListSoFar().map((move, index)=>\n                    <Row key={`${move.moveNumber}`} onClick={this.moveTo(index).bind(this)} className={`navCol ${this.openingManager.currentMove() === index? 'selectedMove':''}`}>\n                        <Col sm=\"12\" className = \"navMove border\">{`${move.moveNumber}. ${move.whitePly} ${move.blackPly}`}</Col>\n                    </Row>)\n            }\n        </Container>\n    }\n}","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  ListGroup,\n  ListGroupItem\n} from 'reactstrap'\n\nconst GlobalHeader = (props) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [modal, setModal] = useState(false);\n  \n  const toggle = () => setIsOpen(!isOpen)\n  const toggleModal = () => setModal(!modal)\n  \n  const launch = (url) => {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <img src=\"/opening-tree-logo.png\" height=\"32px\" width=\"32px\" alt=\"Logo\"/>\n        <NavbarBrand href=\"/\">&nbsp;OpeningTree.com</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n          </Nav>\n          <UncontrolledDropdown navbar>\n              <DropdownToggle className=\"bootNavColor\" nav caret>\n                More\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={toggleModal}>\n                  Acknowledgements\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"mailto:openingtreechess@gmail.com\")}>\n                  Feedback\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.reddit.com/message/compose/?to=QuickDrawMcGraw__\")}>\n                  Message me on reddit\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={launch(\"https://lichess.org/\")}>\n                  Lichess\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.lichess4545.com/\")}>\n                  Lichess4545\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.chess.com\")}>\n                  Chess.com\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n        </Collapse>\n      </Navbar>\n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Acknowledgements</ModalHeader>\n        <ListGroup className=\"acknowledgement\">\n        <ListGroupItem tag=\"a\" href=\"https://lichess.org/api\" target=\"_blank\" action>Lichess API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.chess.com/club/chess-com-developer-community\" target=\"_blank\" action>Chess.com API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/ruilisi/react-chessground\" target=\"_blank\" action>ChessGround</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jhlywa/chess.js\" target=\"_blank\" action>Chess.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/niklasf/eco\" target=\"_blank\" action>Eco</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://FreeLogoDesign.org\" target=\"_blank\" action>Free logo design</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/kevinludwig/pgn-parser\" target=\"_blank\" action>PGN Parser</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.reddit.com/r/chess\" target=\"_blank\" action>r/chess</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.reddit.com/r/anarchychess\" target=\"_blank\" action>r/anarchychess</ListGroupItem>\n        </ListGroup>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GlobalHeader\n","import request from 'request'\nimport { parse }  from './PGNParser'\n\nexport default class LichessIterator {\n\n    constructor(playerName, ready, showError, stopDownloading) {\n        let remainingBody = ''\n        let requestObject = request.get(`https://lichess.org/api/games/user/${encodeURIComponent(playerName)}`, { json: false }).on('error', (error)=> {\n            showError('failed to connect to lichess.org')\n        }).on('response',(response)=>{\n            if(response.statusCode === 404) {\n                showError('could not find lichess user ' + playerName)\n            } else if (response.statusCode !== 200) {\n                showError('could not load games of lichess user ' + playerName)\n            }\n        }).on('data', (data) => {\n            let newBody = remainingBody + data.toString();\n            let lastValidPGN = newBody.lastIndexOf(\"\\n\\n\\n\")\n            let body = newBody.slice(0, lastValidPGN).trim()\n\n            remainingBody = newBody.slice(lastValidPGN).trim()\n            let pgnsArray = body.split(\"\\n\\n\\n\")\n\n            let parsedPGNs = pgnsArray.map((pgnString)=> {\n                try {\n                    return parse(pgnString)[0]\n                } catch (e) {\n                    console.log(\"failed to parse pgn\", pgnString)\n                    console.log(e)\n                    return null\n                }\n            })\n\n            let continueProcessing = ready(parsedPGNs.filter((pgn)=>{\n                if(!pgn) {\n                    return false\n                }\n                return pgn.headers.Variant === \"Standard\" &&\n                    (pgn.headers.Black.toLowerCase() === playerName.toLowerCase() || pgn.headers.White.toLowerCase() === playerName.toLowerCase())\n            }))\n\n            if(!continueProcessing) {\n                requestObject.abort()\n            }\n        }).on('end', () => {\n            stopDownloading()\n        })\n    }\n}\n","import ChessWebAPI from 'chess-web-api'\nimport { parse }  from './PGNParser'\nimport request from 'request'\n\nexport default class ChessComIterator {\n\n    constructor(playerName, ready, showError, stopDownloading) {\n        let chessAPI = new ChessWebAPI({\n            queue: true,\n        });\n        let pendingRequests = 0;\n        let parseGames= (archiveResponse)=>{\n            let continueProcessing = ready(archiveResponse.body.games.filter(game=>game.rules===\"chess\").map(game=>parse(game.pgn)[0]))\n            if(!continueProcessing) {\n                //cancel all pending requests\n                while(chessAPI.dequeue()){}\n            }\n            pendingRequests--\n            if(pendingRequests<=0) {\n                stopDownloading()\n            }\n\n        }\n\n        let fetchAllGames = function(responseBody) {\n            responseBody.archives.reverse().forEach((archiveUrl)=>{\n                let components=archiveUrl.split('/')\n                let year=components[components.length-2]\n                let month=components[components.length-1]\n                pendingRequests++\n                chessAPI.dispatch(chessAPI.getPlayerCompleteMonthlyArchives, parseGames, [playerName, year, month]);\n            })\n        }\n        request(`https://api.chess.com/pub/player/${playerName}/games/archives`, function (error, response, body) {\n            if(error) {\n                showError('Could not connect to chess.com')\n            } else if(response.statusCode === 404) {\n                showError('Could not find chess.com user '+playerName)\n            } else if (response.statusCode !== 200) {\n                showError('Could not load games for chess.com user '+playerName)\n            } else {\n                if(response.body) {\n                    try{\n                        let jsonBody = JSON.parse(response.body)\n                        fetchAllGames(jsonBody)\n                    }catch(e) {\n                        showError('Could not find games for chess.com user '+playerName)\n                    }\n                }\n            }\n        });\n    }\n}","import {openingGraph} from './OpeningGraph'\nimport Chess from 'chess.js'\nimport LichessIterator from './LichessIterator'\nimport ChessComIterator from './ChessComIterator'\n\nexport default class PGNReader {\n    parsePGN(playerName, site, notify, showError, stopDownloading) {\n        this.continueProcessingGames = true\n        let handleResponse = (result) => {\n            if(!result || !result.length) {\n                return this.continueProcessingGames\n            }\n            setTimeout(() => {\n                this.parsePGNTimed(result, 0, playerName, notify, showError)\n            } ,1)\n            return this.continueProcessingGames\n        }\n        if(site === \"lichess\") {\n            new LichessIterator(playerName, handleResponse, showError, stopDownloading)\n        } else if(site === \"chesscom\") {\n            new ChessComIterator(playerName, handleResponse, showError, stopDownloading)\n        }\n\n        \n    }\n\n    parsePGNTimed(pgnArray, index,  playerName, notify, showError) {\n        if(index>= pgnArray.length) {\n            return\n        }\n        var pgn = pgnArray[index]\n        let playerColor = (pgn.headers.White.toLowerCase() === playerName.toLowerCase()) ? \"w\" : \"b\"\n        if(pgn.moves[0] && pgn.moves[0].move_number === 1) {\n            let chess = new Chess()\n            pgn.moves.forEach(element => {\n                let fen = chess.fen()\n                let move = chess.move(element.move)\n                if(!move){\n                    console.log('failed to load game ' + pgn)\n                    showError(\"Failed to load game\")\n                    return\n                }\n                if(move.color === playerColor) {\n                    openingGraph.addMoveForFen(fen, move, pgn.result)\n                } else {\n                    openingGraph.addMoveAgainstFen(fen,move, pgn.result)\n                }\n            })\n            let fen = chess.fen()\n            openingGraph.addGameResultOnFen(fen, this.gameResult(pgn))\n            this.continueProcessingGames = notify(1, openingGraph)\n        }\n            setTimeout(()=>{this.parsePGNTimed(pgnArray, index+1, playerName, notify, showError)},1)\n    }\n\n    gameResult(pgn) {\n        let result = pgn.headers.Result\n        let white = pgn.headers.White\n        let black = pgn.headers.Black\n        let url = pgn.headers.Link || pgn.headers.Site\n        return {\n            result:result,\n            white:white,\n            black:black,\n            url:url\n        }\n    }\n}","import React from 'react'\nimport PGNReader from '../app/PGNReader'\nimport {Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faList } from '@fortawesome/free-solid-svg-icons'\nimport { Radio,FormControlLabel,RadioGroup } from '@material-ui/core';\n\nexport default class PGNLoader extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            playerName:'',\n            site:'lichess'\n        }\n    }\n    playerNameChange(event) {\n        this.setState({\n            playerName:event.target.value\n        })\n    }\n    load() {\n        this.props.clear()\n        new PGNReader().parsePGN(this.state.playerName, this.state.site, this.props.notify, this.props.showError, this.stopDownloading.bind(this))\n        this.props.setDownloading(true)\n        this.props.onChange(\"playerName\", this.state.playerName)\n    }\n    stopDownloading() {\n        this.props.setDownloading(false)\n    }\n    siteChange(event) {\n        this.setState({site:event.target.value})\n    }\n    handleChange(playerColor){\n        return (()=>{\n                this.props.onChange(\"playerColor\", playerColor)\n        })\n    }\n    render() {\n        return <div>\n            <div className = \"pgnloadersection\">\n                <RadioGroup defaultValue=\"lichess\" onChange={this.siteChange.bind(this)}>\n                    <FormControlLabel className = \"sitelabel\" value=\"lichess\" control={<Radio color=\"primary\"/>} label={<span><img alt=\"lichess\" className=\"siteimage\" src=\"/lichesslogo.png\"/> lichess.org</span>} />\n                    <FormControlLabel className = \"sitelabel\" value=\"chesscom\" control={<Radio color=\"primary\"/>} label={<img alt=\"chess.com\" className=\"siteimage\" src=\"/chesscomlogo.png\"/>} />\n                </RadioGroup>\n            </div>\n            <div className = \"pgnloadersection\">\n                <input type=\"text\" \n                        onChange= {this.playerNameChange.bind(this)} \n                        name=\"playerName\" \n                        id=\"playerNameTextBox\"\n                        placeholder={`${this.state.site===\"lichess\"?\"lichess\":\"chess.com\"} username`}/>\n                <button onClick = {this.load.bind(this)}>Load</button> </div>\n                <div className=\"pgnloadersection\">playing as: \n                    <div>\n                    <Button onClick = {this.handleChange('white')} color = {this.props.settings.playerColor === 'white'?'secondary':'link'}>White</Button>\n                    <Button onClick = {this.handleChange('black')} color = {this.props.settings.playerColor === 'black'?'secondary':'link'}>Black</Button>\n                  </div>\n                </div>\n                {\n                    this.props.gamesProcessed>0?\n                    <div>\n                        <div className=\"pgnloadersection\">\n                            {`Games Loaded: ${this.props.gamesProcessed} `}{this.props.isDownloading?<span className=\"stopDownloading\">[<a href=\"#\" onClick={this.stopDownloading.bind(this)}>stop</a>]</span>:\"\"}\n                        </div>\n                        <div onClick = {()=>this.props.switchToMovesTab()} className=\"navLinkButton pgnloadersection\">\n                            <FontAwesomeIcon icon={faList} /> View Moves>>\n                        </div>\n                    </div>\n                        :\"\"\n                }\n\n        </div>\n    }\n}","import React from 'react'\nimport {Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRetweet, faTrashAlt, faRandom, faFastBackward, faDesktop } from '@fortawesome/free-solid-svg-icons'\nimport {Container, Row, Col} from 'reactstrap'\n\nexport default class SettingsView extends React.Component {\n    toggle(eventName){\n        return (()=> {\n            let newValue = this.props.settings[eventName] === 'white' ? 'black':'white'\n            this.props.onChange(eventName, newValue)\n        })\n    }\n    analyse() {\n        window.open(`https://www.lichess.org/analysis/${this.props.fen}`, '_blank');\n    }\n    render() {\n        return <div>\n            <Container>\n                <Row sm=\"12\">\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.toggle('orientation')} color=\"\"><h3><FontAwesomeIcon icon={faRetweet} /></h3> Flip board</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.toggle('playerColor')} color=\"\"><h3><FontAwesomeIcon icon={faRandom} /></h3> Player color</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.props.clear} color=\"\"><h3><FontAwesomeIcon icon={faTrashAlt} /></h3> Clear games</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.props.reset} color=\"\"><h3><FontAwesomeIcon icon={faFastBackward} /></h3> Starting position</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.analyse.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faDesktop} /></h3> Computer analysis</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    }\n}","import {Progress } from \"reactstrap\"\nimport React from 'react'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\n\nexport default class MovesList extends React.Component {\n\n    move(from, to) {\n        return () => {\n            this.props.onMove(from, to)\n        }\n    }\n    launch(url) {\n        return () => {\n            window.open(url, '_blank');\n        }\n    }\n    changePlayerColor() {\n        this.props.settingsChange('playerColor', this.props.settings.playerColor === \"white\"? \"black\":\"white\")\n    }\n\n    render(){\n        if(!this.props.settings.playerName) {\n            return <div className = \"infoMessage\" >No moves to show. Please enter a lichess user name in the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and click \"Load\"</div>\n        }\n    return <div>{(this.props.gameResults && this.props.gameResults.length>0)?this.resultsTable():null}\n                {(this.props.movesToShow && this.props.movesToShow.length>0)?this.movesTable():null}</div>\n    }\n    resultsTable() {\n        return <Table>\n            <TableBody>\n                {\n                this.props.gameResults.map(result => \n                    <TableRow className=\"moveRow\" key = {`${result.url}`} onClick={this.launch(result.url)}>\n                        <TableCell>\n                            {result.result===\"1-0\"?<b>{result.white}</b>:result.white} {result.result} {result.result === \"0-1\"?<b>{result.black}</b>:result.black}\n                        </TableCell>\n                    </TableRow>\n                )}\n            </TableBody>\n        </Table>\n    }\n    movesTable() {\n        return <Table>\n        <TableHead>\n        <TableRow>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Move</b></TableCell>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Games</b></TableCell>\n            <TableCell><b>Results</b></TableCell>\n        </TableRow></TableHead>  \n        <TableBody>\n        {\n        this.props.movesToShow.map(move => \n            <TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san}</TableCell>\n                <TableCell size=\"small\" className=\"smallCol\">{move.count}</TableCell>\n                <TableCell>\n                    <Progress className = \"border\" multi>\n                        <Progress bar className=\"whiteMove\" value={`${move.whiteWins/move.count*100}`}>{move.whiteWins/move.count>0.1?move.whiteWins:''}</Progress>\n                        <Progress bar className=\"grayMove\" value={`${move.draws/move.count*100}`}>{move.draws/move.count>0.1?move.draws:''}</Progress>\n                        <Progress bar className=\"blackMove\" value={`${move.blackWins/move.count*100}`}>{move.blackWins/move.count>0.1?move.blackWins:''}</Progress>\n                    </Progress>\n                </TableCell>\n            </TableRow>\n        )}\n    </TableBody>\n      {\n        this.props.movesToShow?\n        <TableFooter><TableRow>\n        <TableCell colSpan=\"3\">\n            Showing moves that have been \n            played {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n            this position. <b>{this.props.settings.playerName}</b> is playing as {this.props.settings.playerColor} [<a onClick={this.changePlayerColor.bind(this)} href=\"#\">change</a>].\n            </TableCell></TableRow></TableFooter>\n            :<TableFooter></TableFooter>\n        }\n    </Table>\n    }\n}","import React from 'react'\nimport PGNLoader from './PGNLoader'\nimport SettingsView from './Settings'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faList, faCog } from '@fortawesome/free-solid-svg-icons'\nimport MovesList from './MovesList';\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            activeTab:'user',\n            \n          }\n      }\n    toggle(tab) {\n        if(this.state.activeTab !== tab) {\n            this.setState({activeTab:tab})\n        }\n    }\n    switchToUserTab() {\n      this.toggle('user')\n    }\n    switchToMovesTab() {\n      this.toggle('moves')\n    }\n\n    render(){\n        return <div>\n            <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'user' })}\n            onClick={() => { this.toggle('user'); }}\n          >\n            <FontAwesomeIcon icon={faUser} /> User\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'moves' })}\n            onClick={() => { this.toggle('moves'); }}\n          >\n            <FontAwesomeIcon icon={faList} /> Moves\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'settings' })}\n            onClick={() => { this.toggle('settings'); }}\n          >\n            <FontAwesomeIcon icon={faCog} /> Controls\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={this.state.activeTab}>\n        <TabPane tabId=\"user\">\n            <PGNLoader \n              switchToMovesTab={this.switchToMovesTab.bind(this)} \n              clear = {this.props.clear} \n              gamesProcessed = {this.props.gamesProcessed} \n              settings = {this.props.settings} \n              onChange = {this.props.settingsChange} \n              notify = {this.props.updateProcessedGames}\n              showError = {this.props.showError}\n              setDownloading = {this.props.setDownloading}\n              isDownloading = {this.props.isDownloading}\n              />\n            </TabPane>\n        <TabPane tabId=\"moves\">\n            <MovesList \n              switchToUserTab={this.switchToUserTab.bind(this)} \n              movesToShow={this.props.movesToShow} \n              gameResults={this.props.gameResults}\n              onMove={this.props.onMove}\n              settings={this.props.settings}\n              turnColor={this.props.turnColor}\n              settingsChange={this.props.settingsChange}\n              />\n        </TabPane>\n        <TabPane tabId=\"settings\">\n          <Row>\n            <Col sm=\"6\">\n            <SettingsView fen={this.props.fen} settings={this.props.settings} clear = {this.props.clear} reset = {this.props.reset} onChange = {this.props.settingsChange}/>\n            \n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n        </div>\n    }\n}","import Chess from 'chess.js'\n\nfunction turnColor() {\n    return fullTurnName(this.chess.turn())\n}\n\nfunction fullTurnName(shortName) {\n    return shortName === 'w' ? 'white' : 'black'\n}\n\nfunction playerColor() {\n    return this.state.settings.playerColor\n}\n\nfunction brushes() {\n    if(this.playerColor() === this.turnColor()) {\n        return this.forBrushes\n    }\n    return this.againstBrushes\n}\n\nfunction calcMovable() {\nconst dests = {}\n    this.chess.SQUARES.forEach(s => {\n        const ms = this.chess.moves({square: s, verbose: true})\n        if (ms.length) dests[s] = ms.map(m => m.to)\n    })\n    return {\n        free: false,\n        dests,\n        color: this.turnColor()\n    }\n}\n\nfunction orientation() {\n    return this.state.settings.orientation\n}\n\nfunction onMove(from, to) {\n    const chess = this.chess\n    let move = chess.move({ from, to, promotion: 'q'})\n    this.setState({ fen: chess.fen(), lastMove: move})\n}\n\nfunction navigateTo(fen, previousMove){\n    this.chess = new Chess(fen)\n    this.setState({fen:fen, lastMove:previousMove})\n\n}\nfunction updateProcessedGames(n, openingGraph) {\n    this.setState({\n    gamesProcessed: this.state.gamesProcessed+n,\n    openingGraph: openingGraph\n    })\n    \n    return this.state.downloadingGames\n}\nfunction moveToShape(move) {\n    return {\n        orig:move.orig,\n                    dest: move.dest,\n                    brush: this.brushes()[move.level]\n    }\n}\n\nfunction autoShapes() {\n    var moves = this.movesToShow()\n    if(moves) {\n        var shapes = moves.map(this.moveToShape.bind(this))\n        return this.fillArray(shapes,  25)\n    }\n    return this.fillArray([], 25) // dummy arrow to clear out existing arrows\n}\n\nfunction movesToShow() {\n    var moves\n    if (this.turnColor() === this.playerColor()) {\n        moves = this.state.openingGraph.movesForFen(this.chess.fen())\n    } else {\n        moves = this.state.openingGraph.movesAgainstFen(this.chess.fen())\n    } \n    return moves?moves.sort((a,b)=>b.count-a.count):moves\n}\n\nfunction gameResults() {\n    return this.state.openingGraph.gameResultsForFen(this.chess.fen())\n}\n\nfunction fillArray(arr, len) {\n    for (var i = arr.length; i < len; i++) {\n        arr.push({'orig':'i'+i, 'dest':'i'+(i+1), brush:this.brushes()[0]});\n    }\n    return arr;\n}\n\n\n\nfunction reset() {\n    this.chess = new Chess()\n    this.setState({fen: this.chess.fen(), lastMove:{from:'ab1',to:'ab2', san:''}})\n}\n\nfunction clear() {\n    this.state.openingGraph.clear()\n    this.state.gamesProcessed = 0\n    this.reset()\n}\n\nfunction settingsChange(name, value) {\n    let settings = this.state.settings\n    settings[name] = value;\n    this.setState({\n        'settings':settings\n    })\n}\nfunction showError(message) {\n    this.setState({errorMessage:message})\n}\n\nfunction closeError() {\n    this.setState({errorMessage:''})\n}\n\nfunction setDownloading(val) {\n    this.setState({downloadingGames:val})\n}\n\nfunction addStateManagement(obj){\n    obj.orientation  = orientation\n    obj.turnColor = turnColor\n    obj.calcMovable = calcMovable\n    obj.onMove = onMove\n    obj.autoShapes = autoShapes\n    obj.updateProcessedGames = updateProcessedGames\n    obj.settingsChange = settingsChange\n    obj.reset = reset\n    obj.clear = clear\n    obj.navigateTo = navigateTo\n    obj.playerColor = playerColor\n    obj.fillArray = fillArray\n    obj.brushes = brushes\n    obj.moveToShape = moveToShape\n    obj.movesToShow = movesToShow\n    obj.gameResults = gameResults\n    obj.showError = showError\n    obj.closeError = closeError\n    obj.setDownloading = setDownloading\n}\n\nexport {addStateManagement}","import React from 'react'\nimport Chess from 'chess.js'\nimport Chessground from 'react-chessground'\nimport 'react-chessground/dist/styles/chessground.css'\nimport {openingGraph} from '../app/OpeningGraph'\nimport Navigator from './Navigator'\nimport GlobalHeader from './GlobalHeader'\nimport {Container, Row, Col} from 'reactstrap'\nimport ControlsContainer from './ControlsContainer'\nimport {addStateManagement} from './StateManagement'\nimport {Snackbar} from '@material-ui/core'\nimport Alert from '@material-ui/lab/Alert';\n\nexport default class MainContainer extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.chess = new Chess()\n    addStateManagement(this)\n    this.state = {\n        fen: this.chess.fen(),\n        lastMove: null,\n        gamesProcessed:0,\n        openingGraph:openingGraph,\n        settings:{\n          playerName:'',\n          orientation:'white',\n          playerColor:'white'\n        },\n        errorMessage:'',\n        downloadingGames:false\n      }\n    this.forBrushes = ['paleGrey', 'paleGreen', 'green']\n    this.againstBrushes = ['paleRed', 'paleRed', 'red']\n  }\n\n\n\n  render() {\n    let lastMoveArray = this.state.lastMove ? [this.state.lastMove.from, this.state.lastMove.to] : null\n    let snackBarOpen = this.state.errorMessage?true:false\n    return <div> \n        <GlobalHeader/>\n        <Container className=\"mainContainer\">\n          <Row><Col lg=\"2\"><Navigator fen = {this.state.fen} move={this.state.lastMove} onChange ={this.navigateTo.bind(this)}/>\n    </Col><Col lg=\"6\"><Chessground\n      width={512}\n      height={512}\n      n={this.state.n}\n      orientation={this.orientation()}\n      turnColor={this.turnColor()}\n      movable={this.calcMovable()}\n      \n      lastMove={lastMoveArray}\n      fen={this.state.fen}\n      onMove={this.onMove.bind(this)}\n      drawable ={{\n        enabled: true,\n        visible: true,\n        autoShapes: this.autoShapes()\n      }}\n      style={{ margin: 'auto' }}\n    />\n    </Col><Col lg=\"4\"><ControlsContainer fen={this.state.fen}\n                gamesProcessed={this.state.gamesProcessed} \n                updateProcessedGames={this.updateProcessedGames.bind(this)}\n                settingsChange={this.settingsChange.bind(this)}\n                settings={this.state.settings}\n                reset={this.reset.bind(this)}\n                clear={this.clear.bind(this)}\n                movesToShow={this.movesToShow()}\n                gameResults={this.gameResults()}\n                onMove={this.onMove.bind(this)}\n                turnColor={this.turnColor()}\n                showError={this.showError.bind(this)}\n                setDownloading={this.setDownloading.bind(this)}\n                isDownloading={this.state.downloadingGames}\n                /></Col>\n    </Row></Container>\n    <Snackbar anchorOrigin={{ vertical:'top', horizontal:\"center\" }} open={snackBarOpen} autoHideDuration={6000} onClose={this.closeError.bind(this)}>\n    <Alert onClose={this.closeError.bind(this)} severity=\"warning\">\n      {this.state.errorMessage}\n    </Alert>\n  </Snackbar>\n    </div>\n  }\n}\n","import ReactDOM from 'react-dom'\nimport MainContainer from './pres/MainContainer'\nimport React from 'react'\n\nReactDOM.render(<MainContainer />, document.getElementById('root'))\n"],"sourceRoot":""}