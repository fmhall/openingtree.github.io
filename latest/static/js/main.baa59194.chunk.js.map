{"version":3,"sources":["app/Constants.js","app/Common.js","app/util.js","app/OpeningGraph.js","app/OpeningManager.js","app/Analytics.js","pres/Navigator.js","pres/GlobalHeader.js","pres/loader/Common.js","pres/loader/Source.js","pres/loader/Dropzone.js","pres/loader/User.js","pres/loader/TimeControlLabels.js","pres/loader/FilterLabels.js","pres/loader/AdvancedFilters.js","pres/loader/Filters.js","app/iterator/LichessIterator.js","app/iterator/ChessComIterator.js","app/iterator/PGNFileIterator.js","app/PGNReader.js","pres/loader/Actions.js","pres/loader/PGNLoader.js","pres/Settings.js","pres/ReportControls.js","pres/MovesList.js","pres/ControlsContainer.js","pres/StateManagement.js","pres/MainContainer.js","index.js","app/PGNParser.js"],"names":["ROOT_FEN","LICHESS_TIME_CONTROLS","CHESS_DOT_COM_TIME_CONTROLS","TIME_CONTROL_LABELS","DP_TABLE","createSubObjectWithProperties","mainObject","properties","subObject","forEach","property","simplifiedFen","fen","fenComponents","split","length","getTimeControlsArray","site","timeControlState","selected","Common","filter","timeControl","monthLabels","getTimeframeSteps","steps","year","value","startYear","currentYear","Date","getFullYear","currentMonth","getMonth","push","toLongLabel","fromLongLabel","i","month","getSelectedTimeFrameData","timeframe","timeframeSteps","fromIndex","toIndex","fromTimeframe","toTimeframe","currentDate","label","fromMonth","frmYear","getYear","fromTimeStamp","getTimeStampInfoFor","fromYear","toYear","toMonth","toTimeStamp","minOrMax","getTime","getDate","getDaysInMonth","isOpponentEloInSelectedRange","elo","range","OpeningGraph","this","graph","Graph","fullFen","resultObject","getNodeFromGraph","gameResults","playerColor","targetNode","Constants","newDetails","getUpdatedMoveDetails","details","fullSourceFen","fullTargetFen","move","currNode","movePlayedBy","createOrGetMoveNode","playedBy","playedByMax","Math","max","count","nodes","get","GraphNode","set","movesPlayedNode","movePlayed","san","GraphMove","currentMoveDetails","date","than","whiteWin","blackWin","draw","opponentElo","resultInt","result","blackElo","whiteElo","bestWin","parseInt","bestWinGame","worstLoss","worstLossGame","lastPlayedGame","blackWins","whiteWins","draws","totalOpponentElo","Array","from","entries","map","entry","gMove","orig","dest","to","level","levelFor","moveCount","maxCount","Map","openingGraph","OpeningManager","plys","pgn","currentIndex","slice","pgnAsList","moveForward","pgnList","pgnSoFar","pgnListSoFar","moveNumber","whitePly","blackPly","currMove","floor","moveTo","index","trackEvent","category","action","ReactGA","event","initialize","Navigator","props","openingManager","state","currentMove","window","addEventListener","keyHandler","bind","e","keyCode","previous","next","newProps","addPly","device","newState","moveBack","onChange","setState","opening","ChessEcoCodes","name","openingCode","code","Container","Row","Col","lg","className","Button","color","onClick","icon","faStepBackward","faStepForward","key","sm","React","Component","GlobalHeader","useState","isOpen","setIsOpen","modal","setModal","toggleModal","launch","url","open","Navbar","light","expand","src","height","width","alt","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","divider","Modal","toggle","ModalHeader","ListGroup","ListGroupItem","tag","target","ModalFooter","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","getNumberIcon","n","Source","source","addNumber","TransitionComponent","TransitionProps","timeout","expandedPanel","handleExpansionChange","ExpansionPanelSummary","expandIcon","aria-controls","id","getSourceOption","ExpansionPanelDetails","RadioGroup","siteChange","FormControlLabel","control","Radio","Dropzone","acceptedFiles","dropzoneText","filesChange","dropzoneParagraphClass","showFileNames","useChipsForPreview","previewChipProps","dropzoneClass","filesLimit","maxFileSize","User","playerName","files","playerNameError","showError","validateInputDetailsSet","playerDetailsChange","TextField","editPlayerName","variant","helperText","error","getPlayerNameInput","disabled","getSummary","getInputsToShow","Divider","ExpansionPanelActions","size","setPlayerDetails","timeClasses","selectedTimeControls","unselectedTimeControls","includesAll","arr","subArray","every","v","includes","getTimeControlLabel","timeClass","join","lichessTimeControlLabel","AdvancedFilters","currentlyOpenAdvancedFilter","timeframeMarks","downloadLimitMarks","eloRangeMarks","filterName","subSectionComponent","rated","advancedFilters","toggleRated","setCurrentlyOpenAdvancedFilter","getTimeControlFilters","getTimeFrameFilters","selectedEloRange","getEloRangeFilters","downloadLimit","getDownloadLimitFilters","Slider","handleDownloadLimitChange","valueLabelDisplay","valueLabelFormat","val","step","min","marks","handleTimeframeChange","handleEloRangeChange","firstRow","middleRow","lastRow","colWidth","FormControl","FormGroup","getTimeControlFilterRow","controls","firstColumnWidth","position","clsName","Checkbox","checked","handleTimeControlChange","title","changeCallback","children","getFilters","isAdvancedFiltersOpen","filtersSet","Object","assign","defaultAdvancedFilters","newValue","filtersChange","areAdvancedFiltersApplied","MuiCollapse","playerColorChange","toggleState","faCaretUp","faCaretDown","setFilters","LichessIterator","ready","remainingBody","playerNameFilter","encodeURIComponent","colorFilter","ratedFilter","selectedTimeFrameData","timeSinceFilter","timeUntilFilter","perfFilter","requestObject","request","json","on","response","statusCode","data","newBody","toString","lastValidPGN","lastIndexOf","body","trim","parsedPGNs","pgnString","parse","console","log","headers","Variant","BlackElo","WhiteElo","abort","ChessComIterator","chessAPI","ChessWebAPI","queue","pendingRequests","parseGames","archiveResponse","games","game","rules","username","toLowerCase","ratedMode","time_class","black","rating","white","dequeue","fetchAllGames","responseBody","archives","reverse","archiveUrl","components","archiveMonth","archiveYear","shouldFetchGamesFromArchive","dispatch","getPlayerCompleteMonthlyArchives","jsonBody","JSON","reader","FileReader","onload","evt","onerror","onloadend","readAsText","PGNReader","totalGames","pendingGames","pendingDownloads","streamsaver","mitm","fileWriter","close","header","moves","moveObject","shouldDownloadToFile","notify","stopDownloading","continueProcessingGames","fileStream","createWriteStream","getWriter","encoder","TextEncoder","processor","write","encode","getPgnString","then","setTimeout","parsePGNTimed","PGNFileIterator","pgnArray","move_number","chess","Chess","gameResult","element","sourceFen","targetFen","addMoveForFen","addGameResultOnFen","addResultToRoot","White","Black","Link","Site","Actions","unload","pgnReader","isGamesSubsectionOpen","removeEventListener","fetchPGNFromSite","readPgn","clear","setDownloading","style","load","startIcon","disableElevation","download","gamesProcessed","isDownloading","stopDownloadingAction","switchToMovesTab","faList","Fade","mainComponent","in","PGNLoader","settings","panel","newExpanded","filters","SettingsView","eventName","reset","faRetweet","clearAction","faTrashAlt","resetAction","faFastBackward","analyse","faDesktop","ControlsContainer","stopPropagation","copyText","document","getElementById","select","setSelectionRange","execCommand","showInfo","simplifiedView","multiline","rowsMax","inputProps","fontSize","spellCheck","copyFen","moveDetails","getFenField","switchToUserTab","faUser","performanceDetails","totalElo","averageElo","round","score","scorePercentage","ratingChange","performanceRating","Number","isInteger","toFixed","abs","getPerformanceDetails","Table","eatClicks","TableHead","TableRow","TableCell","TableBody","launchGame","faExternalLinkAlt","TableFooter","colSpan","rel","MovesList","openPerformanceIndex","onMove","prevProps","prevState","turnColor","moveIndex","resultsTable","movesTable","whitePlayer","player","blackPlayer","performancePopoverOpen","openMove","movesToShow","Popover","trigger","placement","togglePerformancePopover","hasMoves","sampleResultWhite","sampleResultBlack","sampleResult","faInfoCircle","getPopover","Progress","multi","bar","activeTab","tab","tabs","NavItem","NavLink","classnames","active","faChartBar","faCog","TabContent","TabPane","tabId","settingsChange","updateProcessedGames","getDetailsForFen","turn","brushes","forBrushes","againstBrushes","calcMovable","dests","SQUARES","s","ms","square","verbose","m","free","orientation","promotion","lastMove","onMoveAction","navigateTo","previousMove","totalGamesProcessed","downloadingGames","moveToShape","brush","autoShapes","shapes","fillArray","movesForFen","sort","a","b","gameResultsForFen","len","message","trackingLabel","messageSeverity","closeError","MainContainer","obj","chessboardWidth","getChessboardWidth","innerWidth","lastMoveArray","snackBarOpen","order","xs","movable","drawable","enabled","visible","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","ReactDOM","render","pageview","location","pathname","peg$SyntaxError","expected","found","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","parts","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toUpperCase","replace","j","descriptions","type","describeExpected","describeFound","module","exports","SyntaxError","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","h","c","mr","r","reduce","acc","x","comment","make_game","peg$c4","peg$c6","peg$literalExpectation","peg$c7","peg$c8","peg$classExpectation","peg$c10","peg$c11","peg$c12","peg$c13","peg$c15","peg$c16","peg$c17","chars","peg$c19","peg$c21","peg$c23","peg$c25","peg$c27","peg$c29","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c39","peg$c41","peg$c42","peg$c43","peg$c45","peg$c47","peg$c49","peg$c51","peg$c53","peg$c57","peg$c58","peg$c59","peg$c61","peg$c63","peg$c65","peg$c67","peg$c69","peg$c71","peg$c73","peg$c74","peg$c75","peg$c77","peg$c79","peg$c82","peg$c84","peg$c85","flatten","isArray","peg$c86","mn","peg$c88","nags","com","peg$c92","peg$c94","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","s2","s3","s4","s5","peg$parsegame","peg$parsenewline","charAt","peg$parseEOF","g","s6","s7","peg$parseheader","peg$parseheaders","peg$parsecomment","peg$parsewhitespace","peg$parsemovetext","peg$parseresult","peg$c2","peg$parsedouble_quote","peg$parseinteger","test","peg$parsews","peg$parsesymbol","peg$parsestring","hn","hv","make_header","peg$parsepiece","peg$parserank","peg$parsefile","peg$parsecapture","peg$parseperiod","substr","peg$parsesquare","peg$parsenag","peg$parsecomment_chars","peg$parsepawn_half_move","peg$parsepromotion","peg$parsehalf_move","peg$parsecontinuation","peg$parsecastle_half_move","peg$parsepiece_disambiguation_half_move","peg$parsepiece_half_move","peg$parsecheck","peg$parsecheckmate","peg$parsenag_alts","peg$parsemove","s8","s9","peg$parsemove_number","peg$parserav","ravs","make_move","first","rest","concat"],"mappings":"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","file":"static/js/main.baa59194.chunk.js","sourcesContent":["export const TIME_CONTROL_ULTRA_BULLET = \"ultraBullet\"\nexport const TIME_CONTROL_BULLET = \"bullet\"\nexport const TIME_CONTROL_BLITZ = \"blitz\"\nexport const TIME_CONTROL_RAPID = \"rapid\"\nexport const TIME_CONTROL_CLASSICAL = \"classical\"\nexport const TIME_CONTROL_CORRESPONDENCE = \"correspondence\"\nexport const TIME_CONTROL_DAILY = \"daily\"\nexport const FILTER_NAME_RATED = \"rated\"\nexport const FILTER_NAME_SELECTED_TIMEFRAME = \"selectedTimeframe\"\nexport const FILTER_NAME_DOWNLOAD_LIMIT = \"downloadLimit\"\nexport const FILTER_NAME_ELO_RANGE = \"eloRange\"\n\nexport const SITE_LICHESS = \"lichess\"\nexport const SITE_CHESS_DOT_COM = \"chesscom\"\nexport const SITE_PGN_FILE = \"pgnfile\"\n\nexport const MAX_DOWNLOAD_LIMIT = 2000\nexport const MAX_ELO_RATING = 3000\n\nexport const EVENT_CATEGORY_PGN_LOADER = \"loader\"\nexport const EVENT_CATEGORY_MOVES_LIST = \"moves\"\nexport const EVENT_CATEGORY_CONTROLS = \"controls\"\nexport const EVENT_CATEGORY_NAVIGATOR = \"navigator\"\nexport const EVENT_CATEGORY_CHESSBOARD = \"chessboard\"\nexport const EVENT_CATEGORY_ERROR = \"error\"\n\nexport const ROOT_FEN = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n\nexport const PLAYER_COLOR_WHITE = 'white'\nexport const PLAYER_COLOR_BLACK = 'black'\n\nexport const LOADER_ANIMATION_DURATION_MS = 500","import * as Constants from './Constants'\n\nexport const LICHESS_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_ULTRA_BULLET,\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_CLASSICAL,\n    Constants.TIME_CONTROL_CORRESPONDENCE\n]\nexport const CHESS_DOT_COM_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_DAILY,\n]\n\nexport const TIME_CONTROL_LABELS = {\n    [Constants.TIME_CONTROL_ULTRA_BULLET]: \"Ultrabullet\",\n    [Constants.TIME_CONTROL_BULLET]: \"Bullet\",\n    [Constants.TIME_CONTROL_BLITZ]: \"Blitz\",\n    [Constants.TIME_CONTROL_RAPID]: \"Rapid\",\n    [Constants.TIME_CONTROL_CLASSICAL]: \"Classical\",\n    [Constants.TIME_CONTROL_CORRESPONDENCE]: \"Correspondence\",\n    [Constants.TIME_CONTROL_DAILY]: \"Daily\"\n}\n\nexport const DP_TABLE = {\n    \"100\":800,\n    \"99\":677,\n    \"98\":589,\n    \"97\":538,\n    \"96\":501,\n    \"95\":470,\n    \"94\":444,\n    \"93\":422,\n    \"92\":401,\n    \"91\":383,\n    \"90\":366,\n    \"89\":351,\n    \"88\":336,\n    \"87\":322,\n    \"86\":309,\n    \"85\":296,\n    \"84\":284,\n    \"83\":273,\n    \"82\":262,\n    \"81\":251,\n    \"80\":240,\n    \"79\":230,\n    \"78\":220,\n    \"77\":211,\n    \"76\":202,\n    \"75\":193,\n    \"74\":184,\n    \"73\":175,\n    \"72\":166,\n    \"71\":158,\n    \"70\":149,\n    \"69\":141,\n    \"68\":133,\n    \"67\":125,\n    \"66\":117,\n    \"65\":110,\n    \"64\":102,\n    \"63\":95,\n    \"62\":87,\n    \"61\":80,\n    \"60\":72,\n    \"59\":65,\n    \"58\":57,\n    \"57\":50,\n    \"56\":43,\n    \"55\":36,\n    \"54\":29,\n    \"53\":21,\n    \"52\":14,\n    \"51\":7,\n    \"50\":0,\n    \"49\":-7,\n    \"48\":-14,\n    \"47\":-21,\n    \"46\":-29,\n    \"45\":-36,\n    \"44\":-43,\n    \"43\":-50,\n    \"42\":-57,\n    \"41\":-65,\n    \"40\":-72,\n    \"39\":-80,\n    \"38\":-87,\n    \"37\":-95,\n    \"36\":-102,\n    \"35\":-110,\n    \"34\":-117,\n    \"33\":-125,\n    \"32\":-133,\n    \"31\":-141,\n    \"30\":-149,\n    \"29\":-158,\n    \"28\":-166,\n    \"27\":-175,\n    \"26\":-184,\n    \"25\":-193,\n    \"24\":-202,\n    \"23\":-211,\n    \"22\":-220,\n    \"21\":-230,\n    \"20\":-240,\n    \"19\":-251,\n    \"18\":-262,\n    \"17\":-273,\n    \"16\":-284,\n    \"15\":-296,\n    \"14\":-309,\n    \"13\":-322,\n    \"12\":-336,\n    \"11\":-351,\n    \"10\":-366,\n    \"9\":-383,\n    \"8\":-401,\n    \"7\":-422,\n    \"6\":-444,\n    \"5\":-470,\n    \"4\":-501,\n    \"3\":-538,\n    \"2\":-589,\n    \"1\":-677,\n    \"0\":-800,\n}","import * as Constants from '../app/Constants'\nimport * as Common from '../app/Common'\n\nexport function createSubObjectWithProperties(mainObject, properties) {\n    let subObject = {}\n    properties.forEach(property => {\n        subObject[property] = mainObject[property]\n    });\n    return subObject\n}\nexport function simplifiedFen(fen) {\n    let fenComponents = fen.split(' ')\n    if(fenComponents.length <=4) {\n        return fen\n    }\n    //exclude move and halfMove components\n    return `${fenComponents[0]} ${fenComponents[1]} ${fenComponents[2]}`\n}\n\nexport function getTimeControlsArray(site,timeControlState, selected) {\n    let allTimeControls = site === Constants.SITE_LICHESS ? \n        Common.LICHESS_TIME_CONTROLS : Common.CHESS_DOT_COM_TIME_CONTROLS\n    return allTimeControls.filter((timeControl)=>!!timeControlState[timeControl] === selected)\n}\nlet monthLabels = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n]\nexport function getTimeframeSteps() {\n    let steps = [{\n        year:2007,\n        value:0\n    }]\n    let value = 1;\n    let startYear = 2010\n    let currentYear = new Date().getFullYear()\n    let currentMonth = new Date().getMonth()\n    while(startYear < currentYear-1) {\n        steps.push({\n            toLongLabel:`${monthLabels[11]} ${startYear}`,\n            fromLongLabel:`${monthLabels[0]} ${startYear}`,\n            year:startYear,\n            value:value\n        })\n        startYear++\n        value++\n    }\n    for(let i=11;i>0;i--) {\n\n        let month = (currentMonth+12-i)%12\n        let year = month<currentMonth?currentYear:currentYear-1\n        steps.push({\n            fromLongLabel: `${monthLabels[month]} ${year}`,\n            toLongLabel: `${monthLabels[month]} ${year}`,\n            month:month,\n            year: year,\n            value:value\n        })\n        value++\n    }\n    steps.push({\n        month:12,\n        year: currentYear,\n        value:value\n    })\n    return steps\n}\n\nexport function getSelectedTimeFrameData(timeframe, timeframeSteps) {\n    let fromIndex = timeframe[0]\n    let toIndex = timeframe[1]\n    let fromTimeframe = timeframeSteps[fromIndex]\n    let toTimeframe = timeframeSteps[toIndex]\n    \n    if(fromIndex === timeframeSteps.length-1 && toIndex === timeframeSteps.length-1) {\n        let currentDate = new Date()\n        return {\n            label:\"Current month\",\n            fromMonth:currentDate.getMonth(),\n            frmYear:currentDate.getYear(),\n            fromTimeStamp:getTimeStampInfoFor(currentDate.getMonth(), currentDate.getYear(), \"min\")\n        }\n    }\n    if(fromIndex === 0 && toIndex === 0) {\n        return {label:\"Anytime\"}\n    }\n    if(fromIndex === 0 && toIndex === timeframeSteps.length-1) {\n        return {label:\"Anytime\"}\n    }\n    if(toIndex === timeframeSteps.length-1) {\n        let month = fromTimeframe.month ? fromTimeframe.month : 0\n        return {\n            label:`Since ${fromTimeframe.fromLongLabel}`,\n            fromYear: fromTimeframe.year,\n            fromMonth: month,\n            fromTimeStamp: getTimeStampInfoFor(month, fromTimeframe.year, \"min\")\n        }\n    }\n    if(fromIndex === 0) {\n        let month = toTimeframe.month ? toTimeframe.month : 11\n        return {\n            label:`Until ${toTimeframe.toLongLabel}`,\n            toYear: toTimeframe.year,\n            toMonth: month,\n            toTimeStamp: getTimeStampInfoFor(month, toTimeframe.year, \"max\")\n        }\n    }\n    let fromMonth = fromTimeframe.month ? fromTimeframe.month : 0\n    let toMonth = toTimeframe.month ? toTimeframe.month : 11\n    return {\n        label:`From ${fromTimeframe.fromLongLabel} to ${toTimeframe.toLongLabel}`,\n        fromYear: fromTimeframe.year,\n        fromMonth: fromMonth,\n        fromTimeStamp: getTimeStampInfoFor(fromMonth, fromTimeframe.year, \"min\"),\n        toYear: toTimeframe.year,\n        toMonth: toMonth,\n        toTimeStamp: getTimeStampInfoFor(toMonth, toTimeframe.year, \"max\")\n    }\n}\n\nfunction getTimeStampInfoFor(month, year, minOrMax) {\n    if(minOrMax === \"min\") {\n        return new Date(year, month).getTime()\n    } else {\n        return new Date(year,month,getDaysInMonth(year, month)).getTime()\n    }\n}\n\nfunction getDaysInMonth(year,month) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\nexport function getPerformanceDetails(totalElo, white, draws, black, playerColor) {\n    let totalGames = white + draws + black\n    let averageElo = Math.round(totalElo/totalGames)\n    let playerWins = playerColor===Constants.PLAYER_COLOR_WHITE?white:black\n    let score = playerWins+(draws/2)\n    let scorePercentage = Math.round(score*100/totalGames)\n    let ratingChange = Common.DP_TABLE[scorePercentage]\n    return {\n        performanceRating:averageElo+ratingChange,\n        averageElo: averageElo,\n        score:`${Number.isInteger(score)?score:score.toFixed(1)}/${totalGames}`,\n        ratingChange:`${ratingChange===0?'':(ratingChange>0?'+':'-')}${Math.abs(ratingChange)}`\n    }\n}\n\nexport function isOpponentEloInSelectedRange(elo, range) {\n    if(range[1]===Constants.MAX_ELO_RATING) {\n        return elo>=range[0]\n    }\n    return elo<=range[1] && elo>=range[0]\n}\n\nexport function isDateMoreRecentThan(date, than) {\n    // give priority to game which has a date\n    if(!than) {\n        return false\n    }\n    if(!date) {\n        return true\n    } \n    return new Date(date)>new Date(than)\n}","import {simplifiedFen, isDateMoreRecentThan} from './util'\nimport * as Constants from './Constants'\n\nclass OpeningGraph {\n    constructor() {\n        this.graph=new Graph()\n    }\n    clear() {\n        this.graph = new Graph()\n    }\n    addGameResultOnFen(fullFen, resultObject) {\n        var currNode = this.getNodeFromGraph(fullFen)\n        currNode.gameResults.push(resultObject)\n    }\n    addResultToRoot(resultObject, playerColor) {\n        var targetNode = this.getNodeFromGraph(Constants.ROOT_FEN)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject, playerColor)\n        targetNode.details = newDetails\n    }\n\n    getDetailsForFen(fullFen) {\n        return this.getNodeFromGraph(simplifiedFen(fullFen)).details\n    }\n\n    addMoveForFen(fullSourceFen, fullTargetFen, move, resultObject, playerColor) {\n        var targetNode = this.getNodeFromGraph(fullTargetFen)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject, playerColor)\n        targetNode.details = newDetails\n\n        var currNode = this.getNodeFromGraph(fullSourceFen)\n        var movePlayedBy = this.createOrGetMoveNode(currNode.playedBy, move, fullTargetFen)\n        currNode.playedByMax = Math.max(currNode.playedByMax, targetNode.details.count)\n        currNode.playedBy = movePlayedBy\n    }\n\n    getNodeFromGraph(fullFen) {\n        let fen = simplifiedFen(fullFen)\n        var currNode = this.graph.nodes.get(fen)\n        if(!currNode) {\n            currNode = new GraphNode()\n            currNode.fen = fen\n            this.graph.nodes.set(fen, currNode)\n        }\n        return currNode\n    }\n    createOrGetMoveNode(movesPlayedNode, move, fullTargetFen){\n        var movePlayed = movesPlayedNode.get(move.san)\n\n        if(!movePlayed) {\n            movePlayed = new GraphMove()\n            movePlayed.move = move\n            movePlayed.fen = simplifiedFen(fullTargetFen)\n            movesPlayedNode.set(move.san, movePlayed)\n        }\n        return movesPlayedNode\n    }\n\n    getUpdatedMoveDetails(currentMoveDetails, resultObject, playerColor) {\n        let whiteWin = 0, blackWin = 0, draw = 0, opponentElo=0, resultInt = 0;\n        if(resultObject.result === '1-0') {\n            whiteWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_WHITE? 1 : -1\n        } else if (resultObject.result === '0-1') {\n            blackWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_BLACK? 1 : -1\n        } else {\n            draw = 1\n        }\n\n        if(playerColor === Constants.PLAYER_COLOR_WHITE) {\n            opponentElo = resultObject.blackElo\n        } else {\n            opponentElo = resultObject.whiteElo\n        }\n        if(resultInt === 1) {\n            if(!currentMoveDetails.bestWin || parseInt(opponentElo)>parseInt(currentMoveDetails.bestWin)) {\n                currentMoveDetails.bestWin = opponentElo\n                currentMoveDetails.bestWinGame = resultObject\n            }\n        }\n        if(resultInt === -1) {\n            if(!currentMoveDetails.worstLoss || parseInt(opponentElo)<parseInt(currentMoveDetails.worstLoss)) {\n                currentMoveDetails.worstLoss = opponentElo\n                currentMoveDetails.worstLossGame = resultObject\n            }\n        }\n        if(!currentMoveDetails.lastPlayedGame || \n            isDateMoreRecentThan(resultObject.date, currentMoveDetails.lastPlayedGame.date)) {\n                currentMoveDetails.lastPlayedGame = resultObject\n        }\n        currentMoveDetails.count += 1\n        currentMoveDetails.blackWins += blackWin\n        currentMoveDetails.whiteWins += whiteWin\n        currentMoveDetails.draws += draw\n        currentMoveDetails.totalOpponentElo += parseInt(opponentElo)\n        return currentMoveDetails\n    }\n\n    gameResultsForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return currNode.gameResults\n        }\n        return null\n    }\n    movesForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return Array.from(currNode.playedBy.entries()).map((entry)=> {\n                let gMove = entry[1]\n                let targetNode = this.graph.nodes.get(gMove.fen)\n                return {\n                    orig:gMove.move.from,\n                    dest:gMove.move.to,\n                    level:this.levelFor(targetNode.details.count, currNode.playedByMax),\n                    san:gMove.move.san,\n                    details:targetNode.details\n                }\n            })\n        }        \n        return null\n    }\n\n    levelFor(moveCount, maxCount){\n        if(maxCount <= 0 ||moveCount/maxCount > 0.8) {\n            return 2\n        }\n        if(moveCount/maxCount>0.3) {\n            return 1\n        }\n        return 0\n    }\n\n}\n\n\nclass Graph {\n    nodes = new Map()\n}\n\nclass GraphNode {\n    fen = ''\n    playedByMax = 0 // used to keep track of how many times the most frequent move is played for ease of calculation later\n    playedBy = new Map()\n    gameResults = []\n    properties = {}\n    details = emptyDetails()\n}\n\nclass GraphMove {\n    fen = ''\n    move = {}\n}\n\nfunction emptyDetails() {\n    return {\n        count: 0,\n        blackWins: 0,\n        whiteWins: 0,\n        draws: 0,\n        totalOpponentElo: 0,\n        bestWin:null,\n        bestWinGame:null,\n        worstLoss:null,\n        worstLossGame:null,\n        lastPlayedGame:null\n    }\n}\n\nexport const openingGraph = new OpeningGraph()","import * as Constants from './Constants'\n\nexport default class OpeningManager {\n    plys = [{pgn:'', fen:Constants.ROOT_FEN, move:null}]\n    currentIndex = 0\n    addPly(fen,move) {\n        if(this.currentIndex<this.plys.length-1 && this.plys[this.currentIndex+1].move.san === move.san) {\n            this.moveForward()\n            return\n        }\n        this.plys = this.plys.slice(0,this.currentIndex+1)\n        this.plys.push({\n            pgnAsList:this.pgnAsList(move.san),\n            fen: fen,\n            move: move\n        })\n        this.currentIndex++;\n        return this.plys[this.currentIndex]\n    }\n\n    pgnAsList(san) {\n        let pgnSoFar = this.pgnListSoFar()\n        let pgnList\n        if (!pgnSoFar) {\n            pgnList = []\n        } else {\n            pgnList = [...pgnSoFar]\n        }\n        let numPlys = this.plys.length\n        if(numPlys%2 !== 0) {\n            pgnList.push({\n                moveNumber:pgnList.length+1,\n                whitePly:san,\n                blackPly:''\n            })\n        } else {\n            let currMove = pgnList[pgnList.length-1]\n            currMove.blackPly = san\n            pgnList[pgnList.length-1] = currMove\n        }\n        return pgnList\n    }\n\n    currentMove() {\n        return Math.floor((this.currentIndex-1)/2);\n    }\n\n    pgnListSoFar(){\n        return this.plys[this.plys.length-1].pgnAsList\n    }\n\n    fen(){\n        return this.plys[this.currentIndex].fen\n    }\n\n    moveForward() {\n        return this.moveTo(this.currentIndex+1)\n    }\n    moveBack() {\n        return this.moveTo(this.currentIndex-1)\n    }\n    moveTo(index) {\n        if(index>=0 && index<this.plys.length) {\n            this.currentIndex = index\n        }\n        return this.plys[this.currentIndex]\n    }\n\n}","import ReactGA from 'react-ga';\nReactGA.initialize('UA-159149755-1');\n\nexport function trackPageView() {\n    ReactGA.pageview(window.location.pathname);\n}\n\nexport function trackEvent(category, action, label, value) {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n        value: value\n      })\n}","import React from 'react'\nimport ChessEcoCodes from 'chess-eco-codes'\nimport OpeningManager from '../app/OpeningManager'\nimport {Container, Row, Col, Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepForward, faStepBackward } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nexport default class Navigator extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.openingManager = new OpeningManager()\n        this.state = {\n            currentMove:0,\n          }      \n          window.addEventListener(\"keydown\",this.keyHandler.bind(this))\n  \n    }\n    keyHandler(e){\n        switch(e.keyCode) {\n          case 37:\n            this.previous(e, \"keyboard\")\n          break\n          case 39:\n            this.next(e, \"keyboard\")\n            break\n        }\n      }\n    \n    shouldComponentUpdate(newProps) {\n        //console.log(newProps)\n        if(newProps.fen !== this.openingManager.fen()) {\n            if(newProps.move === null) {\n                this.openingManager = new OpeningManager()\n                return true\n            }\n            this.openingManager.addPly(newProps.fen, newProps.move)\n            return true\n        }\n        return true\n    }\n\n    previous(e, device) {\n        let newState = this.openingManager.moveBack()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Previous\", device?device:\"mouse\")\n    }\n\n    next(e, device) {\n        let newState = this.openingManager.moveForward()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Next\", device?device:\"mouse\")\n    }\n\n    moveTo(index) {\n        return () => {\n            let newState = this.openingManager.moveTo(index*2+1)\n            this.props.onChange(newState.fen, newState.move)\n            this.setState({currentMove:this.openingManager.currentMove()})\n            trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"move\", null, index)\n        }\n    }\n\n    render(){\n        let opening = ChessEcoCodes(this.openingManager.fen())\n        if (opening) {\n            this.opening = opening.name\n            this.openingCode = opening.code\n        }\n        if(!this.openingManager.pgnListSoFar()) {\n            return <div></div>\n        }\n        return <Container>\n            <Row>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick= {this.previous.bind(this)}><FontAwesomeIcon icon={faStepBackward} /> prev</Button> </Col>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick = {this.next.bind(this)}>next <FontAwesomeIcon icon={faStepForward} /></Button></Col></Row>\n            <Row className=\"greyText\">{this.openingCode}: {this.opening}</Row>\n            {\n                this.openingManager.pgnListSoFar().map((move, index)=>\n                    <Row key={`${move.moveNumber}`} onClick={this.moveTo(index).bind(this)} className={`navCol ${this.openingManager.currentMove() === index? 'selectedMove':''}`}>\n                        <Col sm=\"12\" className = \"navMove border\">{`${move.moveNumber}. ${move.whitePly} ${move.blackPly}`}</Col>\n                    </Row>)\n            }\n        </Container>\n    }\n}","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  ListGroup,\n  ListGroupItem\n} from 'reactstrap'\n\nconst GlobalHeader = (props) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [modal, setModal] = useState(false);\n  \n  const toggle = () => setIsOpen(!isOpen)\n  const toggleModal = () => setModal(!modal)\n  \n  const launch = (url) => {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <img src=\"/opening-tree-logo.png\" height=\"32px\" width=\"32px\" alt=\"Logo\"/>\n        <NavbarBrand href=\"/\">&nbsp;OpeningTree.com</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n          </Nav>\n          <UncontrolledDropdown navbar>\n              <DropdownToggle className=\"bootNavColor\" nav caret>\n                More\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={toggleModal}>\n                  Acknowledgements\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"mailto:openingtreechess@gmail.com\")}>\n                  Feedback\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.reddit.com/message/compose/?to=opening_tree\")}>\n                  Message me on reddit\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={launch(\"https://lichess.org/\")}>\n                  Lichess\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.lichess4545.com/\")}>\n                  Lichess4545\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.chess.com\")}>\n                  Chess.com\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n        </Collapse>\n      </Navbar>\n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Acknowledgements</ModalHeader>\n        <ListGroup className=\"acknowledgement\">\n        <ListGroupItem tag=\"a\" href=\"https://lichess.org/api\" target=\"_blank\" action>Lichess API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.chess.com/club/chess-com-developer-community\" target=\"_blank\" action>Chess.com API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/ruilisi/react-chessground\" target=\"_blank\" action>ChessGround</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jhlywa/chess.js\" target=\"_blank\" action>Chess.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/niklasf/eco\" target=\"_blank\" action>Eco</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jimmywarting/StreamSaver.js\" target=\"_blank\" action>StreamSaver.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/authors/google/\" target=\"_blank\" action>Icons made by google</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/\" target=\"_blank\" action>FlatIcons.com</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.freelogodesign.org\" target=\"_blank\" action>Free logo design</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/kevinludwig/pgn-parser\" target=\"_blank\" action>PGN Parser</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.reddit.com/r/chess\" target=\"_blank\" action>r/chess</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.reddit.com/r/anarchychess\" target=\"_blank\" action>r/anarchychess</ListGroupItem>\n        </ListGroup>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GlobalHeader\n","import { withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport React from 'react'\nimport { createSubObjectWithProperties, getTimeframeSteps } from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const ExpansionPanel = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nexport function getNumberIcon(n) {\n    return <img className = 'lowOpacity styledNumbers' src={`/images/styled-${n}.png`} height={24}/>\n}\n\nexport function advancedFilters(state) {\n    return createSubObjectWithProperties(state,\n        [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n        Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n        Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n        Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n        Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n        Constants.FILTER_NAME_ELO_RANGE])\n}","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport { Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Backup from '@material-ui/icons/Backup';\n\nexport default class Source extends React.Component {\n    getSourceOption(source, addNumber) {\n        if (source === Constants.SITE_LICHESS) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"lichess\" className=\"siteimage\" src=\"./lichesslogo.png\" /><span className=\"sourceName\"> lichess.org </span></span>\n        } else if (source === Constants.SITE_CHESS_DOT_COM) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"chess.com\" className=\"siteimage\" src=\"./chesscomlogo.png\" /></span>\n        } else if (source === Constants.SITE_PGN_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Backup className=\"lowOpacity\"/><span className=\"sourceName\"> PGN file</span></span>\n        }\n        return <span>{getNumberIcon(1, addNumber)}Select a source</span>\n    }\n\n    render() {\n        return <ExpansionPanel TransitionComponent={Collapse}\n            TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            expanded={this.props.expandedPanel === 'source'}\n            onChange={this.props.handleExpansionChange}>\n            <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n            >\n                <div>\n                    {this.getSourceOption(this.props.site, true)}\n                </div>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <RadioGroup onChange={this.props.siteChange}>\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_LICHESS} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_LICHESS)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_CHESS_DOT_COM} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_CHESS_DOT_COM)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_PGN_FILE} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_PGN_FILE)} />\n                </RadioGroup>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n        \n    }\n}","import React from 'react'\nimport {DropzoneArea} from 'material-ui-dropzone'\n\nexport default class Dropzone extends React.Component{\n    render(){\n      return (\n        <DropzoneArea \n        acceptedFiles={[]}\n        dropzoneText=\"Drag and drop up to 10 pgn files here or click to select\"\n          onChange={this.props.filesChange}\n          dropzoneParagraphClass=\"dropzonetext\"\n          showFileNames={true}\n          useChipsForPreview={true}\n          previewChipProps={{className:\"previewChip\"}}\n          dropzoneClass=\"dropzone\"\n          filesLimit={10}\n          maxFileSize={3000000000000}\n          />\n      )  \n    }\n  } ","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport { Button as MaterialUIButton, TextField } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Collapse from '@material-ui/core/Collapse';\nimport Dropzone from './Dropzone'\nexport default class User extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName:'',\n            files:[]\n        }\n    }\n\n    editPlayerName(event) {\n        this.setState({\n            playerName: event.target.value,\n            playerNameError:''\n        })\n    }\n\n    filesChange(files) {\n        this.setState({files:files})\n    }\n\n    validateInputDetailsSet() {\n        if(this.props.site === Constants.SITE_LICHESS ||\n            this.props.site === Constants.SITE_CHESS_DOT_COM) {\n                if(!this.state.playerName){\n                    this.setState({\n                        playerNameError:'Please enter a username'\n                    })\n                    return false\n                } \n        } else if(this.props.site === Constants.SITE_PGN_FILE) {\n            if(this.state.files.length===0) {\n                this.props.showError(\"Please upload a PGN file\")\n                return false\n            }\n        }\n        return true\n    }\n\n    setPlayerDetails() {\n         if(this.validateInputDetailsSet()) {\n            this.props.playerDetailsChange(this.state.playerName, this.state.files)\n        }\n    }\n    getSummary() {\n        if(this.props.playerName) {\n            return <span>{getNumberIcon('done')}User: <b>{this.props.playerName}</b></span>\n        }\n        if(this.props.files.length===1) {\n            return <span>{getNumberIcon('done')}File: <b>{this.props.files[0].name}</b></span>\n        }\n        if(this.props.files.length>1) {\n            return <span>{getNumberIcon('done')}{this.props.files.length} PGN files uploaded</span>\n        }\n        return <span>{getNumberIcon(2)}Player details</span>\n    }\n\n    getPlayerNameInput(label) {\n        return <TextField\n            className=\"playernameField\" name=\"playerName\" id=\"playerNameTextBox\" \n            margin=\"dense\" onChange={this.editPlayerName.bind(this)}\n            label={label} variant=\"outlined\"\n            helperText={this.state.playerNameError}\n            error={this.state.playerNameError?true:false}/>\n    }\n\n    getInputsToShow() {\n        if(this.props.site === Constants.SITE_PGN_FILE) {\n            return <Dropzone filesChange={this.filesChange.bind(this)}/>\n        } else if (this.props.site === Constants.SITE_LICHESS) {\n            return this.getPlayerNameInput('lichess username')\n        } else if (this.props.site === Constants.SITE_CHESS_DOT_COM) {\n            return this.getPlayerNameInput('chess.com username')\n        }\n    }\n\n    render() {\n        return <ExpansionPanel expanded={this.props.expandedPanel === 'user'}\n                TransitionComponent={Collapse}\n                TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n                onChange={this.props.handleExpansionChange} \n                disabled={this.props.site===''}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary()}</ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                        {this.getInputsToShow()}\n                </ExpansionPanelDetails>\n                <Divider />\n                <ExpansionPanelActions>\n                    <MaterialUIButton size=\"small\">Random</MaterialUIButton>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setPlayerDetails.bind(this)}>Save</MaterialUIButton>\n                </ExpansionPanelActions></ExpansionPanel>\n            \n    }\n}","import * as Constants from '../../app/Constants'\nimport * as Common from '../../app/Common'\nimport {getTimeControlsArray} from '../../app/util'\n\nlet timeClasses = [\n    {\n        label:\"Fast time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    },\n    {\n        label:\"Slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ]\n    },\n    {\n        label:\"Reasonable time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET\n        ]\n    },\n    {\n        label:\"Exclude slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    }\n]\n        \n\n\nexport function timeControlLabel(site, timeControlState) {\n    let selectedTimeControls = getTimeControlsArray(site, timeControlState, true)\n    let unselectedTimeControls = getTimeControlsArray(site, timeControlState, false)\n    if(unselectedTimeControls.length === 0 || selectedTimeControls.length === 0) {\n        return \"All time controls\"\n    }\n    if(selectedTimeControls.length === 1) {\n        return Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]\n    }\n    if(unselectedTimeControls.length === 1) {\n        return `All except ${Common.TIME_CONTROL_LABELS[unselectedTimeControls[0]]}`\n    }\n    if(selectedTimeControls.length === 2) {\n        return `${Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]} and ${Common.TIME_CONTROL_LABELS[selectedTimeControls[1]]}`\n    }\n\n    return lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls)\n}\n\nfunction lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls) {\n    let timeClass = timeClasses.filter(\n        (timeClass) => {\n            return includesAll(unselectedTimeControls,timeClass.unselectedTimeControls)\n                && includesAll(selectedTimeControls,timeClass.selectedTimeControls)\n    })\n    if(timeClass.length) {\n        return timeClass[0].label\n    } \n    return selectedTimeControls.map(control=>Common.TIME_CONTROL_LABELS[control]).join(', ')\n}\n\nfunction includesAll(arr, subArray) {\n    return subArray.every(v => arr.includes(v));\n}\n","import {timeControlLabel} from './TimeControlLabels'\nimport {getSelectedTimeFrameData} from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const getTimeControlLabel = timeControlLabel\n\nexport function getRatedLabel(rated) {\n    if(rated === 'all') {\n        return \"Rated and casual\"\n    } else if (rated === 'rated') {\n        return \"Rated only\"\n    } else if (rated === 'casual') {\n        return \"Casual only\"\n    }\n}\n\nexport function getWhenPlayedLabel(timeframe, timeframeSteps) {\n    return getSelectedTimeFrameData(timeframe, timeframeSteps).label\n}\n\nexport function getELORangeLabel(selectedEloRange) {\n    if(selectedEloRange[0] === 0 && selectedEloRange[1]===Constants.MAX_ELO_RATING) {\n        return \"All elo ratings\"\n    } else if (selectedEloRange[0] === 0) {\n        return `Below ${selectedEloRange[1]}`\n    } else if (selectedEloRange[1] === Constants.MAX_ELO_RATING) {\n        return `Above ${selectedEloRange[0]}`\n    } else {\n        return `Between ${selectedEloRange[0]} and ${selectedEloRange[1]}`\n    }\n}\nexport function getDownloadLimitLabel(downloadLimit) {\n    return downloadLimit>= Constants.MAX_DOWNLOAD_LIMIT?\"No limit\":`${downloadLimit} games`\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport React from 'react'\nimport {Collapse, Container, Row, Col} from 'reactstrap'\nimport { FormControlLabel,Slider } from '@material-ui/core';\nimport * as Constants from '../../app/Constants'\nimport {getTimeControlLabel, getELORangeLabel, getRatedLabel, getWhenPlayedLabel, getDownloadLimitLabel} from './FilterLabels'\nimport * as Common from '../../app/Common'\nimport {trackEvent} from '../../app/Analytics'\n\nexport default class AdvancedFilters extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentlyOpenAdvancedFilter:'',\n        }\n        this.timeframeMarks=[\n            {\n                value:0,\n                label:\"Big bang\"\n            }, {\n                value:props.timeframeSteps.length-1,\n                label:\"Now\"\n            }]\n        this.downloadLimitMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_DOWNLOAD_LIMIT,\n                label:`No limit`\n            }]\n        this.eloRangeMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_ELO_RATING,\n                label:`No limit`\n            }]\n    \n    }\n    setCurrentlyOpenAdvancedFilter(filterName) {\n        return () => {\n            if(this.state.currentlyOpenAdvancedFilter === filterName) {\n                //close if already open\n                filterName = ''\n            }\n            this.setState({currentlyOpenAdvancedFilter:filterName})\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", filterName)\n        }\n    }\n\n    getFilters(site){\n        return <div>\n            {this.subSectionComponent('Mode', getRatedLabel(this.props.advancedFilters.rated), this.props.toggleRated)}\n            {this.subSectionComponent('Time control', getTimeControlLabel(this.props.site, this.props.advancedFilters), \n                    this.setCurrentlyOpenAdvancedFilter('timeControl').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'timeControl'}>\n                    {this.getTimeControlFilters(site, 4)}\n                </Collapse>\n            )}\n            {this.subSectionComponent('When played', getWhenPlayedLabel(this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], this.props.timeframeSteps), \n                this.setCurrentlyOpenAdvancedFilter('whenPlayed').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'whenPlayed'}>\n                    {this.getTimeFrameFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Opponent elo range', getELORangeLabel(this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]), \n                this.setCurrentlyOpenAdvancedFilter('eloRange').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'eloRange'}>\n                    {this.getEloRangeFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Download limit', getDownloadLimitLabel(this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]), \n                this.setCurrentlyOpenAdvancedFilter('downloadLimit').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'downloadLimit'}>\n                    {this.getDownloadLimitFilters()}\n                </Collapse>)}\n      </div>\n    }\n\n    getDownloadLimitFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]}\n            onChange={this.props.handleDownloadLimitChange}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={(val)=>val>=Constants.MAX_DOWNLOAD_LIMIT?\"All\":val}\n            step={100}\n            min={0}\n            marks={this.downloadLimitMarks}\n            max={Constants.MAX_DOWNLOAD_LIMIT}\n        />\n    }\n\n    getTimeFrameFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME]}\n            onChange={this.props.handleTimeframeChange}\n            valueLabelDisplay=\"off\"\n            valueLabelFormat={(val)=>this.props.timeframeSteps[val].label}\n            step={1}\n            marks={this.timeframeMarks}\n            min={0}\n            max={this.props.timeframeSteps.length-1}\n        />\n    }\n\n    getEloRangeFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]}\n            onChange={this.props.handleEloRangeChange}\n            valueLabelDisplay=\"off\"\n            marks={this.eloRangeMarks}\n            min={0}\n            max={Constants.MAX_ELO_RATING}\n        />\n    }\n\n    getTimeControlFilters(site){\n        let firstRow = null, middleRow = null, lastRow = null\n        let colWidth = null\n        if(site === 'lichess') {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_ULTRA_BULLET]\n            middleRow = [Constants.TIME_CONTROL_BLITZ,\n                        Constants.TIME_CONTROL_CLASSICAL]\n            lastRow = [Constants.TIME_CONTROL_RAPID,\n                        Constants.TIME_CONTROL_CORRESPONDENCE]\n            colWidth = '4'\n                    \n        } else {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_BLITZ]\n            lastRow = [Constants.TIME_CONTROL_RAPID, \n                        Constants.TIME_CONTROL_DAILY]\n            colWidth = '6'\n        }\n        return <FormControl><FormGroup><Container>\n            {this.getTimeControlFilterRow(firstRow,colWidth,'first')}\n            {middleRow?this.getTimeControlFilterRow(middleRow,colWidth,'middle'):null}\n            {this.getTimeControlFilterRow(lastRow,colWidth,'last')}\n          </Container>\n        </FormGroup></FormControl>\n      \n    }\n\n    getTimeControlFilterRow(controls,firstColumnWidth, position){\n        let clsName = 'topBottomNegativeMargin'\n        if(position === \"first\") {\n            clsName = 'bottomNegativeMargin'\n        } else if (position === \"last\") {\n            clsName = 'topNegativeMargin'\n        } \n        return <Row className={clsName}>\n            {controls.map((control) => \n            <Col sm={firstColumnWidth} key={`ctrl${control}`}>\n                \n            <FormControlLabel className = \"nomargin\"\n                control={<Checkbox checked={this.props.advancedFilters[control]} color=\"primary\" \n                onChange={this.props.handleTimeControlChange} name={control} />}\n                label={Common.TIME_CONTROL_LABELS[control]}\n          /></Col>)}</Row>\n    }\n\n    subSectionComponent(title, label, changeCallback, children) {\n        return <div className=\"pgnloadersection\">{title}: <span className=\"smallText\">[<span className=\"linkStyle\" onClick={changeCallback}>change</span>]</span>\n        <div><b>{label}</b></div>{children}\n        </div>\n    }\n\n\n    render() {\n        return this.getFilters(this.props.site)\n    }\n\n}","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport { Button, Collapse } from 'reactstrap'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport { faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\nimport AdvancedFilters from './AdvancedFilters'\nimport {advancedFilters} from './Common'\nimport MuiCollapse from '@material-ui/core/Collapse';\n\nexport default class User extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerColor: this.props.playerColor,\n            isAdvancedFiltersOpen: false,\n            filtersSet:false,\n        }\n        this.timeframeSteps=this.props.timeframeSteps\n        Object.assign(this.state, this.props.advancedFilters)\n        this.defaultAdvancedFilters = this.props.advancedFilters\n    }\n\n    toggleRated() {\n        if (this.state.rated === 'all') {\n            this.setState({ rated: 'rated' })\n        } else if (this.state.rated === 'rated') {\n            this.setState({ rated: 'casual' })\n        } else {\n            this.setState({ rated: 'all' })\n        }\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", \"rated\")\n    }\n    toggleState(property) {\n        return () => {\n            let newState = {}\n            newState[property] = !this.state[property]\n            this.setState(newState)\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ToggleAdvancedFilters\", this.state.site)\n        }\n    }\n    playerColorChange(playerColor) {\n        return () => {\n            this.setState({ playerColor: playerColor })\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ColorChange\", playerColor)\n        }\n    }\n    handleTimeControlChange(event) {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n    handleTimeframeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_SELECTED_TIMEFRAME]: newValue });\n    }\n    handleEloRangeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_ELO_RANGE]: newValue });\n    }\n    handleDownloadLimitChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_DOWNLOAD_LIMIT]: newValue });\n    }\n\n    setFilters(){\n        this.setState({filtersSet:true})\n        this.props.filtersChange(this.state)\n    }\n    getSummary() {\n        if(this.state.filtersSet) {\n        return <span>\n            {getNumberIcon('done')}\n            Color: <b>{this.props.playerColor===Constants.PLAYER_COLOR_WHITE?\"White\":\"Black\"} </b>\n            {this.areAdvancedFiltersApplied()?<span className=\"smallText\">(Filters applied)</span>:null}</span>\n\n        }\n        return <span>{getNumberIcon(3)} Color and filters</span>\n    }\n    areAdvancedFiltersApplied(){\n        for (let [key, value] of Object.entries(this.defaultAdvancedFilters)) {\n            if(this.props.advancedFilters[key] !== value) {\n                return true\n            } \n        }\n        return false\n    }\n    render(){\n        return <ExpansionPanel expanded={this.props.expandedPanel === 'filters'}\n                    TransitionComponent={MuiCollapse}\n                    TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            onChange={this.props.handleExpansionChange}\n            disabled={!this.state.filtersSet && this.props.expandedPanel!=='filters'}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary()}</ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <div className=\"pgnloadersection\">\n                    <div>\n                        <Button onClick={this.playerColorChange(Constants.PLAYER_COLOR_WHITE)} color={this.state.playerColor === Constants.PLAYER_COLOR_WHITE ? 'secondary' : 'link'}>White</Button>\n                        <Button onClick={this.playerColorChange(Constants.PLAYER_COLOR_BLACK)} color={this.state.playerColor === Constants.PLAYER_COLOR_BLACK ? 'secondary' : 'link'}>Black</Button>\n                    </div>\n                </div>\n                <div className=\"pgnloadersection\"><span className=\"linkStyle\" onClick={this.toggleState('isAdvancedFiltersOpen').bind(this)}>Advanced filters <FontAwesomeIcon icon={this.state.isAdvancedFiltersOpen ? faCaretUp : faCaretDown} /></span>\n                    <Collapse isOpen={this.state.isAdvancedFiltersOpen}>\n                            <AdvancedFilters\n                                site={this.props.site}\n                                toggleRated={this.toggleRated.bind(this)}\n                                handleTimeControlChange={this.handleTimeControlChange.bind(this)}\n                                handleTimeframeChange={this.handleTimeframeChange.bind(this)}\n                                handleEloRangeChange={this.handleEloRangeChange.bind(this)}\n                                timeframeSteps={this.timeframeSteps}\n                                handleDownloadLimitChange={this.handleDownloadLimitChange.bind(this)}\n                                advancedFilters={advancedFilters(this.state)}\n                            />\n                    </Collapse></div></ExpansionPanelDetails>\n                    <Divider />\n                <ExpansionPanelActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setFilters.bind(this)}>Save</MaterialUIButton>\n                </ExpansionPanelActions></ExpansionPanel>\n    \n    }\n}","import request from 'request'\nimport { parse }  from '../PGNParser'\nimport {getTimeControlsArray, getTimeframeSteps, getSelectedTimeFrameData, isOpponentEloInSelectedRange} from '../util'\nimport * as Constants from '../Constants'\nimport {trackEvent} from '../Analytics'\n\nexport default class LichessIterator {\n\n    constructor(playerName, playerColor, advancedFilters, ready, showError) {\n        let remainingBody = ''\n        let lichessBaseURL = `https://lichess.org/api/games/user/`\n        let playerNameFilter = encodeURIComponent(playerName)\n        let colorFilter = `?color=${playerColor}`\n        let ratedFilter = `${advancedFilters[Constants.FILTER_NAME_RATED]===\"all\"?\"\":`&rated=${advancedFilters[Constants.FILTER_NAME_RATED]===\"rated\"?\"true\":\"false\"}`}`\n        let selectedTimeFrameData = getSelectedTimeFrameData(advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], getTimeframeSteps())\n        let timeSinceFilter = `${selectedTimeFrameData.fromTimeStamp?`&since=${selectedTimeFrameData.fromTimeStamp}`:\"\"}`\n        let timeUntilFilter = `${selectedTimeFrameData.toTimeStamp?`&until=${selectedTimeFrameData.toTimeStamp}`:\"\"}`\n        let selectedTimeControls = getTimeControlsArray(Constants.SITE_LICHESS, advancedFilters, true)\n        let perfFilter = selectedTimeControls.length === 0 || selectedTimeControls.length === 6?\n                \"\" : `&perfType=${selectedTimeControls.join(\",\")}`\n        let requestObject = request.get(\n            lichessBaseURL+playerNameFilter+colorFilter+ratedFilter+perfFilter+timeSinceFilter+timeUntilFilter, \n            { json: false }).on('error', (error)=> {\n                showError('failed to connect to lichess.org')\n                ready([], false)\n        }).on('response',(response)=>{\n            if(response.statusCode === 404) {\n                showError('could not find lichess user ' + playerName)\n            } else if (response.statusCode !== 200) {\n                showError('could not load games of lichess user ' + playerName)\n            }\n        }).on('data', (data) => {\n            let newBody = remainingBody + data.toString();\n            let lastValidPGN = newBody.lastIndexOf(\"\\n\\n\\n\")\n            let body = newBody.slice(0, lastValidPGN).trim()\n\n            remainingBody = newBody.slice(lastValidPGN).trim()\n            let pgnsArray = body.split(\"\\n\\n\\n\")\n\n            let parsedPGNs = pgnsArray.map((pgnString)=> {\n                try {\n                    return parse(pgnString)[0]\n                } catch (e) {\n                    console.log(\"failed to parse pgn\", pgnString)\n                    console.log(e)\n                    trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedLichess\", playerName)\n                    return null\n                }\n            })\n\n            let continueProcessing = ready(parsedPGNs.filter((pgn)=>{\n                if(!pgn || pgn.headers.Variant !== \"Standard\") {\n                    return false\n                }\n                let opponentElo = playerColor === Constants.PLAYER_COLOR_WHITE?pgn.headers.BlackElo:pgn.headers.WhiteElo\n                if(!isOpponentEloInSelectedRange(opponentElo, advancedFilters[Constants.FILTER_NAME_ELO_RANGE])) {\n                    return false\n                }\n                return true\n            }), true)\n\n            if(!continueProcessing) {\n                requestObject.abort()\n            }\n        }).on('end', () => {\n            ready([], false)\n        })\n    }\n}\n","import ChessWebAPI from 'chess-web-api'\nimport { parse }  from '../PGNParser'\nimport request from 'request'\nimport * as Constants from '../Constants'\nimport {isOpponentEloInSelectedRange, getTimeframeSteps, getSelectedTimeFrameData} from '../util'\nimport {trackEvent} from '../Analytics'\n\nexport default class ChessComIterator {\n\n    constructor(playerName, playerColor, advancedFilters, ready, showError) {\n        let chessAPI = new ChessWebAPI({\n            queue: true,\n        });\n        let pendingRequests = 0;\n        let parseGames= (archiveResponse)=>{\n            pendingRequests--\n            let continueProcessing = ready(archiveResponse.body.games.filter(\n                game=>{\n                    if(game.rules!==\"chess\" || game[playerColor].username.toLowerCase() !== playerName.toLowerCase()) {\n                        return false\n                    }\n                    let ratedMode = advancedFilters[Constants.FILTER_NAME_RATED]\n                    if(ratedMode === 'rated' && !game.rated) {\n                        return false\n                    } else if (ratedMode === 'casual' && game.rated) {\n                        return false\n                    }\n                    if(!advancedFilters[game.time_class]) {\n                        return false\n                    }\n                    let opponentElo = playerColor === Constants.PLAYER_COLOR_WHITE?game.black.rating:game.white.rating\n                    if(!isOpponentEloInSelectedRange(opponentElo, advancedFilters[Constants.FILTER_NAME_ELO_RANGE])) {\n                        return false\n                    }\n                    return true \n                }).map(\n                    game=> {\n                        try {\n                            return parse(game.pgn)[0]\n                        } catch (e) {\n                            console.log(\"failed to parse pgn\", game)\n                            console.log(e)\n                            trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedChessCom\", `${playerName}:${playerColor}`)\n                            return null\n                        }\n                    }).filter(game=> game !== null), pendingRequests>0)\n            if(!continueProcessing) {\n                //cancel all pending requests\n                while(chessAPI.dequeue()){}\n                pendingRequests = 0\n                ready([],false)\n            }\n        }\n        let shouldFetchGamesFromArchive = (archiveMonth,archiveYear, selectedTimeFrameData) => {\n            let fromYear = selectedTimeFrameData.fromYear || 1970\n            let toYear = selectedTimeFrameData.toYear || 10000\n            let fromMonth = selectedTimeFrameData.fromYear || 0\n            let toMonth = selectedTimeFrameData.toYear || 11\n    \n            if(archiveYear>fromYear && archiveYear<toYear) {\n                return true\n            }\n            if(archiveYear<fromYear || archiveYear>toYear) {\n                return false\n            }\n            if(archiveYear === fromYear) {\n                return archiveMonth >= fromMonth\n            }\n            if(archiveYear === toYear) {\n                return archiveMonth <= toMonth\n            }\n            console.log(\"should not happen\")\n            return true\n        }\n        let selectedTimeFrameData = getSelectedTimeFrameData(advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], getTimeframeSteps())\n        let fetchAllGames = function(responseBody) {\n            responseBody.archives.reverse().forEach((archiveUrl)=>{\n\n                let components=archiveUrl.split('/')\n                let year=components[components.length-2]\n                let month=components[components.length-1]\n                if(shouldFetchGamesFromArchive(month,year, selectedTimeFrameData)) {\n                    pendingRequests++\n                    chessAPI.dispatch(chessAPI.getPlayerCompleteMonthlyArchives, parseGames, [playerName, year, month]);\n                }\n            })\n            if(pendingRequests === 0) {\n                showError('Could not find games for chess.com user '+playerName)\n                ready([], false)\n            }\n        }\n\n        request(`https://api.chess.com/pub/player/${playerName}/games/archives`, function (error, response, body) {\n            if(error) {\n                showError('Could not connect to chess.com')\n                ready([], false)\n            } else if(response.statusCode === 404) {\n                showError('Could not find chess.com user '+playerName)\n                ready([], false)\n            } else if (response.statusCode !== 200) {\n                showError('Could not load games for chess.com user '+playerName)\n                ready([], false)\n            } else {\n                if(response.body) {\n                    try{\n                        let jsonBody = JSON.parse(response.body)\n                        fetchAllGames(jsonBody)\n                    }catch(e) {\n                        showError('Could not find games for chess.com user '+playerName)\n                        ready([], false)\n                    }\n                }\n            }\n        });\n    }\n\n\n}","import request from 'request'\nimport { parse }  from '../PGNParser'\nimport {getTimeControlsArray, getTimeframeSteps, getSelectedTimeFrameData, isOpponentEloInSelectedRange} from '../util'\nimport * as Constants from '../Constants'\nimport {trackEvent} from '../Analytics'\n\nexport default class LichessIterator {\n\n    constructor(playerName, files, playerColor, advancedFilters, ready, showError) {\n        let reader = new FileReader()\n        reader.onload = function(evt) {\n            let fileData = evt.target.result\n            let pgnsArray = fileData.split(\"\\n\\n\\n\")\n\n            let parsedPGNs = pgnsArray.map((pgnString)=> {\n                try {\n                    return parse(pgnString)[0]\n                } catch (e) {\n                    console.log(\"failed to parse pgn\", pgnString)\n                    console.log(e)\n                    trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedPGNFile\", playerName)\n                    return null\n                }\n            })\n            ready(parsedPGNs.filter(pgn=>!!pgn), true)\n        };\n        reader.onerror = function() {\n            showError(\"Failed to load pgn file\")\n            ready([], false)\n        }\n        reader.onloadend = function() {\n            ready([], false)\n        }\n        reader.readAsText(files[0])\n    }\n}","import {openingGraph} from './OpeningGraph'\nimport Chess from 'chess.js'\nimport LichessIterator from './iterator/LichessIterator'\nimport ChessComIterator from './iterator/ChessComIterator'\nimport PGNFileIterator from './iterator/PGNFileIterator'\nimport * as Constants from './Constants'\nimport streamsaver from 'streamsaver'\n\nexport default class PGNReader {\n    constructor() {\n        this.totalGames = 0;\n        this.pendingGames = 0;\n        this.pendingDownloads = true;\n        streamsaver.mitm = \"download/download-mitm.html\"\n        this.fileWriter = null\n    }\n\n    stopDownloading() {\n        if(this.fileWriter) {\n            this.fileWriter.close()\n            this.fileWriter = null\n        }\n    }\n\n    getPgnString(game){\n        return `${Object.entries(game.headers).map(header=>`[${header[0]} \"${header[1]}\"]`).join(\"\\n\")}\n                \\n${game.moves.map((moveObject, index)=>{\n                    return `${index%2!==0?'':index/2+1+\".\"} ${moveObject.move}`\n                }).join(' ')} ${game.result}\\n\\n\\n`\n    }\n\n    fetchPGNFromSite(playerName, playerColor, site, \n        shouldDownloadToFile, advancedFilters, notify, \n        showError, stopDownloading, files) {\n        this.continueProcessingGames = true\n        if(shouldDownloadToFile) {\n            let fileStream =  streamsaver.createWriteStream(`${playerName}-${playerColor}.pgn`)\n            this.fileWriter = fileStream.getWriter()\n        }\n        let encoder = new TextEncoder()\n        let downloadResponse = (result, pendingDownloads) => {\n            this.fileWriter.write(encoder.encode(result.map(game=>this.getPgnString(game)).join(\"\"))).then(()=>{\n                if(!pendingDownloads) {\n                    this.stopDownloading()\n                }\n            })\n            return true\n        }\n        let handleResponse = (result, pendingDownloads) => {\n            if(!result) {\n                return this.continueProcessingGames\n            }\n            this.totalGames += result.length\n            this.pendingGames += result.length\n            this.pendingDownloads = pendingDownloads\n            \n\n            setTimeout(() => {\n                this.parsePGNTimed(result, advancedFilters, playerColor, 0, playerName, notify, showError, stopDownloading)\n            } ,1)\n            return this.continueProcessingGames\n        }\n        let processor = shouldDownloadToFile? downloadResponse: handleResponse\n        if (site === Constants.SITE_LICHESS) {\n            new LichessIterator(playerName, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_CHESS_DOT_COM) {\n            new ChessComIterator(playerName, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_PGN_FILE) {\n            new PGNFileIterator(playerName, files, playerColor, advancedFilters, processor, showError)\n        }\n\n        \n    }\n\n    parsePGNTimed(pgnArray, advancedFilters, playerColor, index,  playerName, notify, showError, stopDownloading) {\n        if(index< pgnArray.length) {\n            this.pendingGames--\n        }\n        if(!this.pendingDownloads && this.pendingGames <= 0) {\n            stopDownloading()\n        }\n\n        if(index>= pgnArray.length || !this.continueProcessingGames) {\n            return\n        }\n\n        var pgn = pgnArray[index]\n        if(pgn.moves[0] && pgn.moves[0].move_number === 1) {\n            let chess = new Chess()\n            let resultObject = this.gameResult(pgn)\n\n            pgn.moves.forEach(element => {\n                let sourceFen = chess.fen()\n                let move = chess.move(element.move)\n                let targetFen = chess.fen()\n                if(!move){\n                    console.log('failed to load game ' + pgn)\n                    showError(\"Failed to load game\", `${playerName}:${playerColor}`)\n                    return\n                }\n                openingGraph.addMoveForFen(sourceFen, targetFen, move, resultObject, playerColor)\n            })\n            let fen = chess.fen()\n            openingGraph.addGameResultOnFen(fen, resultObject)\n            openingGraph.addResultToRoot(resultObject, playerColor)\n            this.continueProcessingGames = notify(advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT],1, openingGraph)\n        }\n            setTimeout(()=>{this.parsePGNTimed(pgnArray, advancedFilters, playerColor, index+1, playerName, notify, showError, stopDownloading)},1)\n    }\n\n    gameResult(pgn) {\n        return {\n            result:pgn.result,\n            white:pgn.headers.White,\n            black:pgn.headers.Black,\n            whiteElo:pgn.headers.WhiteElo,\n            blackElo:pgn.headers.BlackElo,\n            url:pgn.headers.Link || pgn.headers.Site,\n            date:pgn.headers.Date\n        }\n    }\n}","import React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport PGNReader from '../../app/PGNReader'\nimport { faList} from '@fortawesome/free-solid-svg-icons'\nimport GetApp from '@material-ui/icons/GetApp';\nimport Equalizer from '@material-ui/icons/Equalizer';\nimport Fade from '@material-ui/core/Fade'\n\nexport default class Actions extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            isGamesSubsectionOpen : false\n        }\n    }\n    unload = () => {\n        if (this.pgnReader) {\n            this.pgnReader.stopDownloading()\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.unload);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"beforeunload\", this.unload);\n    }\n\n    readPgn(shouldDownloadToFile) {\n        this.pgnReader = new PGNReader()\n        this.pgnReader.fetchPGNFromSite(this.props.playerName,\n            this.props.playerColor,\n            this.props.site,\n            shouldDownloadToFile,\n            this.props.advancedFilters,\n            this.props.notify,\n            this.props.showError,\n            this.stopDownloading.bind(this),\n            this.props.files)\n    }\n\n    download() {\n        if (!this.props.playerName) {\n            this.props.showError(\"Please enter a username\")\n            return\n        }\n        this.readPgn(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Download\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n\n    }\n\n    load() {\n        this.props.clear()\n        this.setState({ isGamesSubsectionOpen: true })\n        // set the player name and color in the global state\n        this.props.onChange(\"playerName\", this.props.playerName)\n        this.props.onChange(\"playerColor\", this.props.playerColor)\n        this.readPgn(false)\n        this.props.setDownloading(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Load\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n    }\n    stopDownloading() {\n        this.props.setDownloading(false)\n    }\n    stopDownloadingAction() {\n        this.stopDownloading()\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"StopDownloading\", this.props.site)\n    }\n    mainComponent() {\n        return <div style={{}}>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.load.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<Equalizer />}\n            className=\"mainButton\" disableElevation\n        >\n            Analyze games\n        </MaterialUIButton></div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.download.bind(this)}\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<GetApp />}\n            className=\"mainButton\" disableElevation\n        >\n            Export as PGN\n        </MaterialUIButton></div>\n        {\n            this.state.isGamesSubsectionOpen ?\n                <div>\n                    <div className=\"pgnloadersection\">\n                        {`Games Loaded: ${this.props.gamesProcessed} `}{this.props.isDownloading ? <span className=\"stopDownloading\">[<span className=\"linkStyle\" onClick={this.stopDownloadingAction.bind(this)}><img alt=\"loading spinner\" src=\"./spinner.gif\" height=\"15\" />stop</span>]</span> : \"\"}\n                    </div>\n                    <div onClick={() => this.props.switchToMovesTab()} className=\"navLinkButton pgnloadersection\">\n                        <FontAwesomeIcon icon={faList} /> View Moves>>\n                </div>\n                </div>\n                : \"\"\n        }\n        </div>\n    }\n    render(){\n        if(this.props.expandedPanel) {\n            return <Fade timeout={Constants.LOADER_ANIMATION_DURATION_MS*2}>\n            {this.mainComponent()}\n        </Fade>\n        }\n        return <Fade in timeout={Constants.LOADER_ANIMATION_DURATION_MS*3}>\n            {this.mainComponent()}\n        </Fade>\n    }\n}","import React from 'react'\nimport { createSubObjectWithProperties, getTimeframeSteps } from '../../app/util'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport Source from './Source'\nimport User from './User'\nimport Filters from './Filters'\nimport Actions from './Actions'\n\nexport default class PGNLoader extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName: '',\n            site: '',\n            playerColor: this.props.settings.playerColor,\n            isAdvancedFiltersOpen: false,\n            isGamesSubsectionOpen: false,\n            expandedPanel: 'source',\n            files:[]\n        }\n        this.timeframeSteps = getTimeframeSteps()\n        this.state[Constants.FILTER_NAME_SELECTED_TIMEFRAME] = [0, this.timeframeSteps.length - 1]\n        this.state[Constants.FILTER_NAME_DOWNLOAD_LIMIT] = Constants.MAX_DOWNLOAD_LIMIT\n        this.state[Constants.TIME_CONTROL_ULTRA_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BLITZ] = true\n        this.state[Constants.TIME_CONTROL_RAPID] = true\n        this.state[Constants.TIME_CONTROL_CLASSICAL] = true\n        this.state[Constants.TIME_CONTROL_CORRESPONDENCE] = true\n        this.state[Constants.TIME_CONTROL_DAILY] = true\n        this.state[Constants.FILTER_NAME_RATED] = \"all\"\n        this.state[Constants.FILTER_NAME_ELO_RANGE] = [0, Constants.MAX_ELO_RATING]\n    }\n\n\n    advancedFilters() {\n        return createSubObjectWithProperties(this.state,\n            [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n            Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n            Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n            Constants.FILTER_NAME_ELO_RANGE])\n    }\n\n\n    handleExpansionChange(panel) {\n        return (event, newExpanded) => {\n            this.setState({ expandedPanel: newExpanded ? panel : false });\n        };\n    }\n\n    playerDetailsChange(playerName, files) {\n        this.setState({\n            playerName: playerName,\n            expandedPanel:'filters',\n            files:files\n        })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"PlayerNameSaved\")\n    }\n\n\n    siteChange(event) {\n        this.setState({ site: event.target.value, expandedPanel:'user'})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ChangeSite\", this.state.site)\n    }\n\n    filtersChange(filters) {\n        this.setState({...filters, expandedPanel:''})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FitlersSaved\", this.state.site)\n    }\n\n    render() {\n        return <div><div className=\"pgnloadersection\">\n            <Source expandedPanel={this.state.expandedPanel}\n                handleExpansionChange={this.handleExpansionChange('source').bind(this)}\n                site={this.state.site} siteChange={this.siteChange.bind(this)}/>\n            <User expandedPanel={this.state.expandedPanel} playerName={this.state.playerName}\n                handleExpansionChange={this.handleExpansionChange('user').bind(this)} \n                showError={this.props.showError} files={this.state.files}\n                site={this.state.site} playerDetailsChange={this.playerDetailsChange.bind(this)}/>\n            <Filters expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor}\n                handleExpansionChange={this.handleExpansionChange('filters').bind(this)}\n                site={this.state.site} advancedFilters={this.advancedFilters()}\n                timeframeSteps={this.timeframeSteps} filtersChange={this.filtersChange.bind(this)}/>\n            </div>\n            <Actions expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor} files={this.state.files}\n                playerName={this.state.playerName} site={this.state.site} advancedFilters={this.advancedFilters()}\n                notify={this.props.notify} showError={this.props.showError} onChange={this.props.onChange}\n                setDownloading={this.props.setDownloading} clear={this.props.clear} isDownloading={this.props.isDownloading}\n                switchToMovesTab={this.props.switchToMovesTab} gamesProcessed={this.props.gamesProcessed}/>\n\n        </div>\n    }\n\n}","import React from 'react'\nimport {Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRetweet, faTrashAlt, faFastBackward, faDesktop } from '@fortawesome/free-solid-svg-icons'\nimport {Container, Row, Col} from 'reactstrap'\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\n\nexport default class SettingsView extends React.Component {\n    toggle(eventName){\n        return (()=> {\n            let newValue = this.props.settings[eventName] === Constants.PLAYER_COLOR_WHITE ? Constants.PLAYER_COLOR_BLACK:Constants.PLAYER_COLOR_WHITE\n            this.props.onChange(eventName, newValue)\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"ChangeOrientation\")\n        })\n    }\n    analyse() {\n        window.open(`https://www.lichess.org/analysis/${this.props.fen}`, '_blank');\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"AnalyzeGame\")\n\n    }\n    resetAction() {\n        this.props.reset()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Reset\")\n    }\n    clearAction() {\n        this.props.clear()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Clear\")\n    }\n\n    render() {\n        return <div>\n            <Container>\n                <Row sm=\"12\">\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.toggle('orientation')} color=\"\"><h3><FontAwesomeIcon icon={faRetweet} /></h3> Flip board</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.clearAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faTrashAlt} /></h3> Clear games</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.resetAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faFastBackward} /></h3> Starting position</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.analyse.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faDesktop} /></h3> Computer analysis</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter, TextField } from '@material-ui/core';\nimport React from 'react'\nimport {getPerformanceDetails, simplifiedFen} from '../app/util'\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    eatClicks(e) {\n        e.stopPropagation()\n    }\n\n    copyFen() {\n        /* Get the text field */\n        var copyText = document.getElementById(\"fenField\");\n      \n        /* Select the text field */\n        copyText.select();\n        copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n      \n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n      \n        /* Alert the copied text */\n        this.props.showInfo(\"FEN copied\");\n    }\n\n    getFenField() {\n        return this.props.simplifiedView?null:\n            <div className=\"fenDiv\">\n            <TextField\n                id=\"fenField\"\n                multiline\n                label=\"FEN\"\n                rowsMax=\"2\"\n                value={this.props.fen} \n                inputProps={{\n                    style: {fontSize: 12},\n                    spellCheck: false,\n                  }} \n                  variant=\"outlined\"\n                className=\"fenField\"\n                margin=\"dense\"\n                onClick = {this.copyFen.bind(this)}\n                /></div>\n    }\n\n      \n    render() {\n        if(!this.props.moveDetails.lastPlayedGame) {\n            return <div>{this.getFenField()}<div className = \"infoMessage\" >No data to show. Please enter a lichess or chess.com user name in the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and click \"Load\"</div>\n                </div>\n        }\n        let performanceDetails = {}\n        if(this.props.isOpen) {\n            performanceDetails = getPerformanceDetails(this.props.moveDetails.totalOpponentElo, \n                                                        this.props.moveDetails.whiteWins, \n                                                        this.props.moveDetails.draws, \n                                                        this.props.moveDetails.blackWins, \n                                                        this.props.settings.playerColor)\n        } \n\n        return <div>\n            {this.getFenField()}\n            <Table onClick={this.eatClicks}>\n            <TableHead className={`performanceRatingRow${this.props.simplifiedView?\" performanceHeader\":\"\"}`}><TableRow>\n                <TableCell className=\"performanceRatingRow\"><b>Performance</b></TableCell>\n                <TableCell className=\"performanceRatingRow\"><b>{performanceDetails.performanceRating}</b></TableCell>\n                </TableRow></TableHead>\n            <TableBody>\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Avg opponent</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.averageElo}</TableCell>\n            </TableRow>\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Score</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.score}</TableCell>\n            </TableRow>\n            {this.props.simplifiedView?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Rating change</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.ratingChange}</TableCell>\n            </TableRow>\n            }\n            {!this.props.simplifiedView && this.props.moveDetails.bestWin?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Best win</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.bestWin} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.bestWinGame.url)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {!this.props.simplifiedView && this.props.moveDetails.worstLoss?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Worst loss</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.worstLoss} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.worstLossGame.url)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Last played</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.lastPlayedGame.date} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.lastPlayedGame.url)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>\n            </TableBody>\n            {this.props.simplifiedView?null:\n            <TableFooter>\n                <TableRow>\n                    <TableCell colSpan=\"2\">Calculated based on <a href=\"https://handbook.fide.com/chapter/B022017\" target=\"_blank\" rel=\"noopener noreferrer\">FIDE regulations</a></TableCell>\n                </TableRow>\n            </TableFooter>\n            }\n        </Table></div>\n    }\n}","import {Progress, Popover } from \"reactstrap\"\nimport React from 'react'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faExternalLinkAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\nimport ReportControls from './ReportControls'\n\nexport default class MovesList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            openPerformanceIndex: null\n        }\n    }\n\n    move(from, to) {\n        return () => {\n            this.props.onMove(from, to)\n            trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"MoveClicked\")\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.turnColor !== this.props.turnColor) {\n            this.setState({\n                openPerformanceIndex: null,\n            })\n        }\n    }\n    togglePerformancePopover(moveIndex) {\n        return (e) => {\n            if(this.state.openPerformanceIndex !== null) {\n                this.setState({openPerformanceIndex:null})\n            } else {\n                this.setState({openPerformanceIndex: moveIndex})\n            }\n            e.stopPropagation()\n        }\n    }\n    render(){\n        if(!this.props.settings.playerName) {\n            return <div className = \"infoMessage\" >No moves to show. Please enter a lichess or chess.com user name in the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and click \"Load\"</div>\n        }\n    return <div>{(this.props.gameResults && this.props.gameResults.length>0)?this.resultsTable():null}\n                {this.movesTable()}</div>\n    }\n    resultsTable() {\n        return <Table>\n            <TableBody>\n                {\n                this.props.gameResults.map(result => {\n                    let whitePlayer = this.player(result.white, result.whiteElo)\n                    let blackPlayer = this.player(result.black, result.blackElo)\n                    return <TableRow className=\"moveRow\" key = {`${result.url}`} onClick={this.props.launchGame(result.url)}>\n                        <TableCell>\n                            {result.result===\"1-0\"?<b>{whitePlayer}</b>:whitePlayer} {result.result} {result.result === \"0-1\"?<b>{blackPlayer}</b>:blackPlayer}\n                        </TableCell>\n                    </TableRow>\n                })}\n            </TableBody>\n        </Table>\n    }\n    player(name, elo) {\n        return `${name}(${elo})`\n    }\n    getPopover(moveIndex) {\n        let performancePopoverOpen = this.state.openPerformanceIndex === moveIndex\n        let openMove = this.props.movesToShow[moveIndex]\n\n        return <Popover trigger=\"hover\" placement=\"right\" isOpen={performancePopoverOpen} target={`performancePopover${moveIndex}`} toggle={this.togglePerformancePopover(moveIndex)}>\n                <ReportControls moveDetails={openMove.details} simplifiedView={true} isOpen = {performancePopoverOpen} launchGame={this.props.launchGame} settings={this.props.settings}/>\n            </Popover>\n    }\n    movesTable() {\n        let hasMoves = (this.props.movesToShow && this.props.movesToShow.length>0)\n        return <Table>\n            {hasMoves?\n        <TableHead>\n        <TableRow>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Move</b></TableCell>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Games</b></TableCell>\n            <TableCell><b>Results</b></TableCell>\n        </TableRow></TableHead>  \n        :null}\n        {hasMoves?\n        <TableBody>\n        {\n        this.props.movesToShow.map((move, moveIndex) => {\n            let sampleResultWhite = this.player(move.details.lastPlayedGame.white, move.details.lastPlayedGame.whiteElo)\n            let sampleResultBlack = this.player(move.details.lastPlayedGame.black, move.details.lastPlayedGame.blackElo)\n            let sampleResult = move.details.lastPlayedGame.result\n\n            return move.details.count > 1?<TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san} </TableCell>\n                <TableCell size=\"small\" id={`performancePopover${moveIndex}`} className=\"smallCol\" onClick ={this.togglePerformancePopover(moveIndex)}>\n                    {move.details.count} <FontAwesomeIcon className=\"lowOpacity\" icon={faInfoCircle}/>\n                    {this.getPopover(moveIndex)}\n                </TableCell>\n                <TableCell>\n                    <Progress className = \"border\" multi>\n                        <Progress bar className=\"whiteMove\" value={`${move.details.whiteWins/move.details.count*100}`}>{move.details.whiteWins/move.details.count>0.1?move.details.whiteWins:''}</Progress>\n                        <Progress bar className=\"grayMove\" value={`${move.details.draws/move.details.count*100}`}>{move.details.draws/move.details.count>0.1?move.details.draws:''}</Progress>\n                        <Progress bar className=\"blackMove\" value={`${move.details.blackWins/move.details.count*100}`}>{move.details.blackWins/move.details.count>0.1?move.details.blackWins:''}</Progress>\n                    </Progress>\n                </TableCell>\n            </TableRow>:\n            <TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san}</TableCell>\n                <TableCell colSpan = \"2\">\n        {sampleResultWhite} {sampleResult} {sampleResultBlack} {<FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(move.details.lastPlayedGame.url)} icon={faExternalLinkAlt}/>}\n                </TableCell>\n            </TableRow>\n            }\n        )}\n    </TableBody>\n    :null}\n        <TableFooter><TableRow>\n        {\n        hasMoves?\n            <TableCell colSpan=\"3\">\n            Showing moves that have been \n            played {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n            this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n            </TableCell>:\n            <TableCell colSpan=\"3\">\n            No moves found in this position played {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n            this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n            </TableCell>\n        }</TableRow></TableFooter>\n    </Table>\n    }\n}","import React from 'react'\nimport PGNLoader from './loader/PGNLoader'\nimport SettingsView from './Settings'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faList, faCog, faChartBar } from '@fortawesome/free-solid-svg-icons'\nimport MovesList from './MovesList';\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\nimport ReportControls from './ReportControls'\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n          activeTab:'user',\n      }\n    }\n\n    launchGame(url) {\n        return (e) => {\n            e.stopPropagation()\n            window.open(url, '_blank');\n            trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"ViewGameExternal\")\n\n        }\n    }\n\n    toggle(tab) {\n        if(this.state.activeTab !== tab) {\n            this.setState({activeTab:tab})\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS,`activeTab:${tab}`)\n        }\n    }\n    switchToUserTab() {\n      this.toggle('user')\n    }\n    switchToMovesTab() {\n      this.toggle('moves')\n    }\n\n    render(){\n        return <div>\n            <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'user' })}\n            onClick={() => { this.toggle('user'); }}\n          >\n            <FontAwesomeIcon icon={faUser} /> {this.state.activeTab === 'user'?\"User\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'moves' })}\n            onClick={() => { this.toggle('moves'); }}\n          >\n            <FontAwesomeIcon icon={faList} /> {this.state.activeTab === 'moves'?\"Moves\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'report' })}\n            onClick={() => { this.toggle('report'); }}\n          >\n            <FontAwesomeIcon icon={faChartBar} /> {this.state.activeTab === 'report'?\"Report\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'settings' })}\n            onClick={() => { this.toggle('settings'); }}\n          >\n            <FontAwesomeIcon icon={faCog} /> {this.state.activeTab === 'settings'?\"Controls\":\"\"}\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={this.state.activeTab}>\n        <TabPane tabId=\"user\">\n            <PGNLoader \n              switchToMovesTab={this.switchToMovesTab.bind(this)} \n              clear = {this.props.clear} \n              gamesProcessed = {this.props.gamesProcessed} \n              settings = {this.props.settings} \n              onChange = {this.props.settingsChange} \n              notify = {this.props.updateProcessedGames}\n              showError = {this.props.showError}\n              setDownloading = {this.props.setDownloading}\n              isDownloading = {this.props.isDownloading}\n              />\n            </TabPane>\n        <TabPane tabId=\"moves\">\n            <MovesList \n              switchToUserTab={this.switchToUserTab.bind(this)} \n              movesToShow={this.props.movesToShow} \n              gameResults={this.props.gameResults}\n              onMove={this.props.onMove}\n              settings={this.props.settings}\n              turnColor={this.props.turnColor}\n              settingsChange={this.props.settingsChange}\n              launchGame = {this.launchGame}\n              />\n        </TabPane>\n        <TabPane tabId=\"report\">\n          <ReportControls fen={this.props.fen} simplifiedView = {false}\n            moveDetails = {this.props.openingGraph.getDetailsForFen(this.props.fen)}\n            launchGame={this.launchGame} settings={this.props.settings}\n            switchToUserTab={this.switchToUserTab.bind(this)} \n            isOpen = {this.state.activeTab === \"report\"}\n            showInfo = {this.props.showInfo}/>\n        </TabPane>\n        <TabPane tabId=\"settings\">\n          <Row>\n            <Col sm=\"6\">\n            <SettingsView fen={this.props.fen} settings={this.props.settings} isOpen = {true} clear = {this.props.clear} reset = {this.props.reset} onChange = {this.props.settingsChange}/>\n            \n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n        </div>\n    }\n}","import Chess from 'chess.js'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nfunction turnColor() {\n    return fullTurnName(this.chess.turn())\n}\n\nfunction fullTurnName(shortName) {\n    return shortName === 'w' ? Constants.PLAYER_COLOR_WHITE : Constants.PLAYER_COLOR_BLACK\n}\n\nfunction playerColor() {\n    return this.state.settings.playerColor\n}\n\nfunction brushes() {\n    if(this.playerColor() === this.turnColor()) {\n        return this.forBrushes\n    }\n    return this.againstBrushes\n}\n\nfunction calcMovable() {\nconst dests = {}\n    this.chess.SQUARES.forEach(s => {\n        const ms = this.chess.moves({square: s, verbose: true})\n        if (ms.length) dests[s] = ms.map(m => m.to)\n    })\n    return {\n        free: false,\n        dests,\n        color: this.turnColor()\n    }\n}\n\nfunction orientation() {\n    return this.state.settings.orientation\n}\n\nfunction onMove(from, to) {\n    const chess = this.chess\n    let move = chess.move({ from, to, promotion: 'q'})\n    this.setState({ fen: chess.fen(), lastMove: move})\n}\n\n\nfunction onMoveAction(from, to) {\n    this.onMove(from,to)\n    trackEvent(Constants.EVENT_CATEGORY_CHESSBOARD, \"Move\")\n}\n\nfunction navigateTo(fen, previousMove){\n    this.chess = new Chess(fen)\n    this.setState({fen:fen, lastMove:previousMove})\n\n}\nfunction updateProcessedGames(downloadLimit, n, openingGraph) {\n    let totalGamesProcessed = this.state.gamesProcessed+n\n    this.setState({\n    gamesProcessed: totalGamesProcessed,\n    openingGraph: openingGraph,\n    downloadingGames: (totalGamesProcessed<downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)?this.state.downloadingGames:false\n    })\n    // continue to download games if \n    // 1. we have not reached download limit OR\n    //    there is no download limit set (downloadLimit>MAX condition)\n    // 2. user did not hit stop button\n    return (totalGamesProcessed < downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)&& this.state.downloadingGames\n}\nfunction moveToShape(move) {\n    return {\n        orig:move.orig,\n                    dest: move.dest,\n                    brush: this.brushes()[move.level]\n    }\n}\n\nfunction autoShapes() {\n    var moves = this.movesToShow()\n    if(moves) {\n        var shapes = moves.map(this.moveToShape.bind(this))\n        return this.fillArray(shapes,  25)\n    }\n    return this.fillArray([], 25) // dummy arrow to clear out existing arrows\n}\n\nfunction movesToShow() {\n    var moves = this.state.openingGraph.movesForFen(this.chess.fen())\n    return moves?moves.sort((a,b)=>b.details.count-a.details.count):moves\n}\n\nfunction gameResults() {\n    return this.state.openingGraph.gameResultsForFen(this.chess.fen())\n}\n\nfunction fillArray(arr, len) {\n    for (var i = arr.length; i < len; i++) {\n        arr.push({'orig':'i'+i, 'dest':'i'+(i+1), brush:this.brushes()[0]});\n    }\n    return arr;\n}\n\nfunction reset() {\n    this.chess = new Chess()\n    this.setState({fen: this.chess.fen(), lastMove:null})\n}\n\nfunction clear() {\n    this.state.openingGraph.clear()\n    this.state.gamesProcessed = 0\n    this.reset()\n}\n\nfunction settingsChange(name, value) {\n    let settings = this.state.settings\n    settings[name] = value;\n    this.setState({\n        'settings':settings\n    })\n}\nfunction showError(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:\"warning\"})\n    trackEvent(Constants.EVENT_CATEGORY_ERROR,\"errorShown\",\n        trackingLabel?trackingLabel:message)\n}\n\nfunction showInfo(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:\"success\"})\n    trackEvent(Constants.EVENT_CATEGORY_ERROR,\"infoShown\",\n        trackingLabel?trackingLabel:message)\n}\n\n\nfunction closeError() {\n    this.setState({message:''})\n}\n\nfunction setDownloading(val) {\n    this.setState({downloadingGames:val})\n}\n\nfunction addStateManagement(obj){\n    obj.orientation  = orientation\n    obj.turnColor = turnColor\n    obj.calcMovable = calcMovable\n    obj.onMove = onMove\n    obj.onMoveAction = onMoveAction\n    obj.autoShapes = autoShapes\n    obj.updateProcessedGames = updateProcessedGames\n    obj.settingsChange = settingsChange\n    obj.reset = reset\n    obj.clear = clear\n    obj.navigateTo = navigateTo\n    obj.playerColor = playerColor\n    obj.fillArray = fillArray\n    obj.brushes = brushes\n    obj.moveToShape = moveToShape\n    obj.movesToShow = movesToShow\n    obj.gameResults = gameResults\n    obj.showError = showError\n    obj.showInfo = showInfo\n    obj.closeError = closeError\n    obj.setDownloading = setDownloading\n}\n\nexport {addStateManagement}","import React from 'react'\nimport Chess from 'chess.js'\nimport Chessground from 'react-chessground'\nimport 'react-chessground/dist/styles/chessground.css'\nimport {openingGraph} from '../app/OpeningGraph'\nimport Navigator from './Navigator'\nimport GlobalHeader from './GlobalHeader'\nimport {Container, Row, Col} from 'reactstrap'\nimport ControlsContainer from './ControlsContainer'\nimport {addStateManagement} from './StateManagement'\nimport {Snackbar} from '@material-ui/core'\nimport Alert from '@material-ui/lab/Alert';\nimport * as Constants from '../app/Constants'\n\nexport default class MainContainer extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.chess = new Chess()\n    addStateManagement(this)\n    this.state = {\n        fen: this.chess.fen(),\n        lastMove: null,\n        gamesProcessed:0,\n        openingGraph:openingGraph,\n        settings:{\n          playerName:'',\n          orientation:Constants.PLAYER_COLOR_WHITE,\n          playerColor:Constants.PLAYER_COLOR_WHITE\n        },\n        message:'',\n        downloadingGames:false\n      }\n    this.chessboardWidth = this.getChessboardWidth()\n\n    this.forBrushes = ['paleGrey', 'paleGreen', 'green']\n    this.againstBrushes = ['paleRed', 'paleRed', 'red']\n\n  }\n  getChessboardWidth(){\n    // have to manually set the width to pixels instead of \"vw\" value\n    // this is because chessground component does not behave well with \"vw\" values\n    if (window.innerWidth<=768) {\n      return `${Math.round(window.innerWidth*95/100)}px` //95vw\n    } else if ((window.innerWidth<=1024)) {\n      return `${Math.round(window.innerWidth*40/100)}px` // 40vw\n    } else {\n      return \"512px\"\n    }\n\n  }\n\n\n  render() {\n    let lastMoveArray = this.state.lastMove ? [this.state.lastMove.from, this.state.lastMove.to] : null\n    let snackBarOpen = this.state.message?true:false\n    return <div className=\"rootView\"> \n        <GlobalHeader/>\n        <Container className=\"mainContainer\">\n          <Row><Col lg={{order:0, size:2}} xs={{order:2}}><Navigator fen = {this.state.fen} move={this.state.lastMove} onChange ={this.navigateTo.bind(this)}/>\n    </Col><Col lg=\"6\"><Chessground\n      height={this.chessboardWidth}\n      width={this.chessboardWidth}\n      orientation={this.orientation()}\n      turnColor={this.turnColor()}\n      movable={this.calcMovable()}\n      \n      lastMove={lastMoveArray}\n      fen={this.state.fen}\n      onMove={this.onMoveAction.bind(this)}\n      drawable ={{\n        enabled: true,\n        visible: true,\n        autoShapes: this.autoShapes()\n      }}\n      style={{ margin: 'auto' }}\n    />\n    </Col><Col lg=\"4\" className=\"paddingTop\"><ControlsContainer fen={this.state.fen}\n                gamesProcessed={this.state.gamesProcessed} \n                updateProcessedGames={this.updateProcessedGames.bind(this)}\n                settingsChange={this.settingsChange.bind(this)}\n                settings={this.state.settings}\n                reset={this.reset.bind(this)}\n                clear={this.clear.bind(this)}\n                movesToShow={this.movesToShow()}\n                gameResults={this.gameResults()}\n                onMove={this.onMove.bind(this)}\n                turnColor={this.turnColor()}\n                showError={this.showError.bind(this)}\n                showInfo={this.showInfo.bind(this)}\n                setDownloading={this.setDownloading.bind(this)}\n                isDownloading={this.state.downloadingGames}\n                openingGraph={this.state.openingGraph}\n                /></Col>\n    </Row></Container>\n    <Snackbar anchorOrigin={{ vertical:'top', horizontal:\"center\" }} open={snackBarOpen} autoHideDuration={6000} onClose={this.closeError.bind(this)}>\n    <Alert onClose={this.closeError.bind(this)} severity={this.state.messageSeverity}>\n      {this.state.message}\n    </Alert>\n    </Snackbar>\n    </div>\n  }\n}\n","import ReactDOM from 'react-dom'\nimport MainContainer from './pres/MainContainer'\nimport React from 'react'\nimport {trackPageView} from './app/Analytics'\n\nReactDOM.render(<MainContainer />, document.getElementById('root'))\ntrackPageView()","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(gs) {return gs.map(function(g) { return g[0]})},\n      peg$c1 = function(h, c, m, r) {return [m, r]},\n      peg$c2 = function(h, c, r) {return [null, r]},\n      peg$c3 = function(h, c, mr) {return make_game(h, c, mr[0], mr[1])},\n      peg$c4 = peg$anyExpectation(),\n      peg$c5 = \"\\\"\",\n      peg$c6 = peg$literalExpectation(\"\\\"\", false),\n      peg$c7 = /^[^\"]/,\n      peg$c8 = peg$classExpectation([\"\\\"\"], true, false),\n      peg$c9 = function(str) {return str.join('')},\n      peg$c10 = /^[1-9]/,\n      peg$c11 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c12 = /^[0-9]/,\n      peg$c13 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c14 = function(a, b) {return parseInt(a+b.join(''), 10)},\n      peg$c15 = /^[A-Za-z0-9_\\-]/,\n      peg$c16 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"], \"_\", \"-\"], false, false),\n      peg$c17 = function(chars) {return chars.join('')},\n      peg$c18 = \" \",\n      peg$c19 = peg$literalExpectation(\" \", false),\n      peg$c20 = \"\\f\",\n      peg$c21 = peg$literalExpectation(\"\\f\", false),\n      peg$c22 = \"\\t\",\n      peg$c23 = peg$literalExpectation(\"\\t\", false),\n      peg$c24 = \"\\n\",\n      peg$c25 = peg$literalExpectation(\"\\n\", false),\n      peg$c26 = \"[\",\n      peg$c27 = peg$literalExpectation(\"[\", false),\n      peg$c28 = \"]\",\n      peg$c29 = peg$literalExpectation(\"]\", false),\n      peg$c30 = function(hn, hv) { return make_header(hn,hv) },\n      peg$c31 = function(hs) {return hs},\n      peg$c32 = /^[NKQRBP]/,\n      peg$c33 = peg$classExpectation([\"N\", \"K\", \"Q\", \"R\", \"B\", \"P\"], false, false),\n      peg$c34 = /^[a-h]/,\n      peg$c35 = peg$classExpectation([[\"a\", \"h\"]], false, false),\n      peg$c36 = /^[1-8]/,\n      peg$c37 = peg$classExpectation([[\"1\", \"8\"]], false, false),\n      peg$c38 = \"+\",\n      peg$c39 = peg$literalExpectation(\"+\", false),\n      peg$c40 = \"#\",\n      peg$c41 = peg$literalExpectation(\"#\", false),\n      peg$c42 = /^[x@]/,\n      peg$c43 = peg$classExpectation([\"x\", \"@\"], false, false),\n      peg$c44 = \".\",\n      peg$c45 = peg$literalExpectation(\".\", false),\n      peg$c46 = \"1-0\",\n      peg$c47 = peg$literalExpectation(\"1-0\", false),\n      peg$c48 = \"0-1\",\n      peg$c49 = peg$literalExpectation(\"0-1\", false),\n      peg$c50 = \"*\",\n      peg$c51 = peg$literalExpectation(\"*\", false),\n      peg$c52 = \"1/2-1/2\",\n      peg$c53 = peg$literalExpectation(\"1/2-1/2\", false),\n      peg$c54 = function(mn) {return mn},\n      peg$c55 = function(r, f) {return r+f},\n      peg$c56 = \"=\",\n      peg$c57 = peg$literalExpectation(\"=\", false),\n      peg$c58 = /^[QRBNK]/,\n      peg$c59 = peg$classExpectation([\"Q\", \"R\", \"B\", \"N\", \"K\"], false, false),\n      peg$c60 = \"$\",\n      peg$c61 = peg$literalExpectation(\"$\", false),\n      peg$c62 = \"!!\",\n      peg$c63 = peg$literalExpectation(\"!!\", false),\n      peg$c64 = \"??\",\n      peg$c65 = peg$literalExpectation(\"??\", false),\n      peg$c66 = \"!?\",\n      peg$c67 = peg$literalExpectation(\"!?\", false),\n      peg$c68 = \"?!\",\n      peg$c69 = peg$literalExpectation(\"?!\", false),\n      peg$c70 = \"!\",\n      peg$c71 = peg$literalExpectation(\"!\", false),\n      peg$c72 = \"?\",\n      peg$c73 = peg$literalExpectation(\"?\", false),\n      peg$c74 = /^[^}]/,\n      peg$c75 = peg$classExpectation([\"}\"], true, false),\n      peg$c76 = \"{\",\n      peg$c77 = peg$literalExpectation(\"{\", false),\n      peg$c78 = \"}\",\n      peg$c79 = peg$literalExpectation(\"}\", false),\n      peg$c80 = function(cc) {return cc.join('');},\n      peg$c81 = \"O-O-O\",\n      peg$c82 = peg$literalExpectation(\"O-O-O\", false),\n      peg$c83 = \"O-O\",\n      peg$c84 = peg$literalExpectation(\"O-O\", false),\n      peg$c85 = function(m) {return flatten(m).join('');},\n      peg$c86 = function(mn, m, n) {return n},\n      peg$c87 = function(mn, m, nags, c2) {return c2},\n      peg$c88 = function(mn, m, nags, com, r) {return r},\n      peg$c89 = function(mn, m, nags, com, ravs) {return make_move(mn, m, nags, ravs, com)},\n      peg$c90 = function(first, rest) {return first ? [first].concat(rest.map(function(m) {return m[1]})) : []},\n      peg$c91 = \"(\",\n      peg$c92 = peg$literalExpectation(\"(\", false),\n      peg$c93 = \")\",\n      peg$c94 = peg$literalExpectation(\")\", false),\n      peg$c95 = function(m, r) {return make_rav(m, r)},\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsegame();\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$parsenewline();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parsenewline();\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$parsegame();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsenewline();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsenewline();\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOF();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsegame() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseheaders();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsewhitespace();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsewhitespace();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parsemovetext();\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseresult();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c1(s1, s2, s5, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parseresult();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c2(s1, s2, s5);\n            }\n            s4 = s5;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsewhitespace();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsewhitespace();\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c3(s1, s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedouble_quote() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s0 = peg$c5;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestring() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedouble_quote();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c7.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c7.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsedouble_quote();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c9(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (peg$c10.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c12.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c12.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesymbol() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c15.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c15.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 12) {\n        s0 = peg$c20;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 9) {\n          s0 = peg$c22;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewhitespace() {\n    var s0;\n\n    s0 = peg$parsews();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsenewline();\n    }\n\n    return s0;\n  }\n\n  function peg$parsenewline() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c24;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseheader() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c26;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesymbol();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsews();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsestring();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c28;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c30(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseheaders() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseheader();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseheader();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c31(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepiece() {\n    var s0;\n\n    if (peg$c32.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserank() {\n    var s0;\n\n    if (peg$c34.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefile() {\n    var s0;\n\n    if (peg$c36.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheck() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c38;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheckmate() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s0 = peg$c40;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecapture() {\n    var s0;\n\n    if (peg$c42.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseperiod() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c44;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseresult() {\n    var s0;\n\n    if (input.substr(peg$currPos, 3) === peg$c46) {\n      s0 = peg$c46;\n      peg$currPos += 3;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c48) {\n        s0 = peg$c48;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s0 = peg$c50;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c52) {\n            s0 = peg$c52;\n            peg$currPos += 7;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c53); }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemove_number() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseperiod();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseperiod();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c54(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesquare() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parserank();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefile();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c55(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepromotion() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s1 = peg$c56;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$c58.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenag() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s2 = peg$c60;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseinteger();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsenag_alts() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c62) {\n      s0 = peg$c62;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c64) {\n        s0 = peg$c64;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c66) {\n          s0 = peg$c66;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c68) {\n            s0 = peg$c68;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c69); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 33) {\n              s0 = peg$c70;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 63) {\n                s0 = peg$c72;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c73); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecontinuation() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseperiod();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseperiod();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment_chars() {\n    var s0;\n\n    if (peg$c74.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c75); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c76;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsecomment_chars();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsecomment_chars();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c78;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c79); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c80(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepawn_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parserank();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecapture();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesquare();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepromotion();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecapture();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsesquare();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_disambiguation_half_move() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parserank();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsefile();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecapture();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesquare();\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecastle_half_move() {\n    var s0;\n\n    if (input.substr(peg$currPos, 5) === peg$c81) {\n      s0 = peg$c81;\n      peg$currPos += 5;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c82); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c83) {\n        s0 = peg$c83;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c84); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsehalf_move() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsecontinuation();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecastle_half_move();\n      if (s3 === peg$FAILED) {\n        s3 = peg$parsepiece_disambiguation_half_move();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parsepiece_half_move();\n          if (s3 === peg$FAILED) {\n            s3 = peg$parsepawn_half_move();\n          }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsecheck();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parsecheckmate();\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsenag_alts();\n          if (s5 === peg$FAILED) {\n            s5 = null;\n          }\n          if (s5 !== peg$FAILED) {\n            s2 = [s2, s3, s4, s5];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c85(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsemove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove_number();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsehalf_move();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = [];\n          s7 = peg$parsewhitespace();\n          if (s7 !== peg$FAILED) {\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parsewhitespace();\n            }\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsenag();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c86(s1, s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsenag();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c86(s1, s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsecomment();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c87(s1, s3, s4, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$currPos;\n              s8 = [];\n              s9 = peg$parsewhitespace();\n              if (s9 !== peg$FAILED) {\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parsewhitespace();\n                }\n              } else {\n                s8 = peg$FAILED;\n              }\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parserav();\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s7;\n                  s8 = peg$c88(s1, s3, s4, s5, s9);\n                  s7 = s8;\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$currPos;\n                s8 = [];\n                s9 = peg$parsewhitespace();\n                if (s9 !== peg$FAILED) {\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parsewhitespace();\n                  }\n                } else {\n                  s8 = peg$FAILED;\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parserav();\n                  if (s9 !== peg$FAILED) {\n                    peg$savedPos = s7;\n                    s8 = peg$c88(s1, s3, s4, s5, s9);\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c89(s1, s3, s4, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemovetext() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parsewhitespace();\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewhitespace();\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsemove();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parsewhitespace();\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsemove();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserav() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c91;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c92); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsemovetext();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsewhitespace();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseresult();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c93;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c94); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c95(s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n\n      function flatten(a, acc = []) {\n          for (var i = 0; i < a.length; i++) {\n              if (Array.isArray(a[i])) {\n                  flatten(a[i], acc);\n              } else {\n                  acc.push(a[i]);\n              }\n          }\n          return acc;\n      }\n      function make_header(hn,hv) {\n          var m = {};\n          m[hn] = hv;\n          return m;\n      }\n      function make_move(move_number, move, nags, ravs, comment) {\n          var m = {};\n          if (move_number) m.move_number = move_number;\n          if (move) m.move = move;\n          if (nags && nags.length) m.nags = nags;\n          if (ravs && ravs.length) m.ravs = ravs;\n          if (comment) m.comment = comment;\n          return m;\n      }\n      function make_rav(moves, result) {\n          return {\n              moves, \n              result\n          };\n      }\n      function make_game(h, c, m, r) {\n          h = h || [];\n          return {\n              headers: h.reduce((acc, x) => Object.assign(acc, x), {}),\n              comment: c,\n              moves: m || [],\n              result: r\n          };\n      }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"sourceRoot":""}