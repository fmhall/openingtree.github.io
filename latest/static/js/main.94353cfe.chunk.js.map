{"version":3,"sources":["app/PGNParser.js","app/Constants.js","app/Common.js","app/util.js","app/OpeningGraph.js","app/OpeningManager.js","app/Analytics.js","pres/Navigator.js","pres/GlobalHeader.js","app/LichessIterator.js","app/ChessComIterator.js","app/PGNReader.js","pres/TimeControlLabels.js","pres/FilterLabels.js","pres/AdvancedFilters.js","pres/PGNLoader.js","pres/Settings.js","pres/ReportControls.js","pres/MovesList.js","pres/ControlsContainer.js","pres/StateManagement.js","pres/MainContainer.js","index.js"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","h","c","mr","m","r","headers","reduce","acc","x","Object","assign","comment","moves","result","make_game","peg$c4","peg$c6","peg$literalExpectation","peg$c7","peg$c8","peg$classExpectation","peg$c10","peg$c11","peg$c12","peg$c13","peg$c15","peg$c16","peg$c17","chars","peg$c19","peg$c21","peg$c23","peg$c25","peg$c27","peg$c29","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c39","peg$c41","peg$c42","peg$c43","peg$c45","peg$c47","peg$c49","peg$c51","peg$c53","peg$c57","peg$c58","peg$c59","peg$c61","peg$c63","peg$c65","peg$c67","peg$c69","peg$c71","peg$c73","peg$c74","peg$c75","peg$c77","peg$c79","peg$c82","peg$c84","peg$c85","flatten","a","isArray","push","peg$c86","mn","n","peg$c88","nags","com","peg$c92","peg$c94","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","s2","s3","s4","s5","peg$parsegame","peg$parsenewline","charAt","peg$parseEOF","map","g","s6","s7","peg$parseheader","peg$parseheaders","peg$parsecomment","peg$parsewhitespace","peg$parsemovetext","peg$parseresult","peg$c2","peg$parsedouble_quote","peg$parseinteger","test","parseInt","peg$parsews","peg$parsesymbol","peg$parsestring","hn","hv","make_header","peg$parsepiece","peg$parserank","peg$parsefile","peg$parsecapture","peg$parseperiod","substr","peg$parsesquare","peg$parsenag","peg$parsecomment_chars","peg$parsepawn_half_move","peg$parsepromotion","peg$parsehalf_move","peg$parsecontinuation","peg$parsecastle_half_move","peg$parsepiece_disambiguation_half_move","peg$parsepiece_half_move","peg$parsecheck","peg$parsecheckmate","peg$parsenag_alts","peg$parsemove","s8","s9","peg$parsemove_number","peg$parserav","move_number","move","ravs","make_move","first","rest","concat","ROOT_FEN","LICHESS_TIME_CONTROLS","CHESS_DOT_COM_TIME_CONTROLS","TIME_CONTROL_LABELS","DP_TABLE","simplifiedFen","fen","fenComponents","split","getTimeControlsArray","site","timeControlState","selected","Common","filter","timeControl","monthLabels","getTimeframeSteps","steps","year","value","startYear","currentYear","Date","getFullYear","currentMonth","getMonth","toLongLabel","fromLongLabel","month","getSelectedTimeFrameData","timeframe","timeframeSteps","fromIndex","toIndex","fromTimeframe","toTimeframe","currentDate","label","fromMonth","frmYear","getYear","fromTimeStamp","getTimeStampInfoFor","fromYear","toYear","toMonth","toTimeStamp","minOrMax","getTime","getDate","getDaysInMonth","isOpponentEloInSelectedRange","elo","range","OpeningGraph","graph","Graph","fullFen","resultObject","getNodeFromGraph","gameResults","playerColor","targetNode","Constants","newDetails","getUpdatedMoveDetails","fullSourceFen","fullTargetFen","currNode","movePlayedBy","createOrGetMoveNode","playedBy","playedByMax","Math","max","count","nodes","get","GraphNode","set","movesPlayedNode","movePlayed","san","GraphMove","currentMoveDetails","date","than","whiteWin","blackWin","draw","opponentElo","resultInt","blackElo","whiteElo","bestWin","bestWinGame","worstLoss","worstLossGame","lastPlayedGame","blackWins","whiteWins","draws","totalOpponentElo","from","entries","entry","gMove","orig","dest","to","level","levelFor","moveCount","maxCount","Map","properties","openingGraph","OpeningManager","plys","pgn","currentIndex","pgnAsList","moveForward","pgnList","pgnSoFar","pgnListSoFar","moveNumber","whitePly","blackPly","currMove","floor","moveTo","index","trackEvent","category","action","ReactGA","event","initialize","Navigator","props","openingManager","state","currentMove","window","addEventListener","keyHandler","bind","e","keyCode","previous","next","newProps","addPly","device","newState","moveBack","onChange","setState","opening","ChessEcoCodes","openingCode","code","Container","Row","Col","lg","className","Button","color","onClick","icon","faStepBackward","faStepForward","key","sm","React","Component","GlobalHeader","useState","isOpen","setIsOpen","modal","setModal","toggleModal","launch","url","open","Navbar","light","expand","src","height","width","alt","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","divider","Modal","toggle","ModalHeader","ListGroup","ListGroupItem","tag","target","ModalFooter","LichessIterator","playerName","advancedFilters","ready","showError","remainingBody","playerNameFilter","encodeURIComponent","colorFilter","ratedFilter","selectedTimeFrameData","timeSinceFilter","timeUntilFilter","selectedTimeControls","perfFilter","requestObject","request","json","on","error","response","statusCode","data","newBody","lastValidPGN","lastIndexOf","body","trim","parsedPGNs","pgnString","console","log","Variant","BlackElo","WhiteElo","abort","ChessComIterator","chessAPI","ChessWebAPI","queue","pendingRequests","parseGames","archiveResponse","games","game","rules","username","toLowerCase","ratedMode","rated","time_class","black","rating","white","dequeue","fetchAllGames","responseBody","archives","reverse","forEach","archiveUrl","components","archiveMonth","archiveYear","shouldFetchGamesFromArchive","dispatch","getPlayerCompleteMonthlyArchives","jsonBody","JSON","PGNReader","totalGames","pendingGames","pendingDownloads","streamsaver","mitm","fileWriter","close","header","moveObject","shouldDownloadToFile","notify","stopDownloading","continueProcessingGames","fileStream","createWriteStream","getWriter","encoder","TextEncoder","processor","write","encode","getPgnString","then","setTimeout","parsePGNTimed","pgnArray","chess","Chess","gameResult","element","sourceFen","targetFen","addMoveForFen","addGameResultOnFen","addResultToRoot","White","Black","Link","Site","timeClasses","unselectedTimeControls","includesAll","arr","subArray","every","v","includes","getTimeControlLabel","timeClass","control","lichessTimeControlLabel","AdvancedFilters","currentlyOpenAdvancedFilter","timeframeMarks","downloadLimitMarks","eloRangeMarks","filterName","subSectionComponent","toggleRated","setCurrentlyOpenAdvancedFilter","getTimeControlFilters","getTimeFrameFilters","selectedEloRange","getEloRangeFilters","downloadLimit","getDownloadLimitFilters","Slider","handleDownloadLimitChange","valueLabelDisplay","valueLabelFormat","val","step","min","marks","handleTimeframeChange","handleEloRangeChange","firstRow","middleRow","lastRow","colWidth","FormControl","FormGroup","getTimeControlFilterRow","controls","firstColumnWidth","position","clsName","FormControlLabel","Checkbox","checked","handleTimeControlChange","title","changeCallback","children","getFilters","PGNLoader","unload","pgnReader","settings","isAdvancedFiltersOpen","isGamesSubsectionOpen","removeEventListener","property","fetchPGNFromSite","readPgn","clear","setDownloading","newValue","mainObject","subObject","createSubObjectWithProperties","RadioGroup","defaultValue","siteChange","Radio","TextField","id","variant","margin","playerNameChange","playerColorChange","toggleState","faCaretUp","faCaretDown","Card","load","startIcon","disableElevation","download","gamesProcessed","isDownloading","stopDownloadingAction","switchToMovesTab","faList","SettingsView","eventName","reset","faRetweet","clearAction","faTrashAlt","resetAction","faFastBackward","analyse","faDesktop","ControlsContainer","stopPropagation","copyText","document","getElementById","select","setSelectionRange","execCommand","showInfo","simplifiedView","multiline","rowsMax","inputProps","style","fontSize","spellCheck","copyFen","moveDetails","getFenField","switchToUserTab","faUser","performanceDetails","totalElo","averageElo","round","score","scorePercentage","ratingChange","performanceRating","Number","isInteger","toFixed","abs","getPerformanceDetails","Table","eatClicks","TableHead","TableRow","TableCell","TableBody","launchGame","faExternalLinkAlt","TableFooter","colSpan","rel","MovesList","openPerformanceIndex","onMove","prevProps","prevState","turnColor","moveIndex","resultsTable","movesTable","whitePlayer","player","blackPlayer","performancePopoverOpen","openMove","movesToShow","Popover","trigger","placement","togglePerformancePopover","hasMoves","size","sampleResultWhite","sampleResultBlack","sampleResult","faInfoCircle","getPopover","Progress","multi","bar","activeTab","tab","tabs","NavItem","NavLink","classnames","active","faChartBar","faCog","TabContent","TabPane","tabId","settingsChange","updateProcessedGames","getDetailsForFen","turn","brushes","forBrushes","againstBrushes","calcMovable","dests","SQUARES","ms","square","verbose","free","orientation","promotion","lastMove","onMoveAction","navigateTo","previousMove","totalGamesProcessed","downloadingGames","moveToShape","brush","autoShapes","shapes","fillArray","movesForFen","b","gameResultsForFen","len","trackingLabel","messageSeverity","closeError","MainContainer","obj","chessboardWidth","getChessboardWidth","innerWidth","lastMoveArray","snackBarOpen","order","xs","movable","drawable","enabled","visible","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","ReactDOM","render","pageview","pathname"],"mappings":"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","file":"static/js/main.94353cfe.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(gs) {return gs.map(function(g) { return g[0]})},\n      peg$c1 = function(h, c, m, r) {return [m, r]},\n      peg$c2 = function(h, c, r) {return [null, r]},\n      peg$c3 = function(h, c, mr) {return make_game(h, c, mr[0], mr[1])},\n      peg$c4 = peg$anyExpectation(),\n      peg$c5 = \"\\\"\",\n      peg$c6 = peg$literalExpectation(\"\\\"\", false),\n      peg$c7 = /^[^\"]/,\n      peg$c8 = peg$classExpectation([\"\\\"\"], true, false),\n      peg$c9 = function(str) {return str.join('')},\n      peg$c10 = /^[1-9]/,\n      peg$c11 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c12 = /^[0-9]/,\n      peg$c13 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c14 = function(a, b) {return parseInt(a+b.join(''), 10)},\n      peg$c15 = /^[A-Za-z0-9_\\-]/,\n      peg$c16 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"], \"_\", \"-\"], false, false),\n      peg$c17 = function(chars) {return chars.join('')},\n      peg$c18 = \" \",\n      peg$c19 = peg$literalExpectation(\" \", false),\n      peg$c20 = \"\\f\",\n      peg$c21 = peg$literalExpectation(\"\\f\", false),\n      peg$c22 = \"\\t\",\n      peg$c23 = peg$literalExpectation(\"\\t\", false),\n      peg$c24 = \"\\n\",\n      peg$c25 = peg$literalExpectation(\"\\n\", false),\n      peg$c26 = \"[\",\n      peg$c27 = peg$literalExpectation(\"[\", false),\n      peg$c28 = \"]\",\n      peg$c29 = peg$literalExpectation(\"]\", false),\n      peg$c30 = function(hn, hv) { return make_header(hn,hv) },\n      peg$c31 = function(hs) {return hs},\n      peg$c32 = /^[NKQRBP]/,\n      peg$c33 = peg$classExpectation([\"N\", \"K\", \"Q\", \"R\", \"B\", \"P\"], false, false),\n      peg$c34 = /^[a-h]/,\n      peg$c35 = peg$classExpectation([[\"a\", \"h\"]], false, false),\n      peg$c36 = /^[1-8]/,\n      peg$c37 = peg$classExpectation([[\"1\", \"8\"]], false, false),\n      peg$c38 = \"+\",\n      peg$c39 = peg$literalExpectation(\"+\", false),\n      peg$c40 = \"#\",\n      peg$c41 = peg$literalExpectation(\"#\", false),\n      peg$c42 = /^[x@]/,\n      peg$c43 = peg$classExpectation([\"x\", \"@\"], false, false),\n      peg$c44 = \".\",\n      peg$c45 = peg$literalExpectation(\".\", false),\n      peg$c46 = \"1-0\",\n      peg$c47 = peg$literalExpectation(\"1-0\", false),\n      peg$c48 = \"0-1\",\n      peg$c49 = peg$literalExpectation(\"0-1\", false),\n      peg$c50 = \"*\",\n      peg$c51 = peg$literalExpectation(\"*\", false),\n      peg$c52 = \"1/2-1/2\",\n      peg$c53 = peg$literalExpectation(\"1/2-1/2\", false),\n      peg$c54 = function(mn) {return mn},\n      peg$c55 = function(r, f) {return r+f},\n      peg$c56 = \"=\",\n      peg$c57 = peg$literalExpectation(\"=\", false),\n      peg$c58 = /^[QRBNK]/,\n      peg$c59 = peg$classExpectation([\"Q\", \"R\", \"B\", \"N\", \"K\"], false, false),\n      peg$c60 = \"$\",\n      peg$c61 = peg$literalExpectation(\"$\", false),\n      peg$c62 = \"!!\",\n      peg$c63 = peg$literalExpectation(\"!!\", false),\n      peg$c64 = \"??\",\n      peg$c65 = peg$literalExpectation(\"??\", false),\n      peg$c66 = \"!?\",\n      peg$c67 = peg$literalExpectation(\"!?\", false),\n      peg$c68 = \"?!\",\n      peg$c69 = peg$literalExpectation(\"?!\", false),\n      peg$c70 = \"!\",\n      peg$c71 = peg$literalExpectation(\"!\", false),\n      peg$c72 = \"?\",\n      peg$c73 = peg$literalExpectation(\"?\", false),\n      peg$c74 = /^[^}]/,\n      peg$c75 = peg$classExpectation([\"}\"], true, false),\n      peg$c76 = \"{\",\n      peg$c77 = peg$literalExpectation(\"{\", false),\n      peg$c78 = \"}\",\n      peg$c79 = peg$literalExpectation(\"}\", false),\n      peg$c80 = function(cc) {return cc.join('');},\n      peg$c81 = \"O-O-O\",\n      peg$c82 = peg$literalExpectation(\"O-O-O\", false),\n      peg$c83 = \"O-O\",\n      peg$c84 = peg$literalExpectation(\"O-O\", false),\n      peg$c85 = function(m) {return flatten(m).join('');},\n      peg$c86 = function(mn, m, n) {return n},\n      peg$c87 = function(mn, m, nags, c2) {return c2},\n      peg$c88 = function(mn, m, nags, com, r) {return r},\n      peg$c89 = function(mn, m, nags, com, ravs) {return make_move(mn, m, nags, ravs, com)},\n      peg$c90 = function(first, rest) {return first ? [first].concat(rest.map(function(m) {return m[1]})) : []},\n      peg$c91 = \"(\",\n      peg$c92 = peg$literalExpectation(\"(\", false),\n      peg$c93 = \")\",\n      peg$c94 = peg$literalExpectation(\")\", false),\n      peg$c95 = function(m, r) {return make_rav(m, r)},\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsegame();\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$parsenewline();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parsenewline();\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$parsegame();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsenewline();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsenewline();\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOF();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsegame() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseheaders();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsewhitespace();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsewhitespace();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parsemovetext();\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseresult();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c1(s1, s2, s5, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parseresult();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c2(s1, s2, s5);\n            }\n            s4 = s5;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsewhitespace();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsewhitespace();\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c3(s1, s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedouble_quote() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s0 = peg$c5;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestring() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedouble_quote();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c7.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c7.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsedouble_quote();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c9(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (peg$c10.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c12.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c12.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesymbol() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c15.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c15.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 12) {\n        s0 = peg$c20;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 9) {\n          s0 = peg$c22;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewhitespace() {\n    var s0;\n\n    s0 = peg$parsews();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsenewline();\n    }\n\n    return s0;\n  }\n\n  function peg$parsenewline() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c24;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseheader() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c26;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesymbol();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsews();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsestring();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c28;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c30(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseheaders() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseheader();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseheader();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c31(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepiece() {\n    var s0;\n\n    if (peg$c32.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserank() {\n    var s0;\n\n    if (peg$c34.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefile() {\n    var s0;\n\n    if (peg$c36.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheck() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c38;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheckmate() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s0 = peg$c40;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecapture() {\n    var s0;\n\n    if (peg$c42.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseperiod() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c44;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseresult() {\n    var s0;\n\n    if (input.substr(peg$currPos, 3) === peg$c46) {\n      s0 = peg$c46;\n      peg$currPos += 3;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c48) {\n        s0 = peg$c48;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s0 = peg$c50;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c52) {\n            s0 = peg$c52;\n            peg$currPos += 7;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c53); }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemove_number() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseperiod();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseperiod();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c54(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesquare() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parserank();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefile();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c55(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepromotion() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s1 = peg$c56;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$c58.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenag() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s2 = peg$c60;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseinteger();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsenag_alts() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c62) {\n      s0 = peg$c62;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c64) {\n        s0 = peg$c64;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c66) {\n          s0 = peg$c66;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c68) {\n            s0 = peg$c68;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c69); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 33) {\n              s0 = peg$c70;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 63) {\n                s0 = peg$c72;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c73); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecontinuation() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseperiod();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseperiod();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment_chars() {\n    var s0;\n\n    if (peg$c74.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c75); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c76;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsecomment_chars();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsecomment_chars();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c78;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c79); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c80(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepawn_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parserank();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecapture();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesquare();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepromotion();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecapture();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsesquare();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_disambiguation_half_move() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parserank();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsefile();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecapture();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesquare();\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecastle_half_move() {\n    var s0;\n\n    if (input.substr(peg$currPos, 5) === peg$c81) {\n      s0 = peg$c81;\n      peg$currPos += 5;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c82); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c83) {\n        s0 = peg$c83;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c84); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsehalf_move() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsecontinuation();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecastle_half_move();\n      if (s3 === peg$FAILED) {\n        s3 = peg$parsepiece_disambiguation_half_move();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parsepiece_half_move();\n          if (s3 === peg$FAILED) {\n            s3 = peg$parsepawn_half_move();\n          }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsecheck();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parsecheckmate();\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsenag_alts();\n          if (s5 === peg$FAILED) {\n            s5 = null;\n          }\n          if (s5 !== peg$FAILED) {\n            s2 = [s2, s3, s4, s5];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c85(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsemove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove_number();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsehalf_move();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = [];\n          s7 = peg$parsewhitespace();\n          if (s7 !== peg$FAILED) {\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parsewhitespace();\n            }\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsenag();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c86(s1, s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsenag();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c86(s1, s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsecomment();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c87(s1, s3, s4, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$currPos;\n              s8 = [];\n              s9 = peg$parsewhitespace();\n              if (s9 !== peg$FAILED) {\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parsewhitespace();\n                }\n              } else {\n                s8 = peg$FAILED;\n              }\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parserav();\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s7;\n                  s8 = peg$c88(s1, s3, s4, s5, s9);\n                  s7 = s8;\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$currPos;\n                s8 = [];\n                s9 = peg$parsewhitespace();\n                if (s9 !== peg$FAILED) {\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parsewhitespace();\n                  }\n                } else {\n                  s8 = peg$FAILED;\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parserav();\n                  if (s9 !== peg$FAILED) {\n                    peg$savedPos = s7;\n                    s8 = peg$c88(s1, s3, s4, s5, s9);\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c89(s1, s3, s4, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemovetext() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parsewhitespace();\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewhitespace();\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsemove();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parsewhitespace();\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsemove();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserav() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c91;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c92); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsemovetext();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsewhitespace();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseresult();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c93;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c94); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c95(s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n\n      function flatten(a, acc = []) {\n          for (var i = 0; i < a.length; i++) {\n              if (Array.isArray(a[i])) {\n                  flatten(a[i], acc);\n              } else {\n                  acc.push(a[i]);\n              }\n          }\n          return acc;\n      }\n      function make_header(hn,hv) {\n          var m = {};\n          m[hn] = hv;\n          return m;\n      }\n      function make_move(move_number, move, nags, ravs, comment) {\n          var m = {};\n          if (move_number) m.move_number = move_number;\n          if (move) m.move = move;\n          if (nags && nags.length) m.nags = nags;\n          if (ravs && ravs.length) m.ravs = ravs;\n          if (comment) m.comment = comment;\n          return m;\n      }\n      function make_rav(moves, result) {\n          return {\n              moves, \n              result\n          };\n      }\n      function make_game(h, c, m, r) {\n          h = h || [];\n          return {\n              headers: h.reduce((acc, x) => Object.assign(acc, x), {}),\n              comment: c,\n              moves: m || [],\n              result: r\n          };\n      }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","export const TIME_CONTROL_ULTRA_BULLET = \"ultraBullet\"\nexport const TIME_CONTROL_BULLET = \"bullet\"\nexport const TIME_CONTROL_BLITZ = \"blitz\"\nexport const TIME_CONTROL_RAPID = \"rapid\"\nexport const TIME_CONTROL_CLASSICAL = \"classical\"\nexport const TIME_CONTROL_CORRESPONDENCE = \"correspondence\"\nexport const TIME_CONTROL_DAILY = \"daily\"\nexport const FILTER_NAME_RATED = \"rated\"\nexport const FILTER_NAME_SELECTED_TIMEFRAME = \"selectedTimeframe\"\nexport const FILTER_NAME_DOWNLOAD_LIMIT = \"downloadLimit\"\nexport const FILTER_NAME_ELO_RANGE = \"eloRange\"\n\nexport const SITE_LICHESS = \"lichess\"\nexport const SITE_CHESS_DOT_COM = \"chesscom\"\nexport const MAX_DOWNLOAD_LIMIT = 2000\nexport const MAX_ELO_RATING = 3000\n\nexport const EVENT_CATEGORY_PGN_LOADER = \"loader\"\nexport const EVENT_CATEGORY_MOVES_LIST = \"moves\"\nexport const EVENT_CATEGORY_CONTROLS = \"controls\"\nexport const EVENT_CATEGORY_NAVIGATOR = \"navigator\"\nexport const EVENT_CATEGORY_CHESSBOARD = \"chessboard\"\nexport const EVENT_CATEGORY_ERROR = \"error\"\n\nexport const ROOT_FEN = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"","import * as Constants from './Constants'\n\nexport const LICHESS_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_ULTRA_BULLET,\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_CLASSICAL,\n    Constants.TIME_CONTROL_CORRESPONDENCE\n]\nexport const CHESS_DOT_COM_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_DAILY,\n]\n\nexport const TIME_CONTROL_LABELS = {\n    [Constants.TIME_CONTROL_ULTRA_BULLET]: \"Ultrabullet\",\n    [Constants.TIME_CONTROL_BULLET]: \"Bullet\",\n    [Constants.TIME_CONTROL_BLITZ]: \"Blitz\",\n    [Constants.TIME_CONTROL_RAPID]: \"Rapid\",\n    [Constants.TIME_CONTROL_CLASSICAL]: \"Classical\",\n    [Constants.TIME_CONTROL_CORRESPONDENCE]: \"Correspondence\",\n    [Constants.TIME_CONTROL_DAILY]: \"Daily\"\n}\n\nexport const DP_TABLE = {\n    \"100\":800,\n    \"99\":677,\n    \"98\":589,\n    \"97\":538,\n    \"96\":501,\n    \"95\":470,\n    \"94\":444,\n    \"93\":422,\n    \"92\":401,\n    \"91\":383,\n    \"90\":366,\n    \"89\":351,\n    \"88\":336,\n    \"87\":322,\n    \"86\":309,\n    \"85\":296,\n    \"84\":284,\n    \"83\":273,\n    \"82\":262,\n    \"81\":251,\n    \"80\":240,\n    \"79\":230,\n    \"78\":220,\n    \"77\":211,\n    \"76\":202,\n    \"75\":193,\n    \"74\":184,\n    \"73\":175,\n    \"72\":166,\n    \"71\":158,\n    \"70\":149,\n    \"69\":141,\n    \"68\":133,\n    \"67\":125,\n    \"66\":117,\n    \"65\":110,\n    \"64\":102,\n    \"63\":95,\n    \"62\":87,\n    \"61\":80,\n    \"60\":72,\n    \"59\":65,\n    \"58\":57,\n    \"57\":50,\n    \"56\":43,\n    \"55\":36,\n    \"54\":29,\n    \"53\":21,\n    \"52\":14,\n    \"51\":7,\n    \"50\":0,\n    \"49\":-7,\n    \"48\":-14,\n    \"47\":-21,\n    \"46\":-29,\n    \"45\":-36,\n    \"44\":-43,\n    \"43\":-50,\n    \"42\":-57,\n    \"41\":-65,\n    \"40\":-72,\n    \"39\":-80,\n    \"38\":-87,\n    \"37\":-95,\n    \"36\":-102,\n    \"35\":-110,\n    \"34\":-117,\n    \"33\":-125,\n    \"32\":-133,\n    \"31\":-141,\n    \"30\":-149,\n    \"29\":-158,\n    \"28\":-166,\n    \"27\":-175,\n    \"26\":-184,\n    \"25\":-193,\n    \"24\":-202,\n    \"23\":-211,\n    \"22\":-220,\n    \"21\":-230,\n    \"20\":-240,\n    \"19\":-251,\n    \"18\":-262,\n    \"17\":-273,\n    \"16\":-284,\n    \"15\":-296,\n    \"14\":-309,\n    \"13\":-322,\n    \"12\":-336,\n    \"11\":-351,\n    \"10\":-366,\n    \"9\":-383,\n    \"8\":-401,\n    \"7\":-422,\n    \"6\":-444,\n    \"5\":-470,\n    \"4\":-501,\n    \"3\":-538,\n    \"2\":-589,\n    \"1\":-677,\n    \"0\":-800,\n}","import * as Constants from '../app/Constants'\nimport * as Common from '../app/Common'\n\nexport function createSubObjectWithProperties(mainObject, properties) {\n    let subObject = {}\n    properties.forEach(property => {\n        subObject[property] = mainObject[property]\n    });\n    return subObject\n}\nexport function simplifiedFen(fen) {\n    let fenComponents = fen.split(' ')\n    if(fenComponents.length <=4) {\n        return fen\n    }\n    //exclude move and halfMove components\n    return `${fenComponents[0]} ${fenComponents[1]} ${fenComponents[2]}`\n}\n\nexport function getTimeControlsArray(site,timeControlState, selected) {\n    let allTimeControls = site === Constants.SITE_LICHESS ? \n        Common.LICHESS_TIME_CONTROLS : Common.CHESS_DOT_COM_TIME_CONTROLS\n    return allTimeControls.filter((timeControl)=>!!timeControlState[timeControl] === selected)\n}\nlet monthLabels = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n]\nexport function getTimeframeSteps() {\n    let steps = [{\n        year:2007,\n        value:0\n    }]\n    let value = 1;\n    let startYear = 2010\n    let currentYear = new Date().getFullYear()\n    let currentMonth = new Date().getMonth()\n    while(startYear < currentYear-1) {\n        steps.push({\n            toLongLabel:`${monthLabels[11]} ${startYear}`,\n            fromLongLabel:`${monthLabels[0]} ${startYear}`,\n            year:startYear,\n            value:value\n        })\n        startYear++\n        value++\n    }\n    for(let i=11;i>0;i--) {\n\n        let month = (currentMonth+12-i)%12\n        let year = month<currentMonth?currentYear:currentYear-1\n        steps.push({\n            fromLongLabel: `${monthLabels[month]} ${year}`,\n            toLongLabel: `${monthLabels[month]} ${year}`,\n            month:month,\n            year: year,\n            value:value\n        })\n        value++\n    }\n    steps.push({\n        month:12,\n        year: currentYear,\n        value:value\n    })\n    return steps\n}\n\nexport function getSelectedTimeFrameData(timeframe, timeframeSteps) {\n    let fromIndex = timeframe[0]\n    let toIndex = timeframe[1]\n    let fromTimeframe = timeframeSteps[fromIndex]\n    let toTimeframe = timeframeSteps[toIndex]\n    \n    if(fromIndex === timeframeSteps.length-1 && toIndex === timeframeSteps.length-1) {\n        let currentDate = new Date()\n        return {\n            label:\"Current month\",\n            fromMonth:currentDate.getMonth(),\n            frmYear:currentDate.getYear(),\n            fromTimeStamp:getTimeStampInfoFor(currentDate.getMonth(), currentDate.getYear(), \"min\")\n        }\n    }\n    if(fromIndex === 0 && toIndex === 0) {\n        return {label:\"Anytime\"}\n    }\n    if(fromIndex === 0 && toIndex === timeframeSteps.length-1) {\n        return {label:\"Anytime\"}\n    }\n    if(toIndex === timeframeSteps.length-1) {\n        let month = fromTimeframe.month ? fromTimeframe.month : 0\n        return {\n            label:`Since ${fromTimeframe.fromLongLabel}`,\n            fromYear: fromTimeframe.year,\n            fromMonth: month,\n            fromTimeStamp: getTimeStampInfoFor(month, fromTimeframe.year, \"min\")\n        }\n    }\n    if(fromIndex === 0) {\n        let month = toTimeframe.month ? toTimeframe.month : 11\n        return {\n            label:`Until ${toTimeframe.toLongLabel}`,\n            toYear: toTimeframe.year,\n            toMonth: month,\n            toTimeStamp: getTimeStampInfoFor(month, toTimeframe.year, \"max\")\n        }\n    }\n    let fromMonth = fromTimeframe.month ? fromTimeframe.month : 0\n    let toMonth = toTimeframe.month ? toTimeframe.month : 11\n    return {\n        label:`From ${fromTimeframe.fromLongLabel} to ${toTimeframe.toLongLabel}`,\n        fromYear: fromTimeframe.year,\n        fromMonth: fromMonth,\n        fromTimeStamp: getTimeStampInfoFor(fromMonth, fromTimeframe.year, \"min\"),\n        toYear: toTimeframe.year,\n        toMonth: toMonth,\n        toTimeStamp: getTimeStampInfoFor(toMonth, toTimeframe.year, \"max\")\n    }\n}\n\nfunction getTimeStampInfoFor(month, year, minOrMax) {\n    if(minOrMax === \"min\") {\n        return new Date(year, month).getTime()\n    } else {\n        return new Date(year,month,getDaysInMonth(year, month)).getTime()\n    }\n}\n\nfunction getDaysInMonth(year,month) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\nexport function getPerformanceDetails(totalElo, white, draws, black, playerColor) {\n    let totalGames = white + draws + black\n    let averageElo = Math.round(totalElo/totalGames)\n    let playerWins = playerColor==='white'?white:black\n    let score = playerWins+(draws/2)\n    let scorePercentage = Math.round(score*100/totalGames)\n    let ratingChange = Common.DP_TABLE[scorePercentage]\n    return {\n        performanceRating:averageElo+ratingChange,\n        averageElo: averageElo,\n        score:`${Number.isInteger(score)?score:score.toFixed(1)}/${totalGames}`,\n        ratingChange:`${ratingChange===0?'':(ratingChange>0?'+':'-')}${Math.abs(ratingChange)}`\n    }\n}\n\nexport function isOpponentEloInSelectedRange(elo, range) {\n    if(range[1]===Constants.MAX_ELO_RATING) {\n        return elo>=range[0]\n    }\n    return elo<=range[1] && elo>=range[0]\n}\n\nexport function isDateMoreRecentThan(date, than) {\n    // give priority to game which has a date\n    if(!than) {\n        return false\n    }\n    if(!date) {\n        return true\n    } \n    return new Date(date)>new Date(than)\n}","import {simplifiedFen, isDateMoreRecentThan} from './util'\nimport * as Constants from './Constants'\n\nclass OpeningGraph {\n    constructor() {\n        this.graph=new Graph()\n    }\n    clear() {\n        this.graph = new Graph()\n    }\n    addGameResultOnFen(fullFen, resultObject) {\n        var currNode = this.getNodeFromGraph(fullFen)\n        currNode.gameResults.push(resultObject)\n    }\n    addResultToRoot(resultObject, playerColor) {\n        var targetNode = this.getNodeFromGraph(Constants.ROOT_FEN)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject, playerColor)\n        targetNode.details = newDetails\n    }\n\n    getDetailsForFen(fullFen) {\n        return this.getNodeFromGraph(simplifiedFen(fullFen)).details\n    }\n\n    addMoveForFen(fullSourceFen, fullTargetFen, move, resultObject, playerColor) {\n        var targetNode = this.getNodeFromGraph(fullTargetFen)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject, playerColor)\n        targetNode.details = newDetails\n\n        var currNode = this.getNodeFromGraph(fullSourceFen)\n        var movePlayedBy = this.createOrGetMoveNode(currNode.playedBy, move, fullTargetFen)\n        currNode.playedByMax = Math.max(currNode.playedByMax, targetNode.details.count)\n        currNode.playedBy = movePlayedBy\n    }\n\n    getNodeFromGraph(fullFen) {\n        let fen = simplifiedFen(fullFen)\n        var currNode = this.graph.nodes.get(fen)\n        if(!currNode) {\n            currNode = new GraphNode()\n            currNode.fen = fen\n            this.graph.nodes.set(fen, currNode)\n        }\n        return currNode\n    }\n    createOrGetMoveNode(movesPlayedNode, move, fullTargetFen){\n        var movePlayed = movesPlayedNode.get(move.san)\n\n        if(!movePlayed) {\n            movePlayed = new GraphMove()\n            movePlayed.move = move\n            movePlayed.fen = simplifiedFen(fullTargetFen)\n            movesPlayedNode.set(move.san, movePlayed)\n        }\n        return movesPlayedNode\n    }\n\n    getUpdatedMoveDetails(currentMoveDetails, resultObject, playerColor) {\n        let whiteWin = 0, blackWin = 0, draw = 0, opponentElo=0, resultInt = 0;\n        if(resultObject.result === '1-0') {\n            whiteWin = 1\n            resultInt = playerColor === 'white'? 1 : -1\n        } else if (resultObject.result === '0-1') {\n            blackWin = 1\n            resultInt = playerColor === 'black'? 1 : -1\n        } else {\n            draw = 1\n        }\n\n        if(playerColor === 'white') {\n            opponentElo = resultObject.blackElo\n        } else {\n            opponentElo = resultObject.whiteElo\n        }\n        if(resultInt === 1) {\n            if(!currentMoveDetails.bestWin || parseInt(opponentElo)>parseInt(currentMoveDetails.bestWin)) {\n                currentMoveDetails.bestWin = opponentElo\n                currentMoveDetails.bestWinGame = resultObject\n            }\n        }\n        if(resultInt === -1) {\n            if(!currentMoveDetails.worstLoss || parseInt(opponentElo)<parseInt(currentMoveDetails.worstLoss)) {\n                currentMoveDetails.worstLoss = opponentElo\n                currentMoveDetails.worstLossGame = resultObject\n            }\n        }\n        if(!currentMoveDetails.lastPlayedGame || \n            isDateMoreRecentThan(resultObject.date, currentMoveDetails.lastPlayedGame.date)) {\n                currentMoveDetails.lastPlayedGame = resultObject\n        }\n        currentMoveDetails.count += 1\n        currentMoveDetails.blackWins += blackWin\n        currentMoveDetails.whiteWins += whiteWin\n        currentMoveDetails.draws += draw\n        currentMoveDetails.totalOpponentElo += parseInt(opponentElo)\n        return currentMoveDetails\n    }\n\n    gameResultsForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return currNode.gameResults\n        }\n        return null\n    }\n    movesForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return Array.from(currNode.playedBy.entries()).map((entry)=> {\n                let gMove = entry[1]\n                let targetNode = this.graph.nodes.get(gMove.fen)\n                return {\n                    orig:gMove.move.from,\n                    dest:gMove.move.to,\n                    level:this.levelFor(targetNode.details.count, currNode.playedByMax),\n                    san:gMove.move.san,\n                    details:targetNode.details\n                }\n            })\n        }        \n        return null\n    }\n\n    levelFor(moveCount, maxCount){\n        if(maxCount <= 0 ||moveCount/maxCount > 0.8) {\n            return 2\n        }\n        if(moveCount/maxCount>0.3) {\n            return 1\n        }\n        return 0\n    }\n\n}\n\n\nclass Graph {\n    nodes = new Map()\n}\n\nclass GraphNode {\n    fen = ''\n    playedByMax = 0 // used to keep track of how many times the most frequent move is played for ease of calculation later\n    playedBy = new Map()\n    gameResults = []\n    properties = {}\n    details = emptyDetails()\n}\n\nclass GraphMove {\n    fen = ''\n    move = {}\n}\n\nfunction emptyDetails() {\n    return {\n        count: 0,\n        blackWins: 0,\n        whiteWins: 0,\n        draws: 0,\n        totalOpponentElo: 0,\n        bestWin:null,\n        bestWinGame:null,\n        worstLoss:null,\n        worstLossGame:null,\n        lastPlayedGame:null\n    }\n}\n\nexport const openingGraph = new OpeningGraph()","import * as Constants from './Constants'\n\nexport default class OpeningManager {\n    plys = [{pgn:'', fen:Constants.ROOT_FEN, move:null}]\n    currentIndex = 0\n    addPly(fen,move) {\n        if(this.currentIndex<this.plys.length-1 && this.plys[this.currentIndex+1].move.san === move.san) {\n            this.moveForward()\n            return\n        }\n        this.plys = this.plys.slice(0,this.currentIndex+1)\n        this.plys.push({\n            pgnAsList:this.pgnAsList(move.san),\n            fen: fen,\n            move: move\n        })\n        this.currentIndex++;\n        return this.plys[this.currentIndex]\n    }\n\n    pgnAsList(san) {\n        let pgnSoFar = this.pgnListSoFar()\n        let pgnList\n        if (!pgnSoFar) {\n            pgnList = []\n        } else {\n            pgnList = [...pgnSoFar]\n        }\n        let numPlys = this.plys.length\n        if(numPlys%2 !== 0) {\n            pgnList.push({\n                moveNumber:pgnList.length+1,\n                whitePly:san,\n                blackPly:''\n            })\n        } else {\n            let currMove = pgnList[pgnList.length-1]\n            currMove.blackPly = san\n            pgnList[pgnList.length-1] = currMove\n        }\n        return pgnList\n    }\n\n    currentMove() {\n        return Math.floor((this.currentIndex-1)/2);\n    }\n\n    pgnListSoFar(){\n        return this.plys[this.plys.length-1].pgnAsList\n    }\n\n    fen(){\n        return this.plys[this.currentIndex].fen\n    }\n\n    moveForward() {\n        return this.moveTo(this.currentIndex+1)\n    }\n    moveBack() {\n        return this.moveTo(this.currentIndex-1)\n    }\n    moveTo(index) {\n        if(index>=0 && index<this.plys.length) {\n            this.currentIndex = index\n        }\n        return this.plys[this.currentIndex]\n    }\n\n}","import ReactGA from 'react-ga';\nReactGA.initialize('UA-159149755-1');\n\nexport function trackPageView() {\n    ReactGA.pageview(window.location.pathname);\n}\n\nexport function trackEvent(category, action, label, value) {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n        value: value\n      })\n}","import React from 'react'\nimport ChessEcoCodes from 'chess-eco-codes'\nimport OpeningManager from '../app/OpeningManager'\nimport {Container, Row, Col, Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepForward, faStepBackward } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nexport default class Navigator extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.openingManager = new OpeningManager()\n        this.state = {\n            currentMove:0,\n          }      \n          window.addEventListener(\"keydown\",this.keyHandler.bind(this))\n  \n    }\n    keyHandler(e){\n        switch(e.keyCode) {\n          case 37:\n            this.previous(e, \"keyboard\")\n          break\n          case 39:\n            this.next(e, \"keyboard\")\n            break\n        }\n      }\n    \n    shouldComponentUpdate(newProps) {\n        //console.log(newProps)\n        if(newProps.fen !== this.openingManager.fen()) {\n            if(newProps.move === null) {\n                this.openingManager = new OpeningManager()\n                return true\n            }\n            this.openingManager.addPly(newProps.fen, newProps.move)\n            return true\n        }\n        return true\n    }\n\n    previous(e, device) {\n        let newState = this.openingManager.moveBack()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Previous\", device?device:\"mouse\")\n    }\n\n    next(e, device) {\n        let newState = this.openingManager.moveForward()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Next\", device?device:\"mouse\")\n    }\n\n    moveTo(index) {\n        return () => {\n            let newState = this.openingManager.moveTo(index*2+1)\n            this.props.onChange(newState.fen, newState.move)\n            this.setState({currentMove:this.openingManager.currentMove()})\n            trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"move\", null, index)\n        }\n    }\n\n    render(){\n        let opening = ChessEcoCodes(this.openingManager.fen())\n        if (opening) {\n            this.opening = opening.name\n            this.openingCode = opening.code\n        }\n        if(!this.openingManager.pgnListSoFar()) {\n            return <div></div>\n        }\n        return <Container>\n            <Row>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick= {this.previous.bind(this)}><FontAwesomeIcon icon={faStepBackward} /> prev</Button> </Col>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick = {this.next.bind(this)}>next <FontAwesomeIcon icon={faStepForward} /></Button></Col></Row>\n            <Row className=\"greyText\">{this.openingCode}: {this.opening}</Row>\n            {\n                this.openingManager.pgnListSoFar().map((move, index)=>\n                    <Row key={`${move.moveNumber}`} onClick={this.moveTo(index).bind(this)} className={`navCol ${this.openingManager.currentMove() === index? 'selectedMove':''}`}>\n                        <Col sm=\"12\" className = \"navMove border\">{`${move.moveNumber}. ${move.whitePly} ${move.blackPly}`}</Col>\n                    </Row>)\n            }\n        </Container>\n    }\n}","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  ListGroup,\n  ListGroupItem\n} from 'reactstrap'\n\nconst GlobalHeader = (props) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [modal, setModal] = useState(false);\n  \n  const toggle = () => setIsOpen(!isOpen)\n  const toggleModal = () => setModal(!modal)\n  \n  const launch = (url) => {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <img src=\"/opening-tree-logo.png\" height=\"32px\" width=\"32px\" alt=\"Logo\"/>\n        <NavbarBrand href=\"/\">&nbsp;OpeningTree.com</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n          </Nav>\n          <UncontrolledDropdown navbar>\n              <DropdownToggle className=\"bootNavColor\" nav caret>\n                More\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={toggleModal}>\n                  Acknowledgements\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"mailto:openingtreechess@gmail.com\")}>\n                  Feedback\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.reddit.com/message/compose/?to=opening_tree\")}>\n                  Message me on reddit\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={launch(\"https://lichess.org/\")}>\n                  Lichess\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.lichess4545.com/\")}>\n                  Lichess4545\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.chess.com\")}>\n                  Chess.com\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n        </Collapse>\n      </Navbar>\n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Acknowledgements</ModalHeader>\n        <ListGroup className=\"acknowledgement\">\n        <ListGroupItem tag=\"a\" href=\"https://lichess.org/api\" target=\"_blank\" action>Lichess API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.chess.com/club/chess-com-developer-community\" target=\"_blank\" action>Chess.com API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/ruilisi/react-chessground\" target=\"_blank\" action>ChessGround</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jhlywa/chess.js\" target=\"_blank\" action>Chess.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/niklasf/eco\" target=\"_blank\" action>Eco</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.freelogodesign.org\" target=\"_blank\" action>Free logo design</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/kevinludwig/pgn-parser\" target=\"_blank\" action>PGN Parser</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.reddit.com/r/chess\" target=\"_blank\" action>r/chess</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.reddit.com/r/anarchychess\" target=\"_blank\" action>r/anarchychess</ListGroupItem>\n        </ListGroup>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GlobalHeader\n","import request from 'request'\nimport { parse }  from './PGNParser'\nimport {getTimeControlsArray, getTimeframeSteps, getSelectedTimeFrameData, isOpponentEloInSelectedRange} from './util'\nimport * as Constants from './Constants'\nimport {trackEvent} from './Analytics'\n\nexport default class LichessIterator {\n\n    constructor(playerName, playerColor, advancedFilters, ready, showError) {\n        let remainingBody = ''\n        let lichessBaseURL = `https://lichess.org/api/games/user/`\n        let playerNameFilter = encodeURIComponent(playerName)\n        let colorFilter = `?color=${playerColor}`\n        let ratedFilter = `${advancedFilters[Constants.FILTER_NAME_RATED]===\"all\"?\"\":`&rated=${advancedFilters[Constants.FILTER_NAME_RATED]===\"rated\"?\"true\":\"false\"}`}`\n        let selectedTimeFrameData = getSelectedTimeFrameData(advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], getTimeframeSteps())\n        let timeSinceFilter = `${selectedTimeFrameData.fromTimeStamp?`&since=${selectedTimeFrameData.fromTimeStamp}`:\"\"}`\n        let timeUntilFilter = `${selectedTimeFrameData.toTimeStamp?`&until=${selectedTimeFrameData.toTimeStamp}`:\"\"}`\n        let selectedTimeControls = getTimeControlsArray(Constants.SITE_LICHESS, advancedFilters, true)\n        let perfFilter = selectedTimeControls.length === 0 || selectedTimeControls.length === 6?\n                \"\" : `&perfType=${selectedTimeControls.join(\",\")}`\n        let requestObject = request.get(\n            lichessBaseURL+playerNameFilter+colorFilter+ratedFilter+perfFilter+timeSinceFilter+timeUntilFilter, \n            { json: false }).on('error', (error)=> {\n                showError('failed to connect to lichess.org')\n                ready([], false)\n        }).on('response',(response)=>{\n            if(response.statusCode === 404) {\n                showError('could not find lichess user ' + playerName)\n            } else if (response.statusCode !== 200) {\n                showError('could not load games of lichess user ' + playerName)\n            }\n        }).on('data', (data) => {\n            let newBody = remainingBody + data.toString();\n            let lastValidPGN = newBody.lastIndexOf(\"\\n\\n\\n\")\n            let body = newBody.slice(0, lastValidPGN).trim()\n\n            remainingBody = newBody.slice(lastValidPGN).trim()\n            let pgnsArray = body.split(\"\\n\\n\\n\")\n\n            let parsedPGNs = pgnsArray.map((pgnString)=> {\n                try {\n                    return parse(pgnString)[0]\n                } catch (e) {\n                    console.log(\"failed to parse pgn\", pgnString)\n                    console.log(e)\n                    trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedLichess\", playerName)\n                    return null\n                }\n            })\n\n            let continueProcessing = ready(parsedPGNs.filter((pgn)=>{\n                if(!pgn || pgn.headers.Variant !== \"Standard\") {\n                    return false\n                }\n                let opponentElo = playerColor === 'white'?pgn.headers.BlackElo:pgn.headers.WhiteElo\n                if(!isOpponentEloInSelectedRange(opponentElo, advancedFilters[Constants.FILTER_NAME_ELO_RANGE])) {\n                    return false\n                }\n                return true\n            }), true)\n\n            if(!continueProcessing) {\n                requestObject.abort()\n            }\n        }).on('end', () => {\n            ready([], false)\n        })\n    }\n}\n","import ChessWebAPI from 'chess-web-api'\nimport { parse }  from './PGNParser'\nimport request from 'request'\nimport * as Constants from './Constants'\nimport {isOpponentEloInSelectedRange, getTimeframeSteps, getSelectedTimeFrameData} from './util'\nimport {trackEvent} from './Analytics'\n\nexport default class ChessComIterator {\n\n    constructor(playerName, playerColor, advancedFilters, ready, showError) {\n        let chessAPI = new ChessWebAPI({\n            queue: true,\n        });\n        let pendingRequests = 0;\n        let parseGames= (archiveResponse)=>{\n            pendingRequests--\n            let continueProcessing = ready(archiveResponse.body.games.filter(\n                game=>{\n                    if(game.rules!==\"chess\" || game[playerColor].username.toLowerCase() !== playerName.toLowerCase()) {\n                        return false\n                    }\n                    let ratedMode = advancedFilters[Constants.FILTER_NAME_RATED]\n                    if(ratedMode === 'rated' && !game.rated) {\n                        return false\n                    } else if (ratedMode === 'casual' && game.rated) {\n                        return false\n                    }\n                    if(!advancedFilters[game.time_class]) {\n                        return false\n                    }\n                    let opponentElo = playerColor === 'white'?game.black.rating:game.white.rating\n                    if(!isOpponentEloInSelectedRange(opponentElo, advancedFilters[Constants.FILTER_NAME_ELO_RANGE])) {\n                        return false\n                    }\n                    return true \n                }).map(\n                    game=> {\n                        try {\n                            return parse(game.pgn)[0]\n                        } catch (e) {\n                            console.log(\"failed to parse pgn\", game)\n                            console.log(e)\n                            trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedChessCom\", `${playerName}:${playerColor}`)\n                            return null\n                        }\n                    }).filter(game=> game !== null), pendingRequests>0)\n            if(!continueProcessing) {\n                //cancel all pending requests\n                while(chessAPI.dequeue()){}\n                pendingRequests = 0\n                ready([],false)\n            }\n        }\n        let shouldFetchGamesFromArchive = (archiveMonth,archiveYear, selectedTimeFrameData) => {\n            let fromYear = selectedTimeFrameData.fromYear || 1970\n            let toYear = selectedTimeFrameData.toYear || 10000\n            let fromMonth = selectedTimeFrameData.fromYear || 0\n            let toMonth = selectedTimeFrameData.toYear || 11\n    \n            if(archiveYear>fromYear && archiveYear<toYear) {\n                return true\n            }\n            if(archiveYear<fromYear || archiveYear>toYear) {\n                return false\n            }\n            if(archiveYear === fromYear) {\n                return archiveMonth >= fromMonth\n            }\n            if(archiveYear === toYear) {\n                return archiveMonth <= toMonth\n            }\n            console.log(\"should not happen\")\n            return true\n        }\n        let selectedTimeFrameData = getSelectedTimeFrameData(advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], getTimeframeSteps())\n        let fetchAllGames = function(responseBody) {\n            responseBody.archives.reverse().forEach((archiveUrl)=>{\n\n                let components=archiveUrl.split('/')\n                let year=components[components.length-2]\n                let month=components[components.length-1]\n                if(shouldFetchGamesFromArchive(month,year, selectedTimeFrameData)) {\n                    pendingRequests++\n                    chessAPI.dispatch(chessAPI.getPlayerCompleteMonthlyArchives, parseGames, [playerName, year, month]);\n                }\n            })\n            if(pendingRequests === 0) {\n                showError('Could not find games for chess.com user '+playerName)\n                ready([], false)\n            }\n        }\n\n        request(`https://api.chess.com/pub/player/${playerName}/games/archives`, function (error, response, body) {\n            if(error) {\n                showError('Could not connect to chess.com')\n                ready([], false)\n            } else if(response.statusCode === 404) {\n                showError('Could not find chess.com user '+playerName)\n                ready([], false)\n            } else if (response.statusCode !== 200) {\n                showError('Could not load games for chess.com user '+playerName)\n                ready([], false)\n            } else {\n                if(response.body) {\n                    try{\n                        let jsonBody = JSON.parse(response.body)\n                        fetchAllGames(jsonBody)\n                    }catch(e) {\n                        showError('Could not find games for chess.com user '+playerName)\n                        ready([], false)\n                    }\n                }\n            }\n        });\n    }\n\n\n}","import {openingGraph} from './OpeningGraph'\nimport Chess from 'chess.js'\nimport LichessIterator from './LichessIterator'\nimport ChessComIterator from './ChessComIterator'\nimport * as Constants from './Constants'\nimport streamsaver from 'streamsaver'\n\nexport default class PGNReader {\n    constructor() {\n        this.totalGames = 0;\n        this.pendingGames = 0;\n        this.pendingDownloads = true;\n        streamsaver.mitm = \"download/download-mitm.html\"\n        this.fileWriter = null\n    }\n\n    stopDownloading() {\n        if(this.fileWriter) {\n            this.fileWriter.close()\n            this.fileWriter = null\n        }\n    }\n\n    getPgnString(game){\n        return `${Object.entries(game.headers).map(header=>`[${header[0]} \"${header[1]}\"]`).join(\"\\n\")}\n                \\n${game.moves.map((moveObject, index)=>{\n                    return `${index%2!==0?'':index/2+1+\".\"} ${moveObject.move}`\n                }).join(' ')} ${game.result}\\n\\n\\n`\n    }\n\n    fetchPGNFromSite(playerName, playerColor, site, shouldDownloadToFile, advancedFilters, notify, showError, stopDownloading) {\n        this.continueProcessingGames = true\n        if(shouldDownloadToFile) {\n            let fileStream =  streamsaver.createWriteStream(`${playerName}-${playerColor}.pgn`)\n            this.fileWriter = fileStream.getWriter()\n        }\n        let encoder = new TextEncoder()\n        let downloadResponse = (result, pendingDownloads) => {\n            this.fileWriter.write(encoder.encode(result.map(game=>this.getPgnString(game)).join(\"\"))).then(()=>{\n                if(!pendingDownloads) {\n                    this.stopDownloading()\n                }\n            })\n            return true\n        }\n        let handleResponse = (result, pendingDownloads) => {\n            if(!result) {\n                return this.continueProcessingGames\n            }\n            this.totalGames += result.length\n            this.pendingGames += result.length\n            this.pendingDownloads = pendingDownloads\n            \n\n            setTimeout(() => {\n                this.parsePGNTimed(result, advancedFilters, playerColor, 0, playerName, notify, showError, stopDownloading)\n            } ,1)\n            return this.continueProcessingGames\n        }\n        let processor = shouldDownloadToFile? downloadResponse: handleResponse\n        if(site === Constants.SITE_LICHESS) {\n            new LichessIterator(playerName, playerColor, advancedFilters, processor, showError)\n        } else if(site === Constants.SITE_CHESS_DOT_COM) {\n            new ChessComIterator(playerName, playerColor, advancedFilters, processor, showError)\n        }\n\n        \n    }\n\n    parsePGNTimed(pgnArray, advancedFilters, playerColor, index,  playerName, notify, showError, stopDownloading) {\n        if(index< pgnArray.length) {\n            this.pendingGames--\n        }\n        if(!this.pendingDownloads && this.pendingGames <= 0) {\n            stopDownloading()\n        }\n\n        if(index>= pgnArray.length || !this.continueProcessingGames) {\n            return\n        }\n\n        var pgn = pgnArray[index]\n        if(pgn.moves[0] && pgn.moves[0].move_number === 1) {\n            let chess = new Chess()\n            let resultObject = this.gameResult(pgn)\n\n            pgn.moves.forEach(element => {\n                let sourceFen = chess.fen()\n                let move = chess.move(element.move)\n                let targetFen = chess.fen()\n                if(!move){\n                    console.log('failed to load game ' + pgn)\n                    showError(\"Failed to load game\", `${playerName}:${playerColor}`)\n                    return\n                }\n                openingGraph.addMoveForFen(sourceFen, targetFen, move, resultObject, playerColor)\n            })\n            let fen = chess.fen()\n            openingGraph.addGameResultOnFen(fen, resultObject)\n            openingGraph.addResultToRoot(resultObject, playerColor)\n            this.continueProcessingGames = notify(advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT],1, openingGraph)\n        }\n            setTimeout(()=>{this.parsePGNTimed(pgnArray, advancedFilters, playerColor, index+1, playerName, notify, showError, stopDownloading)},1)\n    }\n\n    gameResult(pgn) {\n        return {\n            result:pgn.result,\n            white:pgn.headers.White,\n            black:pgn.headers.Black,\n            whiteElo:pgn.headers.WhiteElo,\n            blackElo:pgn.headers.BlackElo,\n            url:pgn.headers.Link || pgn.headers.Site,\n            date:pgn.headers.Date\n        }\n    }\n}","import * as Constants from '../app/Constants'\nimport * as Common from '../app/Common'\nimport {getTimeControlsArray} from '../app/util'\n\nlet timeClasses = [\n    {\n        label:\"Fast time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    },\n    {\n        label:\"Slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ]\n    },\n    {\n        label:\"Reasonable time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET\n        ]\n    },\n    {\n        label:\"Exclude slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    }\n]\n        \n\n\nexport function timeControlLabel(site, timeControlState) {\n    let selectedTimeControls = getTimeControlsArray(site, timeControlState, true)\n    let unselectedTimeControls = getTimeControlsArray(site, timeControlState, false)\n    if(unselectedTimeControls.length === 0 || selectedTimeControls.length === 0) {\n        return \"All time controls\"\n    }\n    if(selectedTimeControls.length === 1) {\n        return Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]\n    }\n    if(unselectedTimeControls.length === 1) {\n        return `All except ${Common.TIME_CONTROL_LABELS[unselectedTimeControls[0]]}`\n    }\n    if(selectedTimeControls.length === 2) {\n        return `${Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]} and ${Common.TIME_CONTROL_LABELS[selectedTimeControls[1]]}`\n    }\n\n    return lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls)\n}\n\nfunction lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls) {\n    let timeClass = timeClasses.filter(\n        (timeClass) => {\n            return includesAll(unselectedTimeControls,timeClass.unselectedTimeControls)\n                && includesAll(selectedTimeControls,timeClass.selectedTimeControls)\n    })\n    if(timeClass.length) {\n        return timeClass[0].label\n    } \n    return selectedTimeControls.map(control=>Common.TIME_CONTROL_LABELS[control]).join(', ')\n}\n\nfunction includesAll(arr, subArray) {\n    return subArray.every(v => arr.includes(v));\n}\n","import {timeControlLabel} from './TimeControlLabels'\nimport {getSelectedTimeFrameData} from '../app/util'\nimport * as Constants from '../app/Constants'\n\nexport const getTimeControlLabel = timeControlLabel\n\nexport function getRatedLabel(rated) {\n    if(rated === 'all') {\n        return \"Rated and casual\"\n    } else if (rated === 'rated') {\n        return \"Rated only\"\n    } else if (rated === 'casual') {\n        return \"Casual only\"\n    }\n}\n\nexport function getWhenPlayedLabel(timeframe, timeframeSteps) {\n    return getSelectedTimeFrameData(timeframe, timeframeSteps).label\n}\n\nexport function getELORangeLabel(selectedEloRange) {\n    if(selectedEloRange[0] === 0 && selectedEloRange[1]===Constants.MAX_ELO_RATING) {\n        return \"All elo ratings\"\n    } else if (selectedEloRange[0] === 0) {\n        return `Below ${selectedEloRange[1]}`\n    } else if (selectedEloRange[1] === Constants.MAX_ELO_RATING) {\n        return `Above ${selectedEloRange[0]}`\n    } else {\n        return `Between ${selectedEloRange[0]} and ${selectedEloRange[1]}`\n    }\n}\nexport function getDownloadLimitLabel(downloadLimit) {\n    return downloadLimit>= Constants.MAX_DOWNLOAD_LIMIT?\"No limit\":`${downloadLimit} games`\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport React from 'react'\nimport {Collapse, Container, Row, Col} from 'reactstrap'\nimport { FormControlLabel,Slider } from '@material-ui/core';\nimport * as Constants from '../app/Constants'\nimport {getTimeControlLabel, getELORangeLabel, getRatedLabel, getWhenPlayedLabel, getDownloadLimitLabel} from './FilterLabels'\nimport * as Common from '../app/Common'\nimport {trackEvent} from '../app/Analytics'\n\nexport default class AdvancedFilters extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentlyOpenAdvancedFilter:'',\n        }\n        this.timeframeMarks=[\n            {\n                value:0,\n                label:\"Big bang\"\n            }, {\n                value:props.timeframeSteps.length-1,\n                label:\"Now\"\n            }]\n        this.downloadLimitMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_DOWNLOAD_LIMIT,\n                label:`No limit`\n            }]\n        this.eloRangeMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_ELO_RATING,\n                label:`No limit`\n            }]\n    \n    }\n    setCurrentlyOpenAdvancedFilter(filterName) {\n        return () => {\n            if(this.state.currentlyOpenAdvancedFilter === filterName) {\n                //close if already open\n                filterName = ''\n            }\n            this.setState({currentlyOpenAdvancedFilter:filterName})\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", filterName)\n        }\n    }\n\n    getFilters(site){\n        return <div>\n            {this.subSectionComponent('Mode', getRatedLabel(this.props.advancedFilters.rated), this.props.toggleRated)}\n            {this.subSectionComponent('Time control', getTimeControlLabel(this.props.site, this.props.advancedFilters), \n                    this.setCurrentlyOpenAdvancedFilter('timeControl').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'timeControl'}>\n                    {this.getTimeControlFilters(site, 4)}\n                </Collapse>\n            )}\n            {this.subSectionComponent('When played', getWhenPlayedLabel(this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], this.props.timeframeSteps), \n                this.setCurrentlyOpenAdvancedFilter('whenPlayed').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'whenPlayed'}>\n                    {this.getTimeFrameFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Opponent elo range', getELORangeLabel(this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]), \n                this.setCurrentlyOpenAdvancedFilter('eloRange').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'eloRange'}>\n                    {this.getEloRangeFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Download limit', getDownloadLimitLabel(this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]), \n                this.setCurrentlyOpenAdvancedFilter('downloadLimit').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'downloadLimit'}>\n                    {this.getDownloadLimitFilters()}\n                </Collapse>)}\n      </div>\n    }\n\n    getDownloadLimitFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]}\n            onChange={this.props.handleDownloadLimitChange}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={(val)=>val>=Constants.MAX_DOWNLOAD_LIMIT?\"All\":val}\n            step={100}\n            min={0}\n            marks={this.downloadLimitMarks}\n            max={Constants.MAX_DOWNLOAD_LIMIT}\n        />\n    }\n\n    getTimeFrameFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME]}\n            onChange={this.props.handleTimeframeChange}\n            valueLabelDisplay=\"off\"\n            valueLabelFormat={(val)=>this.props.timeframeSteps[val].label}\n            step={1}\n            marks={this.timeframeMarks}\n            min={0}\n            max={this.props.timeframeSteps.length-1}\n        />\n    }\n\n    getEloRangeFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]}\n            onChange={this.props.handleEloRangeChange}\n            valueLabelDisplay=\"off\"\n            marks={this.eloRangeMarks}\n            min={0}\n            max={Constants.MAX_ELO_RATING}\n        />\n    }\n\n    getTimeControlFilters(site){\n        let firstRow = null, middleRow = null, lastRow = null\n        let colWidth = null\n        if(site === 'lichess') {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_ULTRA_BULLET]\n            middleRow = [Constants.TIME_CONTROL_BLITZ,\n                        Constants.TIME_CONTROL_CLASSICAL]\n            lastRow = [Constants.TIME_CONTROL_RAPID,\n                        Constants.TIME_CONTROL_CORRESPONDENCE]\n            colWidth = '4'\n                    \n        } else {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_BLITZ]\n            lastRow = [Constants.TIME_CONTROL_RAPID, \n                        Constants.TIME_CONTROL_DAILY]\n            colWidth = '6'\n        }\n        return <FormControl><FormGroup><Container>\n            {this.getTimeControlFilterRow(firstRow,colWidth,'first')}\n            {middleRow?this.getTimeControlFilterRow(middleRow,colWidth,'middle'):null}\n            {this.getTimeControlFilterRow(lastRow,colWidth,'last')}\n          </Container>\n        </FormGroup></FormControl>\n      \n    }\n\n    getTimeControlFilterRow(controls,firstColumnWidth, position){\n        let clsName = 'topBottomNegativeMargin'\n        if(position === \"first\") {\n            clsName = 'bottomNegativeMargin'\n        } else if (position === \"last\") {\n            clsName = 'topNegativeMargin'\n        } \n        return <Row className={clsName}>\n            {controls.map((control) => \n            <Col sm={firstColumnWidth} key={`ctrl${control}`}>\n                \n            <FormControlLabel className = \"nomargin\"\n                control={<Checkbox checked={this.props.advancedFilters[control]} color=\"primary\" \n                onChange={this.props.handleTimeControlChange} name={control} />}\n                label={Common.TIME_CONTROL_LABELS[control]}\n          /></Col>)}</Row>\n    }\n\n    subSectionComponent(title, label, changeCallback, children) {\n        return <div className=\"pgnloadersection\">{title}: <span className=\"smallText\">[<span className=\"linkStyle\" onClick={changeCallback}>change</span>]</span>\n        <div><b>{label}</b></div>{children}\n        </div>\n    }\n\n\n    render() {\n        return this.getFilters(this.props.site)\n    }\n\n}","import React from 'react'\nimport PGNReader from '../app/PGNReader'\nimport {Button, Collapse, Card} from 'reactstrap'\nimport {Button as MaterialUIButton, TextField} from '@material-ui/core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faList, faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons'\nimport { Radio,FormControlLabel,RadioGroup } from '@material-ui/core';\nimport AdvancedFilters from './AdvancedFilters'\nimport {createSubObjectWithProperties, getTimeframeSteps} from '../app/util'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\nimport GetApp from '@material-ui/icons/GetApp';\nimport Equalizer from '@material-ui/icons/Equalizer';\n\n\nexport default class PGNLoader extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            playerName:'',\n            site:'lichess',\n            playerColor:this.props.settings.playerColor,\n            isAdvancedFiltersOpen:false,\n            isGamesSubsectionOpen:false\n        }\n        this.timeframeSteps = getTimeframeSteps()\n        this.state[Constants.FILTER_NAME_SELECTED_TIMEFRAME] = [0,this.timeframeSteps.length-1]\n        this.state[Constants.FILTER_NAME_DOWNLOAD_LIMIT] = Constants.MAX_DOWNLOAD_LIMIT\n        this.state[Constants.TIME_CONTROL_ULTRA_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BLITZ] = true\n        this.state[Constants.TIME_CONTROL_RAPID] = true\n        this.state[Constants.TIME_CONTROL_CLASSICAL] = true\n        this.state[Constants.TIME_CONTROL_CORRESPONDENCE] = true\n        this.state[Constants.TIME_CONTROL_DAILY] = true\n        this.state[Constants.FILTER_NAME_RATED] = \"all\"\n        this.state[Constants.FILTER_NAME_ELO_RANGE] = [0,Constants.MAX_ELO_RATING]\n    }\n\n    unload = ()=>{\n        if(this.pgnReader) {\n            this.pgnReader.stopDownloading()\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.unload);\n    }\n      \n    componentWillUnmount() {\n        window.removeEventListener(\"beforeunload\", this.unload);\n    }\n      \n\n\n    toggleRated() {\n        if(this.state.rated === 'all') {\n            this.setState({rated:'rated'})\n        } else if (this.state.rated === 'rated') {\n            this.setState({rated:'casual'})\n        } else {\n            this.setState({rated:'all'})\n        }\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", \"rated\")\n    }\n    toggleState(property) { \n        return () => {\n            let newState = {}\n            newState[property] = !this.state[property]\n            this.setState(newState)\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ToggleAdvancedFilters\", this.state.site)\n        }\n    }\n\n    playerNameChange(event) {\n        this.setState({\n            playerName:event.target.value\n        })\n    }\n    playerColorChange(playerColor) {\n        return () => {\n            this.setState({playerColor:playerColor})\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ColorChange\", playerColor)\n        }\n    }\n\n    readPgn(shouldDownloadToFile){\n        this.pgnReader = new PGNReader()\n        this.pgnReader.fetchPGNFromSite(this.state.playerName, \n            this.state.playerColor, \n            this.state.site,\n            shouldDownloadToFile,\n            this.advancedFilters(),\n            this.props.notify, \n            this.props.showError, \n            this.stopDownloading.bind(this))\n    }\n\n    download() {\n        if(!this.state.playerName) {\n            this.props.showError(\"Please enter a username\")\n            return\n        }\n        this.readPgn(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Download\", this.state.site, this.state.playerColor==='white'?1:0)\n\n    }\n\n    load() {\n        if(!this.state.playerName) {\n            this.props.showError(\"Please enter a username\")\n            return\n        }\n        this.props.clear()\n        // set the player name and color in the global state\n        this.props.onChange(\"playerName\", this.state.playerName)\n        this.props.onChange(\"playerColor\", this.state.playerColor)\n        this.setState({isAdvancedFiltersOpen:false,isGamesSubsectionOpen:true})\n        this.readPgn(false)\n        this.props.setDownloading(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Load\", this.state.site, this.state.playerColor==='white'?1:0)\n    }\n    stopDownloading() {\n        this.props.setDownloading(false)\n    }\n    stopDownloadingAction() {\n        this.stopDownloading()\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"StopDownloading\", this.state.site)\n    }\n    siteChange(event) {\n        this.setState({site:event.target.value})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ChangeSite\", this.state.site)\n    }\n\n    handleTimeControlChange(event) {\n        this.setState({[event.target.name]: event.target.checked });\n    }\n    handleTimeframeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_SELECTED_TIMEFRAME]: newValue });\n    }\n    handleEloRangeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_ELO_RANGE]: newValue });\n    }\n    handleDownloadLimitChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_DOWNLOAD_LIMIT]: newValue });\n    }\n\n    advancedFilters() {\n        return createSubObjectWithProperties(this.state, \n            [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n                Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n                Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n                Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED, \n                Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n                Constants.FILTER_NAME_ELO_RANGE])\n    }\n\n    render() {\n        return <div>\n            <div className = \"pgnloadersection\">\n                <RadioGroup defaultValue={Constants.SITE_LICHESS} onChange={this.siteChange.bind(this)}>\n                    <FormControlLabel className = \"sitelabel\" value={Constants.SITE_LICHESS} control={<Radio color=\"primary\"/>} label={<span><img alt=\"lichess\" className=\"siteimage\" src=\"./lichesslogo.png\"/> lichess.org</span>} />\n                    <FormControlLabel className = \"sitelabel\" value={Constants.SITE_CHESS_DOT_COM} control={<Radio color=\"primary\"/>} label={<img alt=\"chess.com\" className=\"siteimage\" src=\"./chesscomlogo.png\"/>} />\n                </RadioGroup>\n            </div>\n            <div className = \"pgnloadersection\">\n                <TextField \n                    className=\"playernameField\" name=\"playerName\" id=\"playerNameTextBox\" variant=\"outlined\"\n                    margin=\"dense\" onChange= {this.playerNameChange.bind(this)} \n                    label={`${this.state.site===Constants.SITE_LICHESS?\"lichess\":\"chess.com\"} username`}/>\n            </div>\n            <div  className=\"pgnloadersection\">Games played as: \n                <div>\n                <Button onClick = {this.playerColorChange('white')} color = {this.state.playerColor === 'white'?'secondary':'link'}>White</Button>\n                <Button onClick = {this.playerColorChange('black')} color = {this.state.playerColor === 'black'?'secondary':'link'}>Black</Button>\n                </div>\n            </div>\n    <div className=\"pgnloadersection\"><span className=\"linkStyle\" onClick ={this.toggleState('isAdvancedFiltersOpen').bind(this)}>Advanced filters <FontAwesomeIcon icon={this.state.isAdvancedFiltersOpen?faCaretUp:faCaretDown}/></span>\n            <Collapse isOpen={this.state.isAdvancedFiltersOpen}>\n            <Card>\n                <AdvancedFilters \n                    site={this.state.site} \n                    toggleRated={this.toggleRated.bind(this)}\n                    handleTimeControlChange={this.handleTimeControlChange.bind(this)}\n                    handleTimeframeChange={this.handleTimeframeChange.bind(this)}\n                    handleEloRangeChange={this.handleEloRangeChange.bind(this)}\n                    timeframeSteps={this.timeframeSteps}\n                    handleDownloadLimitChange={this.handleDownloadLimitChange.bind(this)}\n                    advancedFilters={this.advancedFilters()}\n                />\n            </Card>\n            </Collapse></div>\n            <div className = \"pgnloadersection\"><MaterialUIButton\n                onClick = {this.load.bind(this)}\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<Equalizer/>}\n                className=\"mainButton\" disableElevation\n            >\n                Analyze games\n            </MaterialUIButton></div>\n            <div className = \"pgnloadersection\"><MaterialUIButton\n                onClick = {this.download.bind(this)}\n                variant=\"contained\"\n                color=\"default\"\n                startIcon={<GetApp/>}\n                className=\"mainButton\" disableElevation\n            >\n                Export as PGN\n            </MaterialUIButton></div>\n            {\n                this.state.isGamesSubsectionOpen?\n                <div>\n                    <div className=\"pgnloadersection\">\n                        {`Games Loaded: ${this.props.gamesProcessed} `}{this.props.isDownloading?<span className=\"stopDownloading\">[<span className=\"linkStyle\" onClick={this.stopDownloadingAction.bind(this)}><img alt=\"loading spinner\" src=\"./spinner.gif\" height=\"15\"/>stop</span>]</span>:\"\"}\n                    </div>\n                    <div onClick = {()=>this.props.switchToMovesTab()} className=\"navLinkButton pgnloadersection\">\n                        <FontAwesomeIcon icon={faList} /> View Moves>>\n                    </div>\n                </div>\n                    :\"\"\n            }\n\n        </div>\n    }\n\n}","import React from 'react'\nimport {Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRetweet, faTrashAlt, faFastBackward, faDesktop } from '@fortawesome/free-solid-svg-icons'\nimport {Container, Row, Col} from 'reactstrap'\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\n\nexport default class SettingsView extends React.Component {\n    toggle(eventName){\n        return (()=> {\n            let newValue = this.props.settings[eventName] === 'white' ? 'black':'white'\n            this.props.onChange(eventName, newValue)\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"ChangeOrientation\")\n        })\n    }\n    analyse() {\n        window.open(`https://www.lichess.org/analysis/${this.props.fen}`, '_blank');\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"AnalyzeGame\")\n\n    }\n    resetAction() {\n        this.props.reset()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Reset\")\n    }\n    clearAction() {\n        this.props.clear()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Clear\")\n    }\n\n    render() {\n        return <div>\n            <Container>\n                <Row sm=\"12\">\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.toggle('orientation')} color=\"\"><h3><FontAwesomeIcon icon={faRetweet} /></h3> Flip board</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.clearAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faTrashAlt} /></h3> Clear games</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.resetAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faFastBackward} /></h3> Starting position</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.analyse.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faDesktop} /></h3> Computer analysis</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter, TextField } from '@material-ui/core';\nimport React from 'react'\nimport {getPerformanceDetails, simplifiedFen} from '../app/util'\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    eatClicks(e) {\n        e.stopPropagation()\n    }\n\n    copyFen() {\n        /* Get the text field */\n        var copyText = document.getElementById(\"fenField\");\n      \n        /* Select the text field */\n        copyText.select();\n        copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n      \n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n      \n        /* Alert the copied text */\n        this.props.showInfo(\"FEN copied\");\n    }\n\n    getFenField() {\n        return this.props.simplifiedView?null:\n            <div className=\"fenDiv\">\n            <TextField\n                id=\"fenField\"\n                multiline\n                label=\"FEN\"\n                rowsMax=\"2\"\n                value={this.props.fen} \n                inputProps={{\n                    style: {fontSize: 12},\n                    spellCheck: false,\n                  }} \n                  variant=\"outlined\"\n                className=\"fenField\"\n                margin=\"dense\"\n                onClick = {this.copyFen.bind(this)}\n                /></div>\n    }\n\n      \n    render() {\n        if(!this.props.moveDetails.lastPlayedGame) {\n            return <div>{this.getFenField()}<div className = \"infoMessage\" >No data to show. Please enter a lichess or chess.com user name in the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and click \"Load\"</div>\n                </div>\n        }\n        let performanceDetails = {}\n        if(this.props.isOpen) {\n            performanceDetails = getPerformanceDetails(this.props.moveDetails.totalOpponentElo, \n                                                        this.props.moveDetails.whiteWins, \n                                                        this.props.moveDetails.draws, \n                                                        this.props.moveDetails.blackWins, \n                                                        this.props.settings.playerColor)\n        } \n\n        return <div>\n            {this.getFenField()}\n            <Table onClick={this.eatClicks}>\n            <TableHead className={`performanceRatingRow${this.props.simplifiedView?\" performanceHeader\":\"\"}`}><TableRow>\n                <TableCell className=\"performanceRatingRow\"><b>Performance</b></TableCell>\n                <TableCell className=\"performanceRatingRow\"><b>{performanceDetails.performanceRating}</b></TableCell>\n                </TableRow></TableHead>\n            <TableBody>\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Avg opponent</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.averageElo}</TableCell>\n            </TableRow>\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Score</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.score}</TableCell>\n            </TableRow>\n            {this.props.simplifiedView?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Rating change</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.ratingChange}</TableCell>\n            </TableRow>\n            }\n            {!this.props.simplifiedView && this.props.moveDetails.bestWin?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Best win</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.bestWin} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.bestWinGame.url)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {!this.props.simplifiedView && this.props.moveDetails.worstLoss?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Worst loss</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.worstLoss} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.worstLossGame.url)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Last played</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.lastPlayedGame.date} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.lastPlayedGame.url)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>\n            </TableBody>\n            {this.props.simplifiedView?null:\n            <TableFooter>\n                <TableRow>\n                    <TableCell colSpan=\"2\">Calculated based on <a href=\"https://handbook.fide.com/chapter/B022017\" target=\"_blank\" rel=\"noopener noreferrer\">FIDE regulations</a></TableCell>\n                </TableRow>\n            </TableFooter>\n            }\n        </Table></div>\n    }\n}","import {Progress, Popover } from \"reactstrap\"\nimport React from 'react'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faExternalLinkAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\nimport ReportControls from './ReportControls'\n\nexport default class MovesList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            openPerformanceIndex: null\n        }\n    }\n\n    move(from, to) {\n        return () => {\n            this.props.onMove(from, to)\n            trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"MoveClicked\")\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.turnColor !== this.props.turnColor) {\n            this.setState({\n                openPerformanceIndex: null,\n            })\n        }\n    }\n    togglePerformancePopover(moveIndex) {\n        return (e) => {\n            if(this.state.openPerformanceIndex !== null) {\n                this.setState({openPerformanceIndex:null})\n            } else {\n                this.setState({openPerformanceIndex: moveIndex})\n            }\n            e.stopPropagation()\n        }\n    }\n    render(){\n        if(!this.props.settings.playerName) {\n            return <div className = \"infoMessage\" >No moves to show. Please enter a lichess or chess.com user name in the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and click \"Load\"</div>\n        }\n    return <div>{(this.props.gameResults && this.props.gameResults.length>0)?this.resultsTable():null}\n                {this.movesTable()}</div>\n    }\n    resultsTable() {\n        return <Table>\n            <TableBody>\n                {\n                this.props.gameResults.map(result => {\n                    let whitePlayer = this.player(result.white, result.whiteElo)\n                    let blackPlayer = this.player(result.black, result.blackElo)\n                    return <TableRow className=\"moveRow\" key = {`${result.url}`} onClick={this.props.launchGame(result.url)}>\n                        <TableCell>\n                            {result.result===\"1-0\"?<b>{whitePlayer}</b>:whitePlayer} {result.result} {result.result === \"0-1\"?<b>{blackPlayer}</b>:blackPlayer}\n                        </TableCell>\n                    </TableRow>\n                })}\n            </TableBody>\n        </Table>\n    }\n    player(name, elo) {\n        return `${name}(${elo})`\n    }\n    getPopover(moveIndex) {\n        let performancePopoverOpen = this.state.openPerformanceIndex === moveIndex\n        let openMove = this.props.movesToShow[moveIndex]\n\n        return <Popover trigger=\"hover\" placement=\"right\" isOpen={performancePopoverOpen} target={`performancePopover${moveIndex}`} toggle={this.togglePerformancePopover(moveIndex)}>\n                <ReportControls moveDetails={openMove.details} simplifiedView={true} isOpen = {performancePopoverOpen} launchGame={this.props.launchGame} settings={this.props.settings}/>\n            </Popover>\n    }\n    movesTable() {\n        let hasMoves = (this.props.movesToShow && this.props.movesToShow.length>0)\n        return <Table>\n            {hasMoves?\n        <TableHead>\n        <TableRow>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Move</b></TableCell>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Games</b></TableCell>\n            <TableCell><b>Results</b></TableCell>\n        </TableRow></TableHead>  \n        :null}\n        {hasMoves?\n        <TableBody>\n        {\n        this.props.movesToShow.map((move, moveIndex) => {\n            let sampleResultWhite = this.player(move.details.lastPlayedGame.white, move.details.lastPlayedGame.whiteElo)\n            let sampleResultBlack = this.player(move.details.lastPlayedGame.black, move.details.lastPlayedGame.blackElo)\n            let sampleResult = move.details.lastPlayedGame.result\n\n            return move.details.count > 1?<TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san} </TableCell>\n                <TableCell size=\"small\" id={`performancePopover${moveIndex}`} className=\"smallCol\" onClick ={this.togglePerformancePopover(moveIndex)}>\n                    {move.details.count} <FontAwesomeIcon className=\"lowOpacity\" icon={faInfoCircle}/>\n                    {this.getPopover(moveIndex)}\n                </TableCell>\n                <TableCell>\n                    <Progress className = \"border\" multi>\n                        <Progress bar className=\"whiteMove\" value={`${move.details.whiteWins/move.details.count*100}`}>{move.details.whiteWins/move.details.count>0.1?move.details.whiteWins:''}</Progress>\n                        <Progress bar className=\"grayMove\" value={`${move.details.draws/move.details.count*100}`}>{move.details.draws/move.details.count>0.1?move.details.draws:''}</Progress>\n                        <Progress bar className=\"blackMove\" value={`${move.details.blackWins/move.details.count*100}`}>{move.details.blackWins/move.details.count>0.1?move.details.blackWins:''}</Progress>\n                    </Progress>\n                </TableCell>\n            </TableRow>:\n            <TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san}</TableCell>\n                <TableCell colSpan = \"2\">\n        {sampleResultWhite} {sampleResult} {sampleResultBlack} {<FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(move.details.lastPlayedGame.url)} icon={faExternalLinkAlt}/>}\n                </TableCell>\n            </TableRow>\n            }\n        )}\n    </TableBody>\n    :null}\n        <TableFooter><TableRow>\n        {\n        hasMoves?\n            <TableCell colSpan=\"3\">\n            Showing moves that have been \n            played {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n            this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n            </TableCell>:\n            <TableCell colSpan=\"3\">\n            No moves found in this position played {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n            this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n            </TableCell>\n        }</TableRow></TableFooter>\n    </Table>\n    }\n}","import React from 'react'\nimport PGNLoader from './PGNLoader'\nimport SettingsView from './Settings'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faList, faCog, faChartBar } from '@fortawesome/free-solid-svg-icons'\nimport MovesList from './MovesList';\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\nimport ReportControls from './ReportControls'\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n          activeTab:'user',\n      }\n    }\n\n    launchGame(url) {\n        return (e) => {\n            e.stopPropagation()\n            window.open(url, '_blank');\n            trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"ViewGameExternal\")\n\n        }\n    }\n\n    toggle(tab) {\n        if(this.state.activeTab !== tab) {\n            this.setState({activeTab:tab})\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS,`activeTab:${tab}`)\n        }\n    }\n    switchToUserTab() {\n      this.toggle('user')\n    }\n    switchToMovesTab() {\n      this.toggle('moves')\n    }\n\n    render(){\n        return <div>\n            <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'user' })}\n            onClick={() => { this.toggle('user'); }}\n          >\n            <FontAwesomeIcon icon={faUser} /> {this.state.activeTab === 'user'?\"User\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'moves' })}\n            onClick={() => { this.toggle('moves'); }}\n          >\n            <FontAwesomeIcon icon={faList} /> {this.state.activeTab === 'moves'?\"Moves\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'report' })}\n            onClick={() => { this.toggle('report'); }}\n          >\n            <FontAwesomeIcon icon={faChartBar} /> {this.state.activeTab === 'report'?\"Report\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'settings' })}\n            onClick={() => { this.toggle('settings'); }}\n          >\n            <FontAwesomeIcon icon={faCog} /> {this.state.activeTab === 'settings'?\"Controls\":\"\"}\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={this.state.activeTab}>\n        <TabPane tabId=\"user\">\n            <PGNLoader \n              switchToMovesTab={this.switchToMovesTab.bind(this)} \n              clear = {this.props.clear} \n              gamesProcessed = {this.props.gamesProcessed} \n              settings = {this.props.settings} \n              onChange = {this.props.settingsChange} \n              notify = {this.props.updateProcessedGames}\n              showError = {this.props.showError}\n              setDownloading = {this.props.setDownloading}\n              isDownloading = {this.props.isDownloading}\n              />\n            </TabPane>\n        <TabPane tabId=\"moves\">\n            <MovesList \n              switchToUserTab={this.switchToUserTab.bind(this)} \n              movesToShow={this.props.movesToShow} \n              gameResults={this.props.gameResults}\n              onMove={this.props.onMove}\n              settings={this.props.settings}\n              turnColor={this.props.turnColor}\n              settingsChange={this.props.settingsChange}\n              launchGame = {this.launchGame}\n              />\n        </TabPane>\n        <TabPane tabId=\"report\">\n          <ReportControls fen={this.props.fen} simplifiedView = {false}\n            moveDetails = {this.props.openingGraph.getDetailsForFen(this.props.fen)}\n            launchGame={this.launchGame} settings={this.props.settings}\n            switchToUserTab={this.switchToUserTab.bind(this)} \n            isOpen = {this.state.activeTab === \"report\"}\n            showInfo = {this.props.showInfo}/>\n        </TabPane>\n        <TabPane tabId=\"settings\">\n          <Row>\n            <Col sm=\"6\">\n            <SettingsView fen={this.props.fen} settings={this.props.settings} isOpen = {true} clear = {this.props.clear} reset = {this.props.reset} onChange = {this.props.settingsChange}/>\n            \n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n        </div>\n    }\n}","import Chess from 'chess.js'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nfunction turnColor() {\n    return fullTurnName(this.chess.turn())\n}\n\nfunction fullTurnName(shortName) {\n    return shortName === 'w' ? 'white' : 'black'\n}\n\nfunction playerColor() {\n    return this.state.settings.playerColor\n}\n\nfunction brushes() {\n    if(this.playerColor() === this.turnColor()) {\n        return this.forBrushes\n    }\n    return this.againstBrushes\n}\n\nfunction calcMovable() {\nconst dests = {}\n    this.chess.SQUARES.forEach(s => {\n        const ms = this.chess.moves({square: s, verbose: true})\n        if (ms.length) dests[s] = ms.map(m => m.to)\n    })\n    return {\n        free: false,\n        dests,\n        color: this.turnColor()\n    }\n}\n\nfunction orientation() {\n    return this.state.settings.orientation\n}\n\nfunction onMove(from, to) {\n    const chess = this.chess\n    let move = chess.move({ from, to, promotion: 'q'})\n    this.setState({ fen: chess.fen(), lastMove: move})\n}\n\n\nfunction onMoveAction(from, to) {\n    this.onMove(from,to)\n    trackEvent(Constants.EVENT_CATEGORY_CHESSBOARD, \"Move\")\n}\n\nfunction navigateTo(fen, previousMove){\n    this.chess = new Chess(fen)\n    this.setState({fen:fen, lastMove:previousMove})\n\n}\nfunction updateProcessedGames(downloadLimit, n, openingGraph) {\n    let totalGamesProcessed = this.state.gamesProcessed+n\n    this.setState({\n    gamesProcessed: totalGamesProcessed,\n    openingGraph: openingGraph,\n    downloadingGames: (totalGamesProcessed<downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)?this.state.downloadingGames:false\n    })\n    // continue to download games if \n    // 1. we have not reached download limit OR\n    //    there is no download limit set (downloadLimit>MAX condition)\n    // 2. user did not hit stop button\n    return (totalGamesProcessed < downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)&& this.state.downloadingGames\n}\nfunction moveToShape(move) {\n    return {\n        orig:move.orig,\n                    dest: move.dest,\n                    brush: this.brushes()[move.level]\n    }\n}\n\nfunction autoShapes() {\n    var moves = this.movesToShow()\n    if(moves) {\n        var shapes = moves.map(this.moveToShape.bind(this))\n        return this.fillArray(shapes,  25)\n    }\n    return this.fillArray([], 25) // dummy arrow to clear out existing arrows\n}\n\nfunction movesToShow() {\n    var moves = this.state.openingGraph.movesForFen(this.chess.fen())\n    return moves?moves.sort((a,b)=>b.details.count-a.details.count):moves\n}\n\nfunction gameResults() {\n    return this.state.openingGraph.gameResultsForFen(this.chess.fen())\n}\n\nfunction fillArray(arr, len) {\n    for (var i = arr.length; i < len; i++) {\n        arr.push({'orig':'i'+i, 'dest':'i'+(i+1), brush:this.brushes()[0]});\n    }\n    return arr;\n}\n\nfunction reset() {\n    this.chess = new Chess()\n    this.setState({fen: this.chess.fen(), lastMove:null})\n}\n\nfunction clear() {\n    this.state.openingGraph.clear()\n    this.state.gamesProcessed = 0\n    this.reset()\n}\n\nfunction settingsChange(name, value) {\n    let settings = this.state.settings\n    settings[name] = value;\n    this.setState({\n        'settings':settings\n    })\n}\nfunction showError(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:\"warning\"})\n    trackEvent(Constants.EVENT_CATEGORY_ERROR,\"errorShown\",\n        trackingLabel?trackingLabel:message)\n}\n\nfunction showInfo(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:\"info\"})\n    trackEvent(Constants.EVENT_CATEGORY_ERROR,\"infoShown\",\n        trackingLabel?trackingLabel:message)\n}\n\n\nfunction closeError() {\n    this.setState({message:''})\n}\n\nfunction setDownloading(val) {\n    this.setState({downloadingGames:val})\n}\n\nfunction addStateManagement(obj){\n    obj.orientation  = orientation\n    obj.turnColor = turnColor\n    obj.calcMovable = calcMovable\n    obj.onMove = onMove\n    obj.onMoveAction = onMoveAction\n    obj.autoShapes = autoShapes\n    obj.updateProcessedGames = updateProcessedGames\n    obj.settingsChange = settingsChange\n    obj.reset = reset\n    obj.clear = clear\n    obj.navigateTo = navigateTo\n    obj.playerColor = playerColor\n    obj.fillArray = fillArray\n    obj.brushes = brushes\n    obj.moveToShape = moveToShape\n    obj.movesToShow = movesToShow\n    obj.gameResults = gameResults\n    obj.showError = showError\n    obj.showInfo = showInfo\n    obj.closeError = closeError\n    obj.setDownloading = setDownloading\n}\n\nexport {addStateManagement}","import React from 'react'\nimport Chess from 'chess.js'\nimport Chessground from 'react-chessground'\nimport 'react-chessground/dist/styles/chessground.css'\nimport {openingGraph} from '../app/OpeningGraph'\nimport Navigator from './Navigator'\nimport GlobalHeader from './GlobalHeader'\nimport {Container, Row, Col} from 'reactstrap'\nimport ControlsContainer from './ControlsContainer'\nimport {addStateManagement} from './StateManagement'\nimport {Snackbar} from '@material-ui/core'\nimport Alert from '@material-ui/lab/Alert';\n\nexport default class MainContainer extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.chess = new Chess()\n    addStateManagement(this)\n    this.state = {\n        fen: this.chess.fen(),\n        lastMove: null,\n        gamesProcessed:0,\n        openingGraph:openingGraph,\n        settings:{\n          playerName:'',\n          orientation:'white',\n          playerColor:'white'\n        },\n        message:'',\n        downloadingGames:false\n      }\n    this.chessboardWidth = this.getChessboardWidth()\n\n    this.forBrushes = ['paleGrey', 'paleGreen', 'green']\n    this.againstBrushes = ['paleRed', 'paleRed', 'red']\n\n  }\n  getChessboardWidth(){\n    // have to manually set the width to pixels instead of \"vw\" value\n    // this is because chessground component does not behave well with \"vw\" values\n    if (window.innerWidth<=768) {\n      return `${Math.round(window.innerWidth*95/100)}px` //95vw\n    } else if ((window.innerWidth<=1024)) {\n      return `${Math.round(window.innerWidth*40/100)}px` // 40vw\n    } else {\n      return \"512px\"\n    }\n\n  }\n\n\n  render() {\n    let lastMoveArray = this.state.lastMove ? [this.state.lastMove.from, this.state.lastMove.to] : null\n    let snackBarOpen = this.state.message?true:false\n    return <div className=\"rootView\"> \n        <GlobalHeader/>\n        <Container className=\"mainContainer\">\n          <Row><Col lg={{order:0, size:2}} xs={{order:2}}><Navigator fen = {this.state.fen} move={this.state.lastMove} onChange ={this.navigateTo.bind(this)}/>\n    </Col><Col lg=\"6\"><Chessground\n      height={this.chessboardWidth}\n      width={this.chessboardWidth}\n      orientation={this.orientation()}\n      turnColor={this.turnColor()}\n      movable={this.calcMovable()}\n      \n      lastMove={lastMoveArray}\n      fen={this.state.fen}\n      onMove={this.onMoveAction.bind(this)}\n      drawable ={{\n        enabled: true,\n        visible: true,\n        autoShapes: this.autoShapes()\n      }}\n      style={{ margin: 'auto' }}\n    />\n    </Col><Col lg=\"4\" className=\"paddingTop\"><ControlsContainer fen={this.state.fen}\n                gamesProcessed={this.state.gamesProcessed} \n                updateProcessedGames={this.updateProcessedGames.bind(this)}\n                settingsChange={this.settingsChange.bind(this)}\n                settings={this.state.settings}\n                reset={this.reset.bind(this)}\n                clear={this.clear.bind(this)}\n                movesToShow={this.movesToShow()}\n                gameResults={this.gameResults()}\n                onMove={this.onMove.bind(this)}\n                turnColor={this.turnColor()}\n                showError={this.showError.bind(this)}\n                showInfo={this.showInfo.bind(this)}\n                setDownloading={this.setDownloading.bind(this)}\n                isDownloading={this.state.downloadingGames}\n                openingGraph={this.state.openingGraph}\n                /></Col>\n    </Row></Container>\n    <Snackbar anchorOrigin={{ vertical:'top', horizontal:\"center\" }} open={snackBarOpen} autoHideDuration={6000} onClose={this.closeError.bind(this)}>\n    <Alert onClose={this.closeError.bind(this)} severity={this.state.messageSeverity}>\n      {this.state.message}\n    </Alert>\n    </Snackbar>\n    </div>\n  }\n}\n","import ReactDOM from 'react-dom'\nimport MainContainer from './pres/MainContainer'\nimport React from 'react'\nimport {trackPageView} from './app/Analytics'\n\nReactDOM.render(<MainContainer />, document.getElementById('root'))\ntrackPageView()"],"sourceRoot":""}