{"version":3,"sources":["app/Analytics.js","app/Constants.js","app/OpeningTreeSerializer.js","app/util.js","pres/loader/Common.js","pres/loader/Filters.js","pres/loader/Actions.js","app/iterator/IteratorUtils.js","app/iterator/BaseUrlIterator.js","app/iterator/LichessIterator.js","app/iterator/ChessComIterator.js","app/iterator/PGNFileIterator.js","app/iterator/PGNUrlIterator.js","app/iterator/NotablePlayerIterator.js","app/PGNReader.js","pres/loader/TimeControlLabels.js","pres/loader/FilterLabels.js","pres/loader/AdvancedFilters.js","app/Common.js","app/SitePolicy.js","app/OpeningManager.js","pres/Navigator.js","pres/GlobalHeader.js","pres/loader/Source.js","pres/loader/Dropzone.js","pres/loader/NotableChessGames.js","pres/loader/User.js","pres/loader/PGNLoader.js","pres/Settings.js","pres/ReportControls.js","pres/MovesList.js","pres/ControlsContainer.js","pres/StateManagement.js","pres/SnackbarContentWrapper.js","pres/MainContainer.js","index.js","app/OpeningGraph.js","app/PGNParser.js"],"names":["trackPageView","ReactGA","pageview","window","location","pathname","trackEvent","category","action","label","value","event","initialize","TIME_CONTROL_ULTRA_BULLET","TIME_CONTROL_BULLET","TIME_CONTROL_BLITZ","TIME_CONTROL_RAPID","TIME_CONTROL_CLASSICAL","TIME_CONTROL_CORRESPONDENCE","TIME_CONTROL_DAILY","FILTER_NAME_RATED","FILTER_NAME_SELECTED_TIMEFRAME","FILTER_NAME_DOWNLOAD_LIMIT","FILTER_NAME_ELO_RANGE","SITE_LICHESS","SITE_CHESS_DOT_COM","SITE_PGN_FILE","SITE_EVENT_DB","SITE_PLAYER_DB","SITE_OPENING_TREE_FILE","MAX_DOWNLOAD_LIMIT","MAX_ELO_RATING","EVENT_CATEGORY_PGN_LOADER","EVENT_CATEGORY_MOVES_LIST","EVENT_CATEGORY_CONTROLS","EVENT_CATEGORY_NAVIGATOR","EVENT_CATEGORY_CHESSBOARD","EVENT_CATEGORY_ERROR","ROOT_FEN","PLAYER_COLOR_WHITE","PLAYER_COLOR_BLACK","LOADER_ANIMATION_DURATION_MS","serializeOpeningTree","treeData","filename","callback","console","log","chunkedArray","chunk","object","index","array","chunkSize","i","chunkIndex","length","push","slice","chunkArray","deflatedChunks","packControlWord","remainingChunks","hasError","forEach","zlib","deflate","Buffer","JSON","stringify","error","data","byteLength","saveAs","Blob","type","deserializeOpeningTree","file","reader","FileReader","onload","evt","target","result","version","unpackControlWord","numChunks","startIndex","handleInflate","parse","e","sortedChunks","sort","a","b","map","el","flat","reconstructObjectFromChunks","inflate","from","getInflatedChunks","onerror","readAsArrayBuffer","control","view","DataView","getUint16","getUint32","buffer","ArrayBuffer","setUint16","setUint32","createSubObjectWithProperties","mainObject","properties","subObject","property","simplifiedFen","fen","fenComponents","split","getTimeControlsArray","site","timeControlState","selected","Constants","Common","filter","timeControl","monthLabels","getTimeframeSteps","steps","year","startYear","currentYear","Date","getFullYear","currentMonth","getMonth","toLongLabel","fromLongLabel","month","getSelectedTimeFrameData","timeframe","timeframeSteps","fromIndex","toIndex","fromTimeframe","toTimeframe","currentDate","fromMonth","frmYear","getYear","fromTimeStamp","getTimeStampInfoFor","fromYear","toYear","toMonth","toTimeStamp","minOrMax","getTime","getDate","getDaysInMonth","getPerformanceDetails","totalElo","white","draws","black","playerColor","totalGames","averageElo","Math","round","playerWins","playerLosses","score","scorePercentage","ratingChange","results","performanceRating","Number","isInteger","toFixed","abs","isOpponentEloInSelectedRange","elo","range","isDateMoreRecentThan","date","than","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","getNumberIcon","n","alt","className","src","height","advancedFilters","state","User","props","isAdvancedFiltersOpen","Object","assign","defaultAdvancedFilters","this","rated","setState","newState","SitePolicy","setImmediate","setFilters","bind","name","checked","newValue","colorError","filtersChange","isDisabled","areAdvancedFiltersApplied","newProps","entries","key","deepEqual","playerName","selectedNotablePlayer","expandedPanel","TransitionComponent","MuiCollapse","TransitionProps","timeout","onChange","handleExpansionChange","disabled","expandIcon","getSummary","component","playerColorChange","color","onClick","toggleState","icon","faCaretUp","faCaretDown","isOpen","toggleRated","handleTimeControlChange","handleTimeframeChange","handleEloRangeChange","handleDownloadLimitChange","size","React","Component","Actions","unload","pgnReader","stopDownloading","isGamesSubsectionOpen","exportingInProgress","addEventListener","removeEventListener","importOpeningTree","files","err","showError","importOpeningTreeObject","exportOpeningTree","exportOpeningTreeObject","info","showInfo","shouldDownloadToFile","PGNReader","fetchPGNFromSite","selectedNotableEvent","notify","readPgn","gamesProcessed","clear","loadedSite","setDownloading","importTreeClicked","variant","startIcon","disableElevation","downloadDisabledReason","isDownloading","load","download","placement","title","exportTreeClicked","stopDownloadingAction","switchToMovesTab","faList","openingTreeLoadActions","regularActions","mainComponent","in","normalizePGN","pgnString","dataString","normalizeNewLine","replace","BaseUrlIterator","url","shouldNormalizePGN","responseCodeCallback","errorCallback","dataCallback","endCallback","remainingBody","requestObject","request","get","json","on","response","statusCode","newBody","toString","lastValidPGN","lastIndexOf","body","callDataCallback","abort","trimString","LichessIterator","ready","playerNameFilter","encodeURIComponent","colorFilter","ratedFilter","selectedTimeFrameData","timeSinceFilter","timeUntilFilter","selectedTimeControls","perfFilter","join","responseCode","pgnStringArray","parsedPGNs","pgn","headers","Variant","opponentElo","BlackElo","WhiteElo","ChessComIterator","chessAPI","ChessWebAPI","queue","pendingRequests","parseGames","archiveResponse","games","game","rules","username","toLowerCase","ratedMode","time_class","rating","dequeue","fetchAllGames","responseBody","archives","reverse","archiveUrl","components","archiveMonth","archiveYear","shouldFetchGamesFromArchive","dispatch","getPlayerCompleteMonthlyArchives","jsonBody","setupReader","readAsText","playerColorHeaderName","lowerCasePlayerName","parsedPGN","playerColorHeaderValue","includes","onloadend","PGNUrlIterator","lowerCasePlayerNames","NotablePlayerIterator","selectedPlayer","lowerCaseAliases","pgnAliases","alias","pgnUrl","pendingGames","pendingDownloads","streamsaver","mitm","fileWriter","close","header","moves","moveObject","move","continueProcessingGames","fileStream","createWriteStream","getWriter","encoder","TextEncoder","processor","write","encode","getPgnString","then","setTimeout","parsePGNTimed","PGNFileIterator","pgnArray","move_number","chess","Chess","resultObject","gameResult","element","sourceFen","sloppy","targetFen","openingGraph","addMoveForFen","addGameResultOnFen","addResultToRoot","Link","Site","White","Black","whiteElo","blackElo","timeClasses","unselectedTimeControls","includesAll","arr","subArray","every","v","getTimeControlLabel","timeClass","lichessTimeControlLabel","AdvancedFilters","currentlyOpenAdvancedFilter","timeframeMarks","downloadLimitMarks","eloRangeMarks","filterName","subSectionComponent","setCurrentlyOpenAdvancedFilter","Collapse","getTimeControlFilters","getTimeFrameFilters","selectedEloRange","getEloRangeFilters","downloadLimit","getDownloadLimitFilters","Slider","valueLabelDisplay","valueLabelFormat","val","step","min","marks","max","firstRow","middleRow","lastRow","colWidth","FormControl","FormGroup","Container","getTimeControlFilterRow","controls","firstColumnWidth","position","clsName","Row","Col","sm","FormControlLabel","Checkbox","changeCallback","children","getFilters","LICHESS_TIME_CONTROLS","CHESS_DOT_COM_TIME_CONTROLS","TIME_CONTROL_LABELS","str","DP_TABLE","isAdvancedFiltersEnabled","source","isFilterPanelEnabled","treeSaveDisabledReason","selectedSite","exportFileName","selectedEvent","extension","OpeningManager","plys","currentIndex","san","pgnAsList","moveForward","pgnList","pgnSoFar","pgnListSoFar","moveNumber","whitePly","blackPly","currMove","floor","moveTo","Navigator","openingManager","currentMove","keyHandler","keyCode","previous","next","addPly","device","moveBack","opening","ChessEcoCodes","openingCode","code","lg","Button","faStepBackward","faStepForward","GlobalHeader","useState","setIsOpen","modal","setModal","feedbackOpen","setFeedbackOpen","toggleModal","toggleFeedback","launch","open","Navbar","light","expand","width","NavbarBrand","href","NavbarToggler","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","divider","Modal","toggle","ModalHeader","ModalBody","rel","ModalFooter","ListGroup","ListGroupItem","tag","Source","addNumber","ExpansionPanelSummary","aria-controls","id","getSourceOption","ExpansionPanelDetails","RadioGroup","siteChange","Radio","Divider","Dropzone","newFiles","filesChange","acceptedFiles","dropzoneText","handleFileChange","dropzoneParagraphClass","showFileNames","useChipsForPreview","previewChipProps","dropzoneClass","filesLimit","maxFileSize","NotableChessGames","updateDetails","option","profile","imageUrl","subText","list","options","selectedDetail","placeholder","renderOption","renderDetails","playerNameError","player","validateInputDetailsSet","playerDetailsChange","finalPlayerName","helperText","TextField","editPlayerName","onKeyUp","playerNameKeyUp","setPlayerDetails","notablePlayers","notablePlayerChange","notableEvents","notableEventChange","getPlayerNameInput","getPgnFIleSelection","getGoatDBEventSelection","getGoatDBSelection","getInputsToShow","ExpansionPanelActions","PGNLoader","settings","panel","newExpanded","playername","graph","nodes","openingTreeSave","setEntries","importCallback","gamesDetails","newSite","fetchGOATGames","filters","Filters","SettingsView","eventName","reset","faRetweet","clearAction","faTrashAlt","resetAction","faFastBackward","analyse","faDesktop","ControlsContainer","stopPropagation","copyText","document","getElementById","select","setSelectionRange","execCommand","simplifiedView","multiline","rowsMax","inputProps","style","fontSize","spellCheck","copyFen","moveDetails","lastPlayedGame","getFenField","switchToUserTab","faUser","performanceDetails","totalOpponentElo","whiteWins","blackWins","Table","eatClicks","isNaN","TableHead","TableRow","TableCell","TableBody","bestWin","launchGame","bestWinGame","faExternalLinkAlt","worstLoss","worstLossGame","removeQuestionMarksFromDate","TableFooter","colSpan","indexOf","MovesList","openPerformanceIndex","to","onMove","prevProps","prevState","turnColor","moveIndex","movesToShow","gameResults","resultsTable","movesTable","whitePlayer","blackPlayer","performancePopoverOpen","openMove","Popover","trigger","togglePerformancePopover","details","hasMoves","sampleResultWhite","sampleResultBlack","sampleResult","count","orig","dest","faInfoCircle","getPopover","Progress","multi","bar","activeTab","activeGame","tab","entry","tabs","classnames","active","faChartBar","faCog","TabContent","TabPane","tabId","settingsChange","updateProcessedGames","getDetailsForFen","turn","brushes","forBrushes","againstBrushes","calcMovable","dests","SQUARES","s","ms","square","verbose","m","free","orientation","promotion","lastMove","onMoveAction","navigateTo","previousMove","totalGamesProcessed","downloadingGames","moveToShape","brush","level","autoShapes","shapes","fillArray","movesForFen","gameResultsForFen","len","message","trackingLabel","messageSeverity","closeError","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","theme","backgroundColor","green","palette","dark","primary","amber","iconVariant","opacity","marginRight","spacing","alignItems","classes","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","IconButton","aria-label","MainContainer","obj","chessboardWidth","getChessboardWidth","importState","innerWidth","lastMoveArray","snackBarOpen","order","xs","movable","drawable","enabled","visible","importGameState","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ReactDOM","render","OpeningGraph","Graph","arrayEntries","fullFen","getNodeFromGraph","targetNode","newDetails","getUpdatedMoveDetails","fullSourceFen","fullTargetFen","currNode","movePlayedBy","createOrGetMoveNode","playedBy","playedByMax","GraphNode","set","movesPlayedNode","movePlayed","GraphMove","currentMoveDetails","whiteWin","blackWin","draw","resultInt","parseInt","Array","gMove","levelFor","moveCount","maxCount","Map","peg$SyntaxError","expected","found","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","parts","classEscape","inverted","any","end","description","hex","ch","charCodeAt","toUpperCase","j","descriptions","describeExpected","describeFound","module","exports","SyntaxError","input","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","h","c","mr","r","reduce","acc","x","comment","make_game","peg$c4","peg$c6","peg$literalExpectation","peg$c7","peg$c8","peg$classExpectation","peg$c10","peg$c11","peg$c12","peg$c13","peg$c15","peg$c16","peg$c17","chars","peg$c19","peg$c21","peg$c23","peg$c25","peg$c27","peg$c29","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c39","peg$c41","peg$c42","peg$c43","peg$c45","peg$c47","peg$c49","peg$c51","peg$c53","peg$c57","peg$c58","peg$c59","peg$c61","peg$c63","peg$c65","peg$c67","peg$c69","peg$c71","peg$c73","peg$c74","peg$c75","peg$c77","peg$c79","peg$c82","peg$c84","peg$c85","flatten","isArray","peg$c86","mn","peg$c88","nags","com","peg$c92","peg$c94","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","s2","s3","s4","s5","peg$parsegame","peg$parsenewline","charAt","peg$parseEOF","g","s6","s7","peg$parseheader","peg$parseheaders","peg$parsecomment","peg$parsewhitespace","peg$parsemovetext","peg$parseresult","peg$c2","peg$parsedouble_quote","peg$parseinteger","test","peg$parsews","peg$parsesymbol","peg$parsestring","hn","hv","make_header","peg$parsepiece","peg$parserank","peg$parsefile","peg$parsecapture","peg$parseperiod","substr","peg$parsesquare","peg$parsenag","peg$parsecomment_chars","peg$parsepawn_half_move","peg$parsepromotion","peg$parsehalf_move","peg$parsecontinuation","peg$parsecastle_half_move","peg$parsepiece_disambiguation_half_move","peg$parsepiece_half_move","peg$parsecheck","peg$parsecheckmate","peg$parsenag_alts","peg$parsemove","s8","s9","peg$parsemove_number","peg$parserav","ravs","make_move","first","rest","concat"],"mappings":"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","file":"static/js/main.48b3e3c8.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\nReactGA.initialize('UA-159149755-1');\n\nexport function trackPageView() {\n    ReactGA.pageview(window.location.pathname);\n}\n\nexport function trackEvent(category, action, label, value) {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n        value: value\n      })\n}","export const TIME_CONTROL_ULTRA_BULLET = \"ultraBullet\"\nexport const TIME_CONTROL_BULLET = \"bullet\"\nexport const TIME_CONTROL_BLITZ = \"blitz\"\nexport const TIME_CONTROL_RAPID = \"rapid\"\nexport const TIME_CONTROL_CLASSICAL = \"classical\"\nexport const TIME_CONTROL_CORRESPONDENCE = \"correspondence\"\nexport const TIME_CONTROL_DAILY = \"daily\"\nexport const FILTER_NAME_RATED = \"rated\"\nexport const FILTER_NAME_SELECTED_TIMEFRAME = \"selectedTimeframe\"\nexport const FILTER_NAME_DOWNLOAD_LIMIT = \"downloadLimit\"\nexport const FILTER_NAME_ELO_RANGE = \"eloRange\"\n\nexport const SITE_LICHESS = \"lichess\"\nexport const SITE_CHESS_DOT_COM = \"chesscom\"\nexport const SITE_PGN_FILE = \"pgnfile\"\nexport const SITE_EVENT_DB = \"eventdb\"\nexport const SITE_PLAYER_DB = \"playerdb\"\nexport const SITE_OPENING_TREE_FILE = \"opntfile\"\n\nexport const MAX_DOWNLOAD_LIMIT = 2000\nexport const MAX_ELO_RATING = 3000\n\nexport const EVENT_CATEGORY_PGN_LOADER = \"loader\"\nexport const EVENT_CATEGORY_MOVES_LIST = \"moves\"\nexport const EVENT_CATEGORY_CONTROLS = \"controls\"\nexport const EVENT_CATEGORY_NAVIGATOR = \"navigator\"\nexport const EVENT_CATEGORY_CHESSBOARD = \"chessboard\"\nexport const EVENT_CATEGORY_ERROR = \"error\"\n\nexport const ROOT_FEN = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n\nexport const PLAYER_COLOR_WHITE = 'white'\nexport const PLAYER_COLOR_BLACK = 'black'\n\nexport const LOADER_ANIMATION_DURATION_MS = 500","import zlib from 'zlib'\nimport {Buffer} from 'buffer'\nimport { saveAs } from 'file-saver';\n\nexport function serializeOpeningTree(treeData, filename, callback) {\n    console.log(treeData)\n    let chunkedArray = chunk(treeData)\n    let deflatedChunks = []\n    console.log(chunkedArray.length)\n    //push version number 1 for later backward compatibility\n    deflatedChunks.push(packControlWord(0x1))\n    deflatedChunks.push(packControlWord(chunkedArray.length))\n    let remainingChunks = chunkedArray.length\n    let hasError = false;\n    chunkedArray.forEach((chunk)=>{\n        zlib.deflate(\n            new Buffer(JSON.stringify(chunk)), \n            (error,data)=>{\n                remainingChunks--\n                if(error) {\n                    hasError = true\n                }\n                deflatedChunks.push(packControlWord(data.byteLength))\n                deflatedChunks.push(data)\n                if(remainingChunks<=0) {\n                    if(hasError) {\n                        callback(\"Could not save file\")\n                        return\n                    }\n                    saveAs(new Blob(deflatedChunks, {type: \"application/octet-stream\"}), filename)\n                    callback(null, `Saved opening tree to file ${filename}`)\n                }\n            });\n        })\n}\n\nexport function deserializeOpeningTree(file, callback) {\n    let reader = new FileReader()\n    reader.onload = function(evt) {\n        let data = evt.target.result\n        let index = 0\n        let version = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        if(version !== 0x1) {\n            callback(\"File is not an openingtree save file. Are you loading the correct file?\", null)\n            return\n        }\n        let numChunks = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        if(!numChunks) {\n            callback(\"Input file not in correct format\", null)\n            return\n        }\n        getInflatedChunks(data, index, numChunks, callback)\n    };\n    reader.onerror = function() {\n        callback(\"Failed to opening tree file\", null)\n    }\n    reader.readAsArrayBuffer(file)\n}\n\nfunction getInflatedChunks(data, startIndex, numChunks, callback) {\n    let index = startIndex\n    let deflatedChunks = []\n    let remainingChunks = numChunks\n    let hasError=false\n    let handleInflate = (error, data)=> {\n        remainingChunks--\n        if(error) {\n            console.log(error)\n            hasError=true\n        }\n        try {\n            deflatedChunks.push(JSON.parse(data))\n        } catch (e) {\n            console.log(e)\n            hasError=true\n        }\n        if(remainingChunks===0) {\n            if(hasError) {\n                callback(\"Input file seems corrupted\", null)\n            }\n            \n            callback(null, reconstructObjectFromChunks(deflatedChunks))\n        }\n        \n    }\n    while(numChunks>0) {\n        let chunkSize = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        zlib.inflate(\n            Buffer.from(data,index,chunkSize), handleInflate)\n        index = index + chunkSize\n        numChunks--\n    }\n}\n\nfunction reconstructObjectFromChunks(deflatedChunks) {\n    let sortedChunks = deflatedChunks.sort((a,b)=>a.index-b.index)\n    return {\n        object:sortedChunks[0].chunk,\n        array:sortedChunks.slice(1).map((el)=>el.chunk).flat()\n    }\n}\n\nfunction unpackControlWord(control) {\n    let view = new DataView(control)\n    if(view.getUint16(0)!==0x1337 || view.getUint16(6)!==0xC0D3) {\n        return null\n    }\n    return view.getUint32(2)\n}\n\nfunction packControlWord(control) {\n    var buffer = new ArrayBuffer(8); \n    var view = new DataView(buffer); \n    view.setUint16(0, 0x1337)\n    view.setUint32(2, control>>>0)\n    view.setUint16(6, 0xC0D3)\n    return buffer\n}\n\nfunction chunk(treeData) {\n    let chunk1 = {chunk:treeData.object, index:0}\n    return [chunk1,...chunkArray(treeData.array, 1000)]\n}\n\nfunction chunkArray(array, chunkSize) {\n    let chunkedArray=[]\n    \n    for (let i=0, chunkIndex=1; i<array.length; i+=chunkSize, chunkIndex++) {\n        chunkedArray.push({chunk:array.slice(i,i+chunkSize), index:chunkIndex});\n    }\n    return chunkedArray\n}\n","import * as Constants from '../app/Constants'\nimport * as Common from '../app/Common'\n\nexport function createSubObjectWithProperties(mainObject, properties) {\n    let subObject = {}\n    properties.forEach(property => {\n        subObject[property] = mainObject[property]\n    });\n    return subObject\n}\nexport function simplifiedFen(fen) {\n    let fenComponents = fen.split(' ')\n    if(fenComponents.length <=4) {\n        return fen\n    }\n    //exclude move and halfMove components\n    return `${fenComponents[0]} ${fenComponents[1]} ${fenComponents[2]}`\n}\n\nexport function getTimeControlsArray(site,timeControlState, selected) {\n    let allTimeControls = site === Constants.SITE_LICHESS ? \n        Common.LICHESS_TIME_CONTROLS : Common.CHESS_DOT_COM_TIME_CONTROLS\n    return allTimeControls.filter((timeControl)=>!!timeControlState[timeControl] === selected)\n}\nlet monthLabels = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n]\nexport function getTimeframeSteps() {\n    let steps = [{\n        year:2007,\n        value:0\n    }]\n    let value = 1;\n    let startYear = 2010\n    let currentYear = new Date().getFullYear()\n    let currentMonth = new Date().getMonth()\n    while(startYear < currentYear-1) {\n        steps.push({\n            toLongLabel:`${monthLabels[11]} ${startYear}`,\n            fromLongLabel:`${monthLabels[0]} ${startYear}`,\n            year:startYear,\n            value:value\n        })\n        startYear++\n        value++\n    }\n    for(let i=11;i>0;i--) {\n\n        let month = (currentMonth+12-i)%12\n        let year = month<currentMonth?currentYear:currentYear-1\n        steps.push({\n            fromLongLabel: `${monthLabels[month]} ${year}`,\n            toLongLabel: `${monthLabels[month]} ${year}`,\n            month:month,\n            year: year,\n            value:value\n        })\n        value++\n    }\n    steps.push({\n        month:12,\n        year: currentYear,\n        value:value\n    })\n    return steps\n}\n\nexport function getSelectedTimeFrameData(timeframe, timeframeSteps) {\n    let fromIndex = timeframe[0]\n    let toIndex = timeframe[1]\n    let fromTimeframe = timeframeSteps[fromIndex]\n    let toTimeframe = timeframeSteps[toIndex]\n    \n    if(fromIndex === timeframeSteps.length-1 && toIndex === timeframeSteps.length-1) {\n        let currentDate = new Date()\n        return {\n            label:\"Current month\",\n            fromMonth:currentDate.getMonth(),\n            frmYear:currentDate.getYear(),\n            fromTimeStamp:getTimeStampInfoFor(currentDate.getMonth(), currentDate.getYear(), \"min\")\n        }\n    }\n    if(fromIndex === 0 && toIndex === 0) {\n        return {label:\"Anytime\"}\n    }\n    if(fromIndex === 0 && toIndex === timeframeSteps.length-1) {\n        return {label:\"Anytime\"}\n    }\n    if(toIndex === timeframeSteps.length-1) {\n        let month = fromTimeframe.month ? fromTimeframe.month : 0\n        return {\n            label:`Since ${fromTimeframe.fromLongLabel}`,\n            fromYear: fromTimeframe.year,\n            fromMonth: month,\n            fromTimeStamp: getTimeStampInfoFor(month, fromTimeframe.year, \"min\")\n        }\n    }\n    if(fromIndex === 0) {\n        let month = toTimeframe.month ? toTimeframe.month : 11\n        return {\n            label:`Until ${toTimeframe.toLongLabel}`,\n            toYear: toTimeframe.year,\n            toMonth: month,\n            toTimeStamp: getTimeStampInfoFor(month, toTimeframe.year, \"max\")\n        }\n    }\n    let fromMonth = fromTimeframe.month ? fromTimeframe.month : 0\n    let toMonth = toTimeframe.month ? toTimeframe.month : 11\n    return {\n        label:`From ${fromTimeframe.fromLongLabel} to ${toTimeframe.toLongLabel}`,\n        fromYear: fromTimeframe.year,\n        fromMonth: fromMonth,\n        fromTimeStamp: getTimeStampInfoFor(fromMonth, fromTimeframe.year, \"min\"),\n        toYear: toTimeframe.year,\n        toMonth: toMonth,\n        toTimeStamp: getTimeStampInfoFor(toMonth, toTimeframe.year, \"max\")\n    }\n}\n\nfunction getTimeStampInfoFor(month, year, minOrMax) {\n    if(minOrMax === \"min\") {\n        return new Date(year, month).getTime()\n    } else {\n        return new Date(year,month,getDaysInMonth(year, month)).getTime()\n    }\n}\n\nfunction getDaysInMonth(year,month) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\nexport function getPerformanceDetails(totalElo, white, draws, black, playerColor) {\n    let totalGames = white + draws + black\n    let averageElo = Math.round(totalElo/totalGames)\n    let playerWins = playerColor === Constants.PLAYER_COLOR_WHITE?white:black\n    let playerLosses = playerColor !== Constants.PLAYER_COLOR_WHITE?white:black\n    let score = playerWins+(draws/2)\n    let scorePercentage = Math.round(score*100/totalGames)\n    let ratingChange = Common.DP_TABLE[scorePercentage]\n    return {\n        results:`+${playerWins}-${playerLosses}=${draws}`,\n        performanceRating:averageElo+ratingChange,\n        averageElo: averageElo,\n        score:`${Number.isInteger(score)?score:score.toFixed(1)}/${totalGames}`,\n        ratingChange:`${ratingChange===0?'':(ratingChange>0?'+':'-')}${Math.abs(ratingChange)}`\n    }\n}\n\nexport function isOpponentEloInSelectedRange(elo, range) {\n    if(range[1]===Constants.MAX_ELO_RATING) {\n        return elo>=range[0]\n    }\n    return elo<=range[1] && elo>=range[0]\n}\n\nexport function isDateMoreRecentThan(date, than) {\n    // give priority to game which has a date\n    if(!than) {\n        return false\n    }\n    if(!date) {\n        return true\n    } \n    return new Date(date)>new Date(than)\n}","import { withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport React from 'react'\nimport { createSubObjectWithProperties } from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const ExpansionPanel = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nexport function getNumberIcon(n) {\n    return <img alt={`step ${n}`} className = 'lowOpacity styledNumbers' src={`/images/styled-${n}.png`} height={24}/>\n}\n\nexport function advancedFilters(state) {\n    return createSubObjectWithProperties(state,\n        [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n        Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n        Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n        Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n        Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n        Constants.FILTER_NAME_ELO_RANGE])\n}","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport { Collapse } from 'reactstrap'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport { faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\nimport AdvancedFilters from './AdvancedFilters'\nimport {advancedFilters} from './Common'\nimport MuiCollapse from '@material-ui/core/Collapse';\nimport * as SitePolicy from '../../app/SitePolicy'\nimport { Radio, FormControlLabel, RadioGroup, FormHelperText, FormControl, FormLabel} from '@material-ui/core';\nimport deepEqual from 'deep-equal'\n\nexport default class User extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerColor: this.props.playerColor,\n            isAdvancedFiltersOpen: false\n        }\n        this.timeframeSteps=this.props.timeframeSteps\n        Object.assign(this.state, this.props.advancedFilters)\n        this.defaultAdvancedFilters = this.props.advancedFilters\n    }\n\n    toggleRated() {\n        if (this.state.rated === 'all') {\n            this.setState({ rated: 'rated' })\n        } else if (this.state.rated === 'rated') {\n            this.setState({ rated: 'casual' })\n        } else {\n            this.setState({ rated: 'all' })\n        }\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", \"rated\")\n    }\n    toggleState(property) {\n        return () => {\n            let newState = {}\n            newState[property] = !this.state[property]\n            this.setState(newState)\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ToggleAdvancedFilters\", this.state.site)\n        }\n    }\n    playerColorChange(event) {\n        let playerColor = event.target.value\n        this.setState({ playerColor: playerColor })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ColorChange\", playerColor)\n        if(!SitePolicy.isAdvancedFiltersEnabled(this.props.site)) {\n            setImmediate(this.setFilters.bind(this))\n        }\n}\n    handleTimeControlChange(event) {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n    handleTimeframeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_SELECTED_TIMEFRAME]: newValue });\n    }\n    handleEloRangeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_ELO_RANGE]: newValue });\n    }\n    handleDownloadLimitChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_DOWNLOAD_LIMIT]: newValue });\n    }\n\n    setFilters(){\n        if(!this.state.playerColor) {\n            this.setState({colorError:\"Please select a color\"})\n            return\n        }\n        this.setState({colorError:\"\"})\n        this.props.filtersChange(this.state)\n    }\n    getSummary(isDisabled) {\n        if(this.props.playerColor && !isDisabled) {\n            return <span>\n                {getNumberIcon('done')}\n                Color: <b>{this.props.playerColor===Constants.PLAYER_COLOR_WHITE?\"White\":\"Black\"} </b>\n                {this.areAdvancedFiltersApplied()?<span className=\"smallText\">(Filters applied)</span>:null}</span>\n\n        }\n        return <span>{getNumberIcon(3)} Color and filters</span>\n    }\n    componentWillReceiveProps(newProps) {\n        this.setState({...newProps.advancedFilters, playerColor:newProps.playerColor})\n    }\n\n    areAdvancedFiltersApplied(){\n        for (let [key, value] of Object.entries(this.defaultAdvancedFilters)) {\n            if(this.props.advancedFilters[key]===value) {\n                continue\n            }\n            if(!deepEqual(this.props.advancedFilters[key], value)) {\n                return true\n            } \n        }\n        return false\n    }\n\n    \n    render(){\n        let isDisabled = !SitePolicy.isFilterPanelEnabled(this.props.site, this.props.playerName, this.props.selectedNotablePlayer)\n        return <ExpansionPanel expanded={this.props.expandedPanel === 'filters'}\n                    TransitionComponent={MuiCollapse}\n                    TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            onChange={this.props.handleExpansionChange}\n            disabled={isDisabled}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary(isDisabled)}</ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <div className=\"pgnloaderfirstsection\">\n                <FormControl component=\"fieldset\" error={!!this.state.colorError}>\n                    <FormLabel component=\"legend\">Games where <b>{this.props.playerName}</b> is playing as:</FormLabel>\n                    <RadioGroup onChange={this.playerColorChange.bind(this)} value={this.state.playerColor}>\n                        <FormControlLabel className=\"whitelabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_WHITE} label={this.state.playerColor === Constants.PLAYER_COLOR_WHITE?<b>White</b>:\"White\"}/>\n                        <FormControlLabel className=\"blacklabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_BLACK} label={this.state.playerColor === Constants.PLAYER_COLOR_BLACK?<b>Black</b>:\"Black\"}/>\n                    </RadioGroup>\n                    <FormHelperText>{this.state.colorError}</FormHelperText>\n                </FormControl>\n                </div>\n                {SitePolicy.isAdvancedFiltersEnabled(this.props.site)?<div className=\"pgnloadersection\"><span className=\"linkStyle\" onClick={this.toggleState('isAdvancedFiltersOpen').bind(this)}>Advanced filters <FontAwesomeIcon icon={this.state.isAdvancedFiltersOpen ? faCaretUp : faCaretDown} /></span>\n                    <Collapse isOpen={this.state.isAdvancedFiltersOpen}>\n                            <AdvancedFilters\n                                site={this.props.site}\n                                toggleRated={this.toggleRated.bind(this)}\n                                handleTimeControlChange={this.handleTimeControlChange.bind(this)}\n                                handleTimeframeChange={this.handleTimeframeChange.bind(this)}\n                                handleEloRangeChange={this.handleEloRangeChange.bind(this)}\n                                timeframeSteps={this.timeframeSteps}\n                                handleDownloadLimitChange={this.handleDownloadLimitChange.bind(this)}\n                                advancedFilters={advancedFilters(this.state)}\n                            />\n                    </Collapse>\n                </div>:null}\n                </ExpansionPanelDetails>\n                <Divider />\n                <ExpansionPanelActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setFilters.bind(this)}>Continue</MaterialUIButton>\n                </ExpansionPanelActions></ExpansionPanel>\n    \n    }\n}","import React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport PGNReader from '../../app/PGNReader'\nimport { faList} from '@fortawesome/free-solid-svg-icons'\nimport GetApp from '@material-ui/icons/GetApp'\nimport Equalizer from '@material-ui/icons/Equalizer'\nimport Fade from '@material-ui/core/Fade'\nimport Save from '@material-ui/icons/Save';\nimport * as SitePolicy from '../../app/SitePolicy'\nimport {Tooltip} from '@material-ui/core'\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport {serializeOpeningTree, deserializeOpeningTree} from '../../app/OpeningTreeSerializer'\n\nexport default class Actions extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            isGamesSubsectionOpen : false,\n            exportingInProgress : false\n        }\n    }\n    unload = () => {\n        if (this.pgnReader) {\n            this.pgnReader.stopDownloading()\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.unload);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"beforeunload\", this.unload);\n    }\n    importTreeClicked() {\n        this.setState({exportingInProgress:true})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"LoadTree\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n        setImmediate(this.importOpeningTree.bind(this))\n    }\n    importOpeningTree() {\n        deserializeOpeningTree(this.props.files[0], \n            (err,data)=> {\n                if(err) {\n                    this.props.showError(err)\n                    this.setState({exportingInProgress:false})\n                    return\n                }\n                this.props.importOpeningTreeObject(data)\n                this.setState({exportingInProgress:false})\n            })\n    }\n    exportTreeClicked() {\n        this.setState({exportingInProgress:true})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"SaveTree\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n        setImmediate(this.exportOpeningTree.bind(this))\n    }\n    exportOpeningTree() {\n        serializeOpeningTree(this.props.exportOpeningTreeObject(), \n            SitePolicy.exportFileName(this.props.site, this.props.playerName, this.props.playerColor, null, \"tree\"), \n            (err, info) => {\n                if(err) {\n                    this.props.showError(err)                    \n                } else {\n                    this.props.showInfo(info)\n                }\n                this.setState({exportingInProgress:false})\n            })\n    }\n\n\n    readPgn(shouldDownloadToFile) {\n        this.pgnReader = new PGNReader()\n        this.pgnReader.fetchPGNFromSite(this.props.playerName,\n            this.props.playerColor,\n            this.props.site,\n            this.props.selectedNotablePlayer,\n            this.props.selectedNotableEvent,\n            shouldDownloadToFile,\n            this.props.advancedFilters,\n            this.props.notify,\n            this.props.showError,\n            this.stopDownloading.bind(this),\n            this.props.files)\n    }\n\n    download() {\n        this.readPgn(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Download\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n\n    }\n\n    getPlayerName() {\n        if(this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.props.selectedNotablePlayer.name\n        }\n        return this.props.playerName\n    }\n    componentWillReceiveProps(newProps) {\n        if(newProps.gamesProcessed>0) {\n            this.setState({isGamesSubsectionOpen:true})\n        }\n    }\n\n    load() {\n        this.props.clear()\n        this.setState({ isGamesSubsectionOpen: true, loadedSite:this.props.site })\n        // set the player name and color in the global state\n        this.props.onChange(\"playerName\", this.props.playerName)\n        this.props.onChange(\"playerColor\", this.props.playerColor)\n        this.readPgn(false)\n        this.props.setDownloading(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Load\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n    }\n    stopDownloading() {\n        this.props.setDownloading(false)\n    }\n    stopDownloadingAction() {\n        this.stopDownloading()\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"StopDownloading\", this.props.site)\n    }\n    openingTreeLoadActions() {\n        return <div className=\"pgnloadersection\">\n            <MaterialUIButton\n            onClick={this.importTreeClicked.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={this.state.exportingInProgress?<HourglassEmptyIcon/>:<GetApp/>}\n            className=\"mainButton\" disableElevation\n            disabled={this.state.exportingInProgress}\n            >\n                {this.state.exportingInProgress?\"Loading from file\":\"Load openingtree\"}\n        </MaterialUIButton></div>\n    }\n    regularActions() {\n        let downloadDisabledReason = SitePolicy.treeSaveDisabledReason(\n                                        this.state.loadedSite, \n                                        this.props.site,\n                                        this.props.gamesProcessed, \n                                        this.props.isDownloading)\n        return <div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.load.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<Equalizer />}\n            className=\"mainButton\" disableElevation\n        >\n            Analyze games\n        </MaterialUIButton></div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.download.bind(this)}\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<GetApp />}\n            className=\"mainButton\" disableElevation\n        >\n            Export as PGN\n        </MaterialUIButton></div>\n        {\n            <div className=\"pgnloadersection\"><Tooltip placement=\"top\" title={downloadDisabledReason}>\n                <span><MaterialUIButton\n                onClick={this.exportTreeClicked.bind(this)}\n                variant=\"contained\"\n                color=\"default\"\n                startIcon={this.state.exportingInProgress?<HourglassEmptyIcon/>:<Save/>}\n                className=\"mainButton\" disableElevation\n                disabled={!!downloadDisabledReason || this.state.exportingInProgress}\n                >\n                    {this.state.exportingInProgress?\"Saving to file\":\"Save openingtree\"}\n                </MaterialUIButton></span></Tooltip></div>\n            }\n        {\n            this.state.isGamesSubsectionOpen ?\n                <div>\n                    <div className=\"pgnloadersection\">\n                        {`Games Loaded: ${this.props.gamesProcessed} `}{this.props.isDownloading ? <span className=\"stopDownloading\">[<span className=\"linkStyle\" onClick={this.stopDownloadingAction.bind(this)}><img alt=\"loading spinner\" src=\"./spinner.gif\" height=\"15\" />stop</span>]</span> : \"\"}\n                    </div>\n                    <div onClick={() => this.props.switchToMovesTab()} className=\"navLinkButton pgnloadersection\">\n                        <FontAwesomeIcon icon={faList} /> View Moves>>\n                </div>\n                </div>\n                : \"\"\n        }\n        </div>\n    }\n    mainComponent() {\n        if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            return this.openingTreeLoadActions()\n        }\n        return this.regularActions()\n    }\n    render(){\n        if(this.props.expandedPanel) {\n            return <Fade timeout={Constants.LOADER_ANIMATION_DURATION_MS*2}>\n            {this.mainComponent()}\n        </Fade>\n        }\n        return <Fade in timeout={Constants.LOADER_ANIMATION_DURATION_MS*3}>\n            {this.mainComponent()}\n        </Fade>\n    }\n}","import normalizeNewLine from 'normalize-newline'\n\nexport function normalizePGN(pgnString) {\n    // parser cannot handle \\r characters\n    // normalize newlines coverts everything to \\n\n    let dataString = normalizeNewLine(pgnString)\n\n    // Remove Single line commments because parser does not handle them\n    dataString = dataString.replace(/^;.*$/gm, '')\n    \n    // some pgn files dont have triple \\n separating games\n    // so converting all double \\n with triple \\n if it happens before a [\n    // this separates games with atleast a triple \\n\n    dataString = dataString.replace(/\\n\\n+\\[/g, `\\n\\n\\n[`);\n\n    // some pgn files have the result in a separate line instead of \n    // at the end of the moves this moves those results to the end of the moves\n    // $1 replaces the first captured group which is the result\n    dataString = dataString.replace(/\\s*\\n+(1-0|0-1|1\\/2-1\\/2)/g, ` $1`);\n\n    return dataString\n}\n","import request from 'request'\nimport {normalizePGN} from './IteratorUtils'\nimport {trimString} from '../Common'\n\nexport default class BaseUrlIterator {\n\n    constructor(url, shouldNormalizePGN, responseCodeCallback, errorCallback, dataCallback, endCallback) {\n        let remainingBody=''\n\n        let requestObject = request.get(\n                url, \n                { json: false }).on('error', errorCallback)\n            .on('response',(response)=>{\n                return responseCodeCallback(response.statusCode)\n            }).on('data', (data) => {\n                let newBody = shouldNormalizePGN? \n                    normalizePGN(remainingBody + data.toString()):\n                    remainingBody + data.toString()\n                let lastValidPGN = newBody.lastIndexOf(`\\n\\n\\n`)\n                let body = newBody.slice(0, lastValidPGN)\n\n                remainingBody = newBody.slice(lastValidPGN)\n                if(!this.callDataCallback(body, dataCallback)) {\n                    requestObject.abort()\n                }\n            }).on('end', () => {\n                this.callDataCallback(remainingBody, dataCallback)\n                endCallback()\n            })\n    }\n\n    callDataCallback(body, dataCallback) {\n        let pgnArray = body.split(`\\n\\n\\n`)\n            .map(\n                pgnString=> trimString(pgnString)\n            )\n        return dataCallback(pgnArray)\n\n    }\n}","import { parse }  from '../PGNParser'\nimport {getTimeControlsArray, getTimeframeSteps, getSelectedTimeFrameData, isOpponentEloInSelectedRange} from '../util'\nimport * as Constants from '../Constants'\nimport {trackEvent} from '../Analytics'\nimport BaseUrlIterator from './BaseUrlIterator'\n\nexport default class LichessIterator {\n\n    constructor(playerName, playerColor, advancedFilters, ready, showError) {\n        let lichessBaseURL = `https://lichess.org/api/games/user/`\n        let playerNameFilter = encodeURIComponent(playerName)\n        let colorFilter = `?color=${playerColor}`\n        let ratedFilter = `${advancedFilters[Constants.FILTER_NAME_RATED]===\"all\"?\"\":`&rated=${advancedFilters[Constants.FILTER_NAME_RATED]===\"rated\"?\"true\":\"false\"}`}`\n        let selectedTimeFrameData = getSelectedTimeFrameData(advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], getTimeframeSteps())\n        let timeSinceFilter = `${selectedTimeFrameData.fromTimeStamp?`&since=${selectedTimeFrameData.fromTimeStamp}`:\"\"}`\n        let timeUntilFilter = `${selectedTimeFrameData.toTimeStamp?`&until=${selectedTimeFrameData.toTimeStamp}`:\"\"}`\n        let selectedTimeControls = getTimeControlsArray(Constants.SITE_LICHESS, advancedFilters, true)\n        let perfFilter = selectedTimeControls.length === 0 || selectedTimeControls.length === 6?\n                \"\" : `&perfType=${selectedTimeControls.join(\",\")}`\n        new BaseUrlIterator(lichessBaseURL+playerNameFilter+colorFilter+ratedFilter+perfFilter+timeSinceFilter+timeUntilFilter, false,\n            (responseCode)=>{\n                if(responseCode === 404) {\n                    showError('Could not find lichess user ' + playerName)\n                } else if (responseCode !== 200) {\n                    showError('Could not load games of lichess user ' + playerName)\n                }\n            }, (error)=> {\n                showError('Failed to connect to lichess.org')\n                ready([], false)\n            }, (pgnStringArray) => {\n                let parsedPGNs = pgnStringArray.map((pgnString)=> {\n                    try {\n                        return parse(pgnString)[0]\n                    } catch (e) {\n                        console.log(\"Failed to parse pgn\", pgnString)\n                        console.log(e)\n                        trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedLichess\", playerName)\n                        return null\n                    }\n                })\n    \n                let continueProcessing = ready(parsedPGNs.filter((pgn)=>{\n                    if(!pgn || pgn.headers.Variant !== \"Standard\") {\n                        return false\n                    }\n                    let opponentElo = playerColor === Constants.PLAYER_COLOR_WHITE?pgn.headers.BlackElo:pgn.headers.WhiteElo\n                    if(!isOpponentEloInSelectedRange(opponentElo, advancedFilters[Constants.FILTER_NAME_ELO_RANGE])) {\n                        return false\n                    }\n                    return true\n                }), true)\n                return continueProcessing\n            }, ()=>{\n                ready([], false)\n            })\n    }\n}\n","import ChessWebAPI from 'chess-web-api'\nimport { parse }  from '../PGNParser'\nimport request from 'request'\nimport * as Constants from '../Constants'\nimport {isOpponentEloInSelectedRange, getTimeframeSteps, getSelectedTimeFrameData} from '../util'\nimport {trackEvent} from '../Analytics'\n\nexport default class ChessComIterator {\n\n    constructor(playerName, playerColor, advancedFilters, ready, showError) {\n        let chessAPI = new ChessWebAPI({\n            queue: true,\n        });\n        let pendingRequests = 0;\n        let parseGames= (archiveResponse)=>{\n            pendingRequests--\n            let continueProcessing = ready(archiveResponse.body.games.filter(\n                game=>{\n                    if(game.rules!==\"chess\" || game[playerColor].username.toLowerCase() !== playerName.toLowerCase()) {\n                        return false\n                    }\n                    let ratedMode = advancedFilters[Constants.FILTER_NAME_RATED]\n                    if(ratedMode === 'rated' && !game.rated) {\n                        return false\n                    } else if (ratedMode === 'casual' && game.rated) {\n                        return false\n                    }\n                    if(!advancedFilters[game.time_class]) {\n                        return false\n                    }\n                    let opponentElo = playerColor === Constants.PLAYER_COLOR_WHITE?game.black.rating:game.white.rating\n                    if(!isOpponentEloInSelectedRange(opponentElo, advancedFilters[Constants.FILTER_NAME_ELO_RANGE])) {\n                        return false\n                    }\n                    return true \n                }).map(\n                    game=> {\n                        try {\n                            return parse(game.pgn)[0]\n                        } catch (e) {\n                            console.log(\"failed to parse pgn\", game)\n                            console.log(e)\n                            trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedChessCom\", `${playerName}:${playerColor}`)\n                            return null\n                        }\n                    }).filter(game=> game !== null), pendingRequests>0)\n            if(!continueProcessing) {\n                //cancel all pending requests\n                while(chessAPI.dequeue()){}\n                pendingRequests = 0\n                ready([],false)\n            }\n        }\n        let shouldFetchGamesFromArchive = (archiveMonth,archiveYear, selectedTimeFrameData) => {\n            let fromYear = selectedTimeFrameData.fromYear || 1970\n            let toYear = selectedTimeFrameData.toYear || 10000\n            let fromMonth = selectedTimeFrameData.fromYear || 0\n            let toMonth = selectedTimeFrameData.toYear || 11\n    \n            if(archiveYear>fromYear && archiveYear<toYear) {\n                return true\n            }\n            if(archiveYear<fromYear || archiveYear>toYear) {\n                return false\n            }\n            if(archiveYear === fromYear) {\n                return archiveMonth >= fromMonth\n            }\n            if(archiveYear === toYear) {\n                return archiveMonth <= toMonth\n            }\n            console.log(\"should not happen\")\n            return true\n        }\n        let selectedTimeFrameData = getSelectedTimeFrameData(advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], getTimeframeSteps())\n        let fetchAllGames = function(responseBody) {\n            responseBody.archives.reverse().forEach((archiveUrl)=>{\n\n                let components=archiveUrl.split('/')\n                let year=components[components.length-2]\n                let month=components[components.length-1]\n                if(shouldFetchGamesFromArchive(month,year, selectedTimeFrameData)) {\n                    pendingRequests++\n                    chessAPI.dispatch(chessAPI.getPlayerCompleteMonthlyArchives, parseGames, [playerName, year, month]);\n                }\n            })\n            if(pendingRequests === 0) {\n                showError('Could not find games for chess.com user '+playerName)\n                ready([], false)\n            }\n        }\n\n        request(`https://api.chess.com/pub/player/${playerName}/games/archives`, function (error, response, body) {\n            if(error) {\n                showError('Could not connect to chess.com')\n                ready([], false)\n            } else if(response.statusCode === 404) {\n                showError('Could not find chess.com user '+playerName)\n                ready([], false)\n            } else if (response.statusCode !== 200) {\n                showError('Could not load games for chess.com user '+playerName)\n                ready([], false)\n            } else {\n                if(response.body) {\n                    try{\n                        let jsonBody = JSON.parse(response.body)\n                        fetchAllGames(jsonBody)\n                    }catch(e) {\n                        showError('Could not find games for chess.com user '+playerName)\n                        ready([], false)\n                    }\n                }\n            }\n        });\n    }\n\n\n}","import { parse }  from '../PGNParser'\nimport * as Constants from '../Constants'\nimport {trackEvent} from '../Analytics'\nimport {normalizePGN} from './IteratorUtils'\nimport {trimString} from '../Common'\n\nexport default class LichessIterator {\n\n    constructor(playerName, files, playerColor, advancedFilters, ready, showError) {\n        files.forEach((file)=>{\n            let reader = this.setupReader(playerName, playerColor, advancedFilters, ready, showError)\n            reader.readAsText(file)\n        })\n    }\n\n    setupReader(playerName, playerColor, advancedFilters, ready, showError) {\n        let reader = new FileReader()\n        let playerColorHeaderName = playerColor === Constants.PLAYER_COLOR_WHITE? 'White': 'Black'\n        let lowerCasePlayerName = playerName? playerName.toLowerCase() : null\n        reader.onload = function(evt) {\n            let fileData = normalizePGN(evt.target.result);\n            let pgnsArray = fileData.split(\"\\n\\n\\n\")\n\n            let parsedPGNs = pgnsArray.map((pgnString)=> {\n                try {\n                    let parsedPGN =  parse(trimString(pgnString))[0]\n                    let playerColorHeaderValue = parsedPGN.headers[playerColorHeaderName]\n                    if(playerName && playerColorHeaderValue && !playerColorHeaderValue.toLowerCase().includes(lowerCasePlayerName)) {\n                        // filter out games not from selected player\n                        return null\n                    }\n                    return parsedPGN\n                } catch (e) {\n                    console.log(\"failed to parse pgn\", pgnString)\n                    console.log(e)\n                    trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedPGNFile\", playerName)\n                    return null\n                }\n            })\n            ready(parsedPGNs.filter(pgn=>!!pgn), true)\n        };\n        reader.onerror = function() {\n            showError(\"Failed to load pgn file\")\n            ready([], false)\n        }\n        reader.onloadend = function() {\n            ready([], false)\n        }\n        return reader\n    }\n}","import { parse }  from '../PGNParser'\nimport * as Constants from '../Constants'\nimport {trackEvent} from '../Analytics'\nimport BaseUrlIterator from './BaseUrlIterator'\n\nexport default class PGNUrlIterator {\n\n    constructor(url, lowerCasePlayerNames, playerColor, advancedFilters, ready, showError) {\n        let playerColorHeaderName = playerColor === Constants.PLAYER_COLOR_WHITE? 'White': 'Black'\n        new BaseUrlIterator(url, true, \n            (responseCode)=>{\n                if (responseCode !== 200) {\n                    showError('Could not load url')\n                }\n            }, (error)=> {\n                showError('Could not connect to url')\n                ready([], false)\n            }, (pgnStringArray) => {\n                let parsedPGNs = pgnStringArray.map((pgnString)=> {\n                    try {\n\n                        return parse(pgnString)[0]\n                    } catch (e) {\n                        console.log(\"Failed to parse pgn\", pgnString)\n                        console.log(e)\n                        trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedPGNUrl\")\n                        return null\n                    }\n                })\n    \n                let continueProcessing = ready(parsedPGNs.filter((game)=>{\n                    if(!game) {\n                        return false\n                    }\n                    if(lowerCasePlayerNames && !lowerCasePlayerNames.includes(game.headers[playerColorHeaderName].toLowerCase())) {\n                        return false\n                    }\n                    return true\n                }), true)\n                return continueProcessing\n            }, ()=>{\n                ready([], false)\n            })\n    }\n\n}\n","import PGNUrlIterator from './PGNUrlIterator'\n\nexport default class NotablePlayerIterator {\n\n    constructor(selectedPlayer, playerColor, advancedFilters, ready, showError) {\n        let lowerCaseAliases = selectedPlayer.pgnAliases?selectedPlayer.pgnAliases.map(alias=>alias.toLowerCase()):null\n        new PGNUrlIterator(selectedPlayer.pgnUrl, lowerCaseAliases, playerColor, advancedFilters, ready, showError)\n    }\n\n}\n","import {openingGraph} from './OpeningGraph'\nimport Chess from 'chess.js'\nimport LichessIterator from './iterator/LichessIterator'\nimport ChessComIterator from './iterator/ChessComIterator'\nimport PGNFileIterator from './iterator/PGNFileIterator'\nimport * as Constants from './Constants'\nimport streamsaver from 'streamsaver'\nimport NotablePlayerIterator from './iterator/NotablePlayerIterator'\nimport * as SitePolicy from './SitePolicy'\n\nexport default class PGNReader {\n    constructor() {\n        this.totalGames = 0;\n        this.pendingGames = 0;\n        this.pendingDownloads = true;\n        streamsaver.mitm = \"download/download-mitm.html\"\n        this.fileWriter = null\n    }\n\n    stopDownloading() {\n        if(this.fileWriter) {\n            this.fileWriter.close()\n            this.fileWriter = null\n        }\n    }\n\n    getPgnString(game){\n        return `${Object.entries(game.headers).map(header=>`[${header[0]} \"${header[1]}\"]`).join(\"\\n\")}\n                \\n${game.moves.map((moveObject, index)=>{\n                    return `${index%2!==0?'':index/2+1+\".\"} ${moveObject.move}`\n                }).join(' ')} ${game.result}\\n\\n\\n`\n    }\n\n    fetchPGNFromSite(playerName, playerColor, site, selectedNotablePlayer,\n        selectedNotableEvent, shouldDownloadToFile, advancedFilters, notify, \n        showError, stopDownloading, files) {\n        this.continueProcessingGames = true\n        if(shouldDownloadToFile) {\n            let fileStream =  streamsaver.createWriteStream(SitePolicy.exportFileName(site, playerName, playerColor, selectedNotableEvent, \"pgn\"))\n            this.fileWriter = fileStream.getWriter()\n        }\n        let encoder = new TextEncoder()\n        let downloadResponse = (result, pendingDownloads) => {\n            this.fileWriter.write(encoder.encode(result.map(game=>this.getPgnString(game)).join(\"\"))).then(()=>{\n                if(!pendingDownloads) {\n                    this.stopDownloading()\n                }\n            })\n            return true\n        }\n        let handleResponse = (result, pendingDownloads) => {\n            if(!result) {\n                return this.continueProcessingGames\n            }\n            this.totalGames += result.length\n            this.pendingGames += result.length\n            this.pendingDownloads = pendingDownloads\n            \n\n            setTimeout(() => {\n                this.parsePGNTimed(site, result, advancedFilters, playerColor, 0, playerName, notify, showError, stopDownloading)\n            } ,1)\n            return this.continueProcessingGames\n        }\n        let processor = shouldDownloadToFile? downloadResponse: handleResponse\n        if (site === Constants.SITE_LICHESS) {\n            new LichessIterator(playerName, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_CHESS_DOT_COM) {\n            new ChessComIterator(playerName, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_PGN_FILE) {\n            new PGNFileIterator(playerName, files, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_PLAYER_DB) {\n            new NotablePlayerIterator(selectedNotablePlayer, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_EVENT_DB) {\n            new NotablePlayerIterator(selectedNotableEvent, playerColor, advancedFilters, processor, showError)\n        } \n\n        \n    }\n\n    parsePGNTimed(site, pgnArray, advancedFilters, playerColor, index,  playerName, notify, showError, stopDownloading) {\n        if(index< pgnArray.length) {\n            this.pendingGames--\n        }\n        if(!this.pendingDownloads && this.pendingGames <= 0) {\n            stopDownloading()\n        }\n\n        if(index>= pgnArray.length || !this.continueProcessingGames) {\n            return\n        }\n\n        var pgn = pgnArray[index]\n        if(pgn.moves[0] && pgn.moves[0].move_number === 1) {\n            let chess = new Chess()\n            let resultObject = this.gameResult(pgn, site)\n\n            pgn.moves.forEach(element => {\n                let sourceFen = chess.fen()\n                let move = chess.move(element.move, {sloppy: true})\n                let targetFen = chess.fen()\n                if(!move){\n                    console.log('failed to load game ' + pgn)\n                    showError(\"Failed to load game\", `${playerName}:${playerColor}`)\n                    return\n                }\n                openingGraph.addMoveForFen(sourceFen, targetFen, move, resultObject, playerColor)\n            })\n            let fen = chess.fen()\n            openingGraph.addGameResultOnFen(fen, resultObject)\n            openingGraph.addResultToRoot(resultObject, playerColor)\n            this.continueProcessingGames = notify(advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT],1, openingGraph)\n        }\n            setTimeout(()=>{this.parsePGNTimed(site, pgnArray, advancedFilters, playerColor, index+1, playerName, notify, showError, stopDownloading)},1)\n    }\n\n    gameResult(pgn, site) {\n        let url= null \n        if (site === Constants.SITE_CHESS_DOT_COM) {\n            url = pgn.headers.Link\n        } else if(site === Constants.SITE_LICHESS) {\n            url = pgn.headers.Site\n        }\n        let headers=null\n        if(!url) {\n            headers = pgn.headers\n        }\n        return {\n            result:pgn.result,\n            white:pgn.headers.White,\n            black:pgn.headers.Black,\n            whiteElo:pgn.headers.WhiteElo,\n            blackElo:pgn.headers.BlackElo,\n            url:url,\n            date:pgn.headers.Date,\n            headers:headers\n        }\n    }\n}","import * as Constants from '../../app/Constants'\nimport * as Common from '../../app/Common'\nimport {getTimeControlsArray} from '../../app/util'\n\nlet timeClasses = [\n    {\n        label:\"Fast time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    },\n    {\n        label:\"Slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ]\n    },\n    {\n        label:\"Reasonable time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET\n        ]\n    },\n    {\n        label:\"Exclude slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    }\n]\n        \n\n\nexport function timeControlLabel(site, timeControlState) {\n    let selectedTimeControls = getTimeControlsArray(site, timeControlState, true)\n    let unselectedTimeControls = getTimeControlsArray(site, timeControlState, false)\n    if(unselectedTimeControls.length === 0 || selectedTimeControls.length === 0) {\n        return \"All time controls\"\n    }\n    if(selectedTimeControls.length === 1) {\n        return Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]\n    }\n    if(unselectedTimeControls.length === 1) {\n        return `All except ${Common.TIME_CONTROL_LABELS[unselectedTimeControls[0]]}`\n    }\n    if(selectedTimeControls.length === 2) {\n        return `${Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]} and ${Common.TIME_CONTROL_LABELS[selectedTimeControls[1]]}`\n    }\n\n    return lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls)\n}\n\nfunction lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls) {\n    let timeClass = timeClasses.filter(\n        (timeClass) => {\n            return includesAll(unselectedTimeControls,timeClass.unselectedTimeControls)\n                && includesAll(selectedTimeControls,timeClass.selectedTimeControls)\n    })\n    if(timeClass.length) {\n        return timeClass[0].label\n    } \n    return selectedTimeControls.map(control=>Common.TIME_CONTROL_LABELS[control]).join(', ')\n}\n\nfunction includesAll(arr, subArray) {\n    return subArray.every(v => arr.includes(v));\n}\n","import {timeControlLabel} from './TimeControlLabels'\nimport {getSelectedTimeFrameData} from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const getTimeControlLabel = timeControlLabel\n\nexport function getRatedLabel(rated) {\n    if(rated === 'all') {\n        return \"Rated and casual\"\n    } else if (rated === 'rated') {\n        return \"Rated only\"\n    } else if (rated === 'casual') {\n        return \"Casual only\"\n    }\n}\n\nexport function getWhenPlayedLabel(timeframe, timeframeSteps) {\n    return getSelectedTimeFrameData(timeframe, timeframeSteps).label\n}\n\nexport function getELORangeLabel(selectedEloRange) {\n    if(selectedEloRange[0] === 0 && selectedEloRange[1]===Constants.MAX_ELO_RATING) {\n        return \"All elo ratings\"\n    } else if (selectedEloRange[0] === 0) {\n        return `Below ${selectedEloRange[1]}`\n    } else if (selectedEloRange[1] === Constants.MAX_ELO_RATING) {\n        return `Above ${selectedEloRange[0]}`\n    } else {\n        return `Between ${selectedEloRange[0]} and ${selectedEloRange[1]}`\n    }\n}\nexport function getDownloadLimitLabel(downloadLimit) {\n    return downloadLimit>= Constants.MAX_DOWNLOAD_LIMIT?\"No limit\":`${downloadLimit} games`\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport React from 'react'\nimport {Collapse, Container, Row, Col} from 'reactstrap'\nimport { FormControlLabel,Slider } from '@material-ui/core';\nimport * as Constants from '../../app/Constants'\nimport {getTimeControlLabel, getELORangeLabel, getRatedLabel, getWhenPlayedLabel, getDownloadLimitLabel} from './FilterLabels'\nimport * as Common from '../../app/Common'\nimport {trackEvent} from '../../app/Analytics'\n\nexport default class AdvancedFilters extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentlyOpenAdvancedFilter:'',\n        }\n        this.timeframeMarks=[\n            {\n                value:0,\n                label:\"Big bang\"\n            }, {\n                value:props.timeframeSteps.length-1,\n                label:\"Now\"\n            }]\n        this.downloadLimitMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_DOWNLOAD_LIMIT,\n                label:`No limit`\n            }]\n        this.eloRangeMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_ELO_RATING,\n                label:`No limit`\n            }]\n    \n    }\n    setCurrentlyOpenAdvancedFilter(filterName) {\n        return () => {\n            if(this.state.currentlyOpenAdvancedFilter === filterName) {\n                //close if already open\n                filterName = ''\n            }\n            this.setState({currentlyOpenAdvancedFilter:filterName})\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", filterName)\n        }\n    }\n\n    getFilters(site){\n        return <div>\n            {this.subSectionComponent('Mode', getRatedLabel(this.props.advancedFilters.rated), this.props.toggleRated)}\n            {this.subSectionComponent('Time control', getTimeControlLabel(this.props.site, this.props.advancedFilters), \n                    this.setCurrentlyOpenAdvancedFilter('timeControl').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'timeControl'}>\n                    {this.getTimeControlFilters(site, 4)}\n                </Collapse>\n            )}\n            {this.subSectionComponent('When played', getWhenPlayedLabel(this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], this.props.timeframeSteps), \n                this.setCurrentlyOpenAdvancedFilter('whenPlayed').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'whenPlayed'}>\n                    {this.getTimeFrameFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Opponent elo range', getELORangeLabel(this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]), \n                this.setCurrentlyOpenAdvancedFilter('eloRange').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'eloRange'}>\n                    {this.getEloRangeFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Download limit', getDownloadLimitLabel(this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]), \n                this.setCurrentlyOpenAdvancedFilter('downloadLimit').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'downloadLimit'}>\n                    {this.getDownloadLimitFilters()}\n                </Collapse>)}\n      </div>\n    }\n\n    getDownloadLimitFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]}\n            onChange={this.props.handleDownloadLimitChange}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={(val)=>val>=Constants.MAX_DOWNLOAD_LIMIT?\"All\":val}\n            step={100}\n            min={0}\n            marks={this.downloadLimitMarks}\n            max={Constants.MAX_DOWNLOAD_LIMIT}\n        />\n    }\n\n    getTimeFrameFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME]}\n            onChange={this.props.handleTimeframeChange}\n            valueLabelDisplay=\"off\"\n            valueLabelFormat={(val)=>this.props.timeframeSteps[val].label}\n            step={1}\n            marks={this.timeframeMarks}\n            min={0}\n            max={this.props.timeframeSteps.length-1}\n        />\n    }\n\n    getEloRangeFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]}\n            onChange={this.props.handleEloRangeChange}\n            valueLabelDisplay=\"off\"\n            marks={this.eloRangeMarks}\n            min={0}\n            max={Constants.MAX_ELO_RATING}\n        />\n    }\n\n    getTimeControlFilters(site){\n        let firstRow = null, middleRow = null, lastRow = null\n        let colWidth = null\n        if(site === 'lichess') {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_ULTRA_BULLET]\n            middleRow = [Constants.TIME_CONTROL_BLITZ,\n                        Constants.TIME_CONTROL_CLASSICAL]\n            lastRow = [Constants.TIME_CONTROL_RAPID,\n                        Constants.TIME_CONTROL_CORRESPONDENCE]\n            colWidth = '4'\n                    \n        } else {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_BLITZ]\n            lastRow = [Constants.TIME_CONTROL_RAPID, \n                        Constants.TIME_CONTROL_DAILY]\n            colWidth = '6'\n        }\n        return <FormControl><FormGroup><Container>\n            {this.getTimeControlFilterRow(firstRow,colWidth,'first')}\n            {middleRow?this.getTimeControlFilterRow(middleRow,colWidth,'middle'):null}\n            {this.getTimeControlFilterRow(lastRow,colWidth,'last')}\n          </Container>\n        </FormGroup></FormControl>\n      \n    }\n\n    getTimeControlFilterRow(controls,firstColumnWidth, position){\n        let clsName = 'topBottomNegativeMargin'\n        if(position === \"first\") {\n            clsName = 'bottomNegativeMargin'\n        } else if (position === \"last\") {\n            clsName = 'topNegativeMargin'\n        } \n        return <Row className={clsName}>\n            {controls.map((control) => \n            <Col sm={firstColumnWidth} key={`ctrl${control}`}>\n                \n            <FormControlLabel className = \"nomargin\"\n                control={<Checkbox checked={this.props.advancedFilters[control]} color=\"primary\" \n                onChange={this.props.handleTimeControlChange} name={control} />}\n                label={Common.TIME_CONTROL_LABELS[control]}\n          /></Col>)}</Row>\n    }\n\n    subSectionComponent(title, label, changeCallback, children) {\n        return <div className=\"pgnloadersection\">{title}: <span className=\"smallText\">[<span className=\"linkStyle\" onClick={changeCallback}>change</span>]</span>\n        <div><b>{label}</b></div>{children}\n        </div>\n    }\n\n\n    render() {\n        return this.getFilters(this.props.site)\n    }\n\n}","import * as Constants from './Constants'\n\nexport const LICHESS_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_ULTRA_BULLET,\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_CLASSICAL,\n    Constants.TIME_CONTROL_CORRESPONDENCE\n]\nexport const CHESS_DOT_COM_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_DAILY,\n]\n\nexport const TIME_CONTROL_LABELS = {\n    [Constants.TIME_CONTROL_ULTRA_BULLET]: \"Ultrabullet\",\n    [Constants.TIME_CONTROL_BULLET]: \"Bullet\",\n    [Constants.TIME_CONTROL_BLITZ]: \"Blitz\",\n    [Constants.TIME_CONTROL_RAPID]: \"Rapid\",\n    [Constants.TIME_CONTROL_CLASSICAL]: \"Classical\",\n    [Constants.TIME_CONTROL_CORRESPONDENCE]: \"Correspondence\",\n    [Constants.TIME_CONTROL_DAILY]: \"Daily\"\n}\n\nexport function trimString(str) {\n    return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nexport const DP_TABLE = {\n    \"100\":800,   \"99\":677,    \"98\":589,    \"97\":538,\n    \"96\":501,    \"95\":470,    \"94\":444,    \"93\":422,\n    \"92\":401,    \"91\":383,    \"90\":366,    \"89\":351,\n    \"88\":336,    \"87\":322,    \"86\":309,    \"85\":296,\n    \"84\":284,    \"83\":273,    \"82\":262,    \"81\":251,\n    \"80\":240,    \"79\":230,    \"78\":220,    \"77\":211,\n    \"76\":202,    \"75\":193,    \"74\":184,    \"73\":175,\n    \"72\":166,    \"71\":158,    \"70\":149,    \"69\":141,\n    \"68\":133,    \"67\":125,    \"66\":117,    \"65\":110,\n    \"64\":102,    \"63\":95,     \"62\":87,     \"61\":80,\n    \"60\":72,     \"59\":65,     \"58\":57,     \"57\":50,\n    \"56\":43,     \"55\":36,     \"54\":29,     \"53\":21,\n    \"52\":14,     \"51\":7,      \"50\":0,      \"49\":-7,\n    \"48\":-14,    \"47\":-21,    \"46\":-29,    \"45\":-36,\n    \"44\":-43,    \"43\":-50,    \"42\":-57,    \"41\":-65,\n    \"40\":-72,    \"39\":-80,    \"38\":-87,    \"37\":-95,\n    \"36\":-102,   \"35\":-110,   \"34\":-117,   \"33\":-125,\n    \"32\":-133,   \"31\":-141,   \"30\":-149,   \"29\":-158,\n    \"28\":-166,   \"27\":-175,   \"26\":-184,   \"25\":-193,\n    \"24\":-202,   \"23\":-211,   \"22\":-220,   \"21\":-230,\n    \"20\":-240,   \"19\":-251,   \"18\":-262,   \"17\":-273,\n    \"16\":-284,   \"15\":-296,   \"14\":-309,   \"13\":-322,\n    \"12\":-336,   \"11\":-351,   \"10\":-366,   \"9\":-383,\n    \"8\":-401,    \"7\":-422,    \"6\":-444,    \"5\":-470,\n    \"4\":-501,    \"3\":-538,    \"2\":-589,    \"1\":-677,\n    \"0\":-800,\n}","import * as Constants from './Constants'\n\nexport function isAdvancedFiltersEnabled(source) {\n    return source === Constants.SITE_CHESS_DOT_COM ||\n        source === Constants.SITE_LICHESS\n}\n\n\nexport function isFilterPanelEnabled(source, playerName) {\n    if(source === Constants.SITE_EVENT_DB ||\n        source === Constants.SITE_OPENING_TREE_FILE) {\n            return false\n    }\n    return !!playerName\n}\n\nexport function treeSaveDisabledReason(loadedSite, selectedSite, gamesProcessed, isDownloading){\n    if(selectedSite !== Constants.SITE_LICHESS && \n        selectedSite !== Constants.SITE_CHESS_DOT_COM) {\n        return \"Only supported for chess.com and lichess\"\n    }\n    if(loadedSite !== selectedSite || gamesProcessed<=0) {\n        return \"You need to analyze games before saving\"\n    }\n    if(isDownloading) {\n        return \"Not supported while games are loading\"\n    }\n    return ''\n}\nexport function exportFileName(source, playerName, playerColor, selectedEvent, extension) {\n    if(source === Constants.SITE_EVENT_DB) {\n        return `${selectedEvent.name}.${extension}`\n    }\n    if(playerName) {\n        return `${playerName}-${playerColor}.${extension}`\n    }\n    return `openingtree-exportedgames.${extension}`\n}","import * as Constants from './Constants'\n\nexport default class OpeningManager {\n    plys = [{pgn:'', fen:Constants.ROOT_FEN, move:null}]\n    currentIndex = 0\n    addPly(fen,move) {\n        if(this.currentIndex<this.plys.length-1 && this.plys[this.currentIndex+1].move.san === move.san) {\n            this.moveForward()\n            return\n        }\n        this.plys = this.plys.slice(0,this.currentIndex+1)\n        this.plys.push({\n            pgnAsList:this.pgnAsList(move.san),\n            fen: fen,\n            move: move\n        })\n        this.currentIndex++;\n        return this.plys[this.currentIndex]\n    }\n\n    pgnAsList(san) {\n        let pgnSoFar = this.pgnListSoFar()\n        let pgnList\n        if (!pgnSoFar) {\n            pgnList = []\n        } else {\n            pgnList = [...pgnSoFar]\n        }\n        let numPlys = this.plys.length\n        if(numPlys%2 !== 0) {\n            pgnList.push({\n                moveNumber:pgnList.length+1,\n                whitePly:san,\n                blackPly:''\n            })\n        } else {\n            let currMove = pgnList[pgnList.length-1]\n            currMove.blackPly = san\n            pgnList[pgnList.length-1] = currMove\n        }\n        return pgnList\n    }\n\n    currentMove() {\n        return Math.floor((this.currentIndex-1)/2);\n    }\n\n    pgnListSoFar(){\n        return this.plys[this.plys.length-1].pgnAsList\n    }\n\n    fen(){\n        return this.plys[this.currentIndex].fen\n    }\n\n    moveForward() {\n        return this.moveTo(this.currentIndex+1)\n    }\n    moveBack() {\n        return this.moveTo(this.currentIndex-1)\n    }\n    moveTo(index) {\n        if(index>=0 && index<this.plys.length) {\n            this.currentIndex = index\n        }\n        return this.plys[this.currentIndex]\n    }\n\n}","import React from 'react'\nimport ChessEcoCodes from 'chess-eco-codes'\nimport OpeningManager from '../app/OpeningManager'\nimport {Container, Row, Col, Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepForward, faStepBackward } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nexport default class Navigator extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.openingManager = new OpeningManager()\n        this.state = {\n            currentMove:0,\n          }      \n          window.addEventListener(\"keydown\",this.keyHandler.bind(this))\n  \n    }\n    keyHandler(e){\n        switch(e.keyCode) {\n          case 37:\n            this.previous(e, \"keyboard\")\n          break\n          case 39:\n            this.next(e, \"keyboard\")\n            break\n          default:\n            break\n\n        }\n      }\n    \n    shouldComponentUpdate(newProps) {\n        //console.log(newProps)\n        if(newProps.fen !== this.openingManager.fen()) {\n            if(newProps.move === null) {\n                this.openingManager = new OpeningManager()\n                return true\n            }\n            this.openingManager.addPly(newProps.fen, newProps.move)\n            return true\n        }\n        return true\n    }\n\n    previous(e, device) {\n        let newState = this.openingManager.moveBack()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Previous\", device?device:\"mouse\")\n    }\n\n    next(e, device) {\n        let newState = this.openingManager.moveForward()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Next\", device?device:\"mouse\")\n    }\n\n    moveTo(index) {\n        return () => {\n            let newState = this.openingManager.moveTo(index*2+1)\n            this.props.onChange(newState.fen, newState.move)\n            this.setState({currentMove:this.openingManager.currentMove()})\n            trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"move\", null, index)\n        }\n    }\n\n    render(){\n        let opening = ChessEcoCodes(this.openingManager.fen())\n        if (opening) {\n            this.opening = opening.name\n            this.openingCode = opening.code\n        }\n        if(!this.openingManager.pgnListSoFar()) {\n            return <div></div>\n        }\n        return <Container>\n            <Row>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick= {this.previous.bind(this)}><FontAwesomeIcon icon={faStepBackward} /> prev</Button> </Col>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick = {this.next.bind(this)}>next <FontAwesomeIcon icon={faStepForward} /></Button></Col></Row>\n            <Row className=\"greyText\">{this.openingCode}: {this.opening}</Row>\n            {\n                this.openingManager.pgnListSoFar().map((move, index)=>\n                    <Row key={`${move.moveNumber}`} onClick={this.moveTo(index).bind(this)} className={`navCol ${this.openingManager.currentMove() === index? 'selectedMove':''}`}>\n                        <Col sm=\"12\" className = \"navMove border\">{`${move.moveNumber}. ${move.whitePly} ${move.blackPly}`}</Col>\n                    </Row>)\n            }\n        </Container>\n    }\n}","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal, ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  ListGroup,\n  ListGroupItem,\n  NavItem, NavLink\n} from 'reactstrap'\n\nconst GlobalHeader = (props) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [modal, setModal] = useState(false);\n  const [feedbackOpen, setFeedbackOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen)\n  const toggleModal = () => setModal(!modal)\n  const toggleFeedback = () => setFeedbackOpen(!feedbackOpen)\n\n  const launch = (url) => {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <img src=\"/opening-tree-logo.png\" height=\"32px\" width=\"32px\" alt=\"Logo\"/>\n        <NavbarBrand href=\"/\">&nbsp;OpeningTree.com</NavbarBrand>\n        <NavbarToggler onClick={toggle}/>\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={launch(\"https://www.youtube.com/watch?v=AJ66-HqdpXE\")}>\"It's so powerful\" - IM Eric Rosen <span className=\"smallText\">[Watch video]</span></NavLink></NavItem>\n          </Nav>\n          <Nav className=\"ml-auto\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={toggleFeedback}>Feedback</NavLink></NavItem>\n          </Nav>\n          <UncontrolledDropdown>\n              <DropdownToggle className=\"bootNavColor\" nav caret>\n                More\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={toggleModal}>\n                  Acknowledgements\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.openingtree.com/old\")}>\n                  Old version\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={launch(\"https://lichess.org/\")}>\n                  Lichess\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.lichess4545.com/\")}>\n                  Lichess4545\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.chess.com\")}>\n                  Chess.com\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n        </Collapse>\n      </Navbar>\n      <Modal isOpen={feedbackOpen} toggle={toggleFeedback}>\n        <ModalHeader toggle={toggleFeedback}>Feedback</ModalHeader>\n        <ModalBody>\n          Your feedback is greatly appreciated. Reach out to me for feedback, suggestions, bug report or just a game of chess.\n          <ul>\n            <li>Email me: <a rel=\"noopener noreferrer\" href=\"mailto:openingtreechess@gmail.com\" target=\"_blank\">openingtreechess@gmail.com</a></li>\n            <li>Message me on reddit <a rel=\"noopener noreferrer\" href=\"https://www.reddit.com/message/compose/?to=opening_tree\" target=\"_blank\">u/opening_tree</a></li>\n            <li>lichess.org username: <a rel=\"noopener noreferrer\" href=\"https://lichess.org/@/vannooz\" target=\"_blank\">vannooz</a></li>\n            <li>chess.com username: <a rel=\"noopener noreferrer\" href=\"https://www.chess.com/member/vannooz\" target=\"_blank\">vannooz</a></li>\n          </ul>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleFeedback}>Done</Button>\n        </ModalFooter>\n      </Modal>\n\n      \n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Acknowledgements</ModalHeader>\n        <ListGroup className=\"acknowledgement\">\n        <ListGroupItem tag=\"a\" href=\"https://lichess.org/api\" target=\"_blank\" action>Lichess API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.chess.com/club/chess-com-developer-community\" target=\"_blank\" action>Chess.com API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/ruilisi/react-chessground\" target=\"_blank\" action>ChessGround</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jhlywa/chess.js\" target=\"_blank\" action>Chess.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/niklasf/eco\" target=\"_blank\" action>Eco</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jimmywarting/StreamSaver.js\" target=\"_blank\" action>StreamSaver.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/authors/google/\" target=\"_blank\" action>Icons made by google</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/\" target=\"_blank\" action>FlatIcons.com</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.freelogodesign.org\" target=\"_blank\" action>Free logo design</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/kevinludwig/pgn-parser\" target=\"_blank\" action>PGN Parser</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.npmjs.com/package/material-ui-dropzone\" target=\"_blank\" action>Dropzone</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.pgnmentor.com\" target=\"_blank\" action>PGN Mentor</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.twitch.tv/imrosen\" target=\"_blank\" action>IM Eric Rosen</ListGroupItem>\n        </ListGroup>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GlobalHeader\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport { Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Backup from '@material-ui/icons/Backup';\nimport People from '@material-ui/icons/People';\nimport Save from '@material-ui/icons/Save';\nimport Divider from '@material-ui/core/Divider';\nimport DateRange from '@material-ui/icons/DateRange';\n\nexport default class Source extends React.Component {\n    getSourceOption(source, addNumber) {\n        if (source === Constants.SITE_LICHESS) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"lichess\" className=\"siteimage\" src=\"./lichesslogo.png\" /><span className=\"sourceName\"> lichess.org </span></span>\n        } else if (source === Constants.SITE_CHESS_DOT_COM) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"chess.com\" className=\"siteimage\" src=\"./chesscomlogo.png\" /></span>\n        } else if (source === Constants.SITE_PGN_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Backup className=\"lowOpacity\"/><span className=\"sourceName\"> Upload PGN file</span></span>\n        } else if (source === Constants.SITE_EVENT_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<DateRange className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess events</span></span>\n        } else if (source === Constants.SITE_PLAYER_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<People className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess players</span></span>\n        }  else if (source === Constants.SITE_OPENING_TREE_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Save className=\"lowOpacity\"/><span className=\"sourceName\"> Openingtree save file</span></span>\n        }\n        return <span>{getNumberIcon(1, addNumber)}Select a source</span>\n    }\n\n    render() {\n        return <ExpansionPanel TransitionComponent={Collapse}\n            TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            expanded={this.props.expandedPanel === 'source'}\n            onChange={this.props.handleExpansionChange}>\n            <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n            >\n                <div>\n                    {this.getSourceOption(this.props.site, true)}\n                </div>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <RadioGroup onChange={this.props.siteChange} value={this.props.site}>\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_LICHESS} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_LICHESS)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_CHESS_DOT_COM} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_CHESS_DOT_COM)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_OPENING_TREE_FILE} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_OPENING_TREE_FILE)} />\n                    <Divider className=\"dividerMargin\"/>\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_PLAYER_DB} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_PLAYER_DB)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_EVENT_DB} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_EVENT_DB)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_PGN_FILE} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_PGN_FILE)} />\n               </RadioGroup>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n        \n    }\n}","import React from 'react'\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport { trackEvent } from '../../app/Analytics'\nimport * as Constants from '../../app/Constants'\n\nexport default class Dropzone extends React.Component{\n    handleFileChange(newFiles) {\n      trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FileSaved\", newFiles.length>0?newFiles[0].name:null)\n      this.props.filesChange(newFiles)\n    }\n    render(){\n      return (\n        <DropzoneArea \n        acceptedFiles={[]}\n        dropzoneText={this.props.dropzoneText}\n          onChange={this.handleFileChange.bind(this)}\n          dropzoneParagraphClass=\"dropzonetext\"\n          showFileNames={true}\n          useChipsForPreview={true}\n          previewChipProps={{className:\"previewChip\"}}\n          dropzoneClass=\"dropzone\"\n          filesLimit={this.props.filesLimit}\n          maxFileSize={3000000000000}\n          />\n      )  \n    }\n  } ","import SelectSearch from 'react-select-search';\nimport React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nexport default class NotableChessGames extends React.Component {\n\n    updateDetails = (value) => {\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"NotableGameSelected\", value.value)\n        this.props.onChange(value)\n    }\n    \n    renderDetails(option) {\n        return (<div>\n                <span><LazyLoadImage alt={option.name} className=\"profilePicture\" width=\"40\" height=\"40\" src={option.profile.imageUrl} /></span>\n                <div>{option.name}</div>\n                <div className=\"smallText\">{option.profile.subText}</div>\n                </div>);\n    }\n    render() {\n        if(!this.props.list) {\n            return <div className=\"lowOpacity textCenter\"><img alt=\"loading\" width='25' height='25' src=\"./spinner.gif\"/> Loading List</div>\n        } else if(!this.props.list.length) {\n            return <div className=\"lowOpacity textCenter\"> Could not fetch list</div>\n        }\n        let options = this.props.list.map(option=>{return {...option, value:option.name}})\n        return <SelectSearch\n            name=\"goatPlayers\"\n            value={this.props.selectedDetail.value}\n            options={options}\n            placeholder={this.props.placeholder}\n            renderOption={this.renderDetails}\n            onChange={this.updateDetails}\n        />\n    }\n}\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport { Button as MaterialUIButton, TextField } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Collapse from '@material-ui/core/Collapse';\nimport Dropzone from './Dropzone'\nimport NotableChessGames from './NotableChessGames';\n\nexport default class User extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName:'',\n            files:[],\n            selectedPlayer:{},\n            selectedEvent:{}\n        }\n    }\n\n    editPlayerName(event) {\n        this.setState({\n            playerName: event.target.value,\n            playerNameError:''\n        })\n    }\n\n    filesChange(files) {\n        this.setState({files:files})\n    }\n\n    notablePlayerChange(player) {\n        this.setState({\n            selectedPlayer:player})\n    }\n    notableEventChange(event) {\n        this.setState({\n            selectedEvent:event})\n    }\n\n    componentWillReceiveProps() {\n        this.setState({playerNameError:''})\n    }\n\n    validateInputDetailsSet() {\n        if(this.props.site === Constants.SITE_EVENT_DB){\n            if(!this.state.selectedEvent){\n                this.props.showError(\"Please select an event\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(!this.state.selectedPlayer){\n                this.props.showError(\"Please select a player\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_LICHESS ||\n            this.props.site === Constants.SITE_CHESS_DOT_COM) {\n                if(!this.state.playerName){\n                    this.setState({\n                        playerNameError:'Please enter a username'\n                    })\n                    return false\n                } \n        } else if(this.props.site === Constants.SITE_PGN_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload a PGN file\")\n                return false\n            }\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload an openingtree file\")\n                return false\n            }\n        } \n        return true\n    }\n    finalPlayerName(source, playerName, selectedNotablePlayer) {\n        if(source === Constants.SITE_PLAYER_DB) {\n            return selectedNotablePlayer.name\n        }\n        if(source === Constants.SITE_EVENT_DB) {\n            return ''\n        }\n        return playerName\n    }\n    setPlayerDetails() {\n         if(this.validateInputDetailsSet()) {\n            this.props.playerDetailsChange(\n                this.finalPlayerName(\n                    this.props.site, \n                    this.state.playerName,\n                    this.state.selectedPlayer), \n                this.state.files, \n                this.state.selectedEvent, \n                this.state.selectedPlayer)\n        }\n    }\n    \n    getSummary() {\n        if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(this.props.selectedPlayer && this.props.selectedPlayer.name) {\n                return <span>\n                        {getNumberIcon('done')}\n                        {this.props.selectedPlayer.profile.title}{'\\u00A0'}\n                        <b>{this.props.selectedPlayer.name}</b>\n                    </span>\n            }\n        } else if(this.props.site === Constants.SITE_LICHESS || \n            this.props.site === Constants.SITE_CHESS_DOT_COM){\n            if(this.props.playerName) {\n                return <span>{getNumberIcon('done')}User: <b>{this.props.playerName}</b></span>\n            }\n        } else if(this.props.site === Constants.SITE_PGN_FILE || \n            this.props.site === Constants.SITE_OPENING_TREE_FILE){\n            if(this.props.files.length===1) {\n                return <span>{getNumberIcon('done')}File: <b>{this.props.files[0].name}</b></span>\n            }\n            if(this.props.files.length>1) {\n                return <span>{getNumberIcon('done')}{this.props.files.length} PGN files uploaded</span>\n            }\n        } else if(this.props.site === Constants.SITE_EVENT_DB) {\n            if(this.props.selectedEvent && this.props.selectedEvent.name) {\n                return <span>{getNumberIcon('done')}{this.props.selectedEvent.name}</span>\n            }\n        }\n        return <span>{getNumberIcon(2)}Player details</span>\n    }\n\n    getPlayerNameInput(label, helperText) {\n        return <TextField\n            className=\"playernameField\" name=\"playerName\" id=\"playerNameTextBox\" \n            margin=\"dense\" onChange={this.editPlayerName.bind(this)}\n            label={label} variant=\"outlined\" value={this.state.playerName}\n            helperText={this.state.playerNameError? this.state.playerNameError:helperText}\n            error={this.state.playerNameError?true:false} onKeyUp={this.playerNameKeyUp.bind(this)}/>\n    }\n\n    playerNameKeyUp(evt) {\n        if(evt.keyCode === 13) { // enter key pressed\n            this.setPlayerDetails()\n        }\n    }\n    getGoatDBSelection(){\n        return <NotableChessGames \n            list={this.props.notablePlayers} \n            placeholder=\"Select a player\"\n            onChange={this.notablePlayerChange.bind(this)}\n            selectedDetail={this.state.selectedPlayer}/>\n    }\n    getGoatDBEventSelection(){\n        return <NotableChessGames \n            list={this.props.notableEvents} \n            placeholder=\"Select an event\"\n            onChange={this.notableEventChange.bind(this)}\n            selectedDetail={this.state.selectedEvent}/>\n    }\n\n    getPgnFIleSelection() {\n        return <div><Dropzone filesChange={this.filesChange.bind(this)} filesLimit={10}\n        dropzoneText=\"Drag and drop up to 10 pgn files here or click here to select files\"\n                />\n                {this.getPlayerNameInput('player name in PGN', 'Leave blank to load all games')}\n                </div>\n    }\n\n    getInputsToShow() {\n        if(this.props.site === Constants.SITE_PGN_FILE) {\n            return this.getPgnFIleSelection()\n        } else if (this.props.site === Constants.SITE_LICHESS) {\n            return this.getPlayerNameInput('lichess username')\n        } else if (this.props.site === Constants.SITE_CHESS_DOT_COM) {\n            return this.getPlayerNameInput('chess.com username')\n        } else if (this.props.site === Constants.SITE_EVENT_DB) {\n            return this.getGoatDBEventSelection()\n        } else if (this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.getGoatDBSelection()\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            return <Dropzone filesChange={this.filesChange.bind(this)} filesLimit={1}\n                    dropzoneText=\"Drag and drop openingtree save file here or click here to select a file\"\n                />\n        }\n        return <div/>\n    }\n\n    render() {\n        return <ExpansionPanel expanded={this.props.expandedPanel === 'user'}\n                TransitionComponent={Collapse}\n                TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n                onChange={this.props.handleExpansionChange} \n                disabled={this.props.site===''}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary()}</ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                        {this.getInputsToShow()}\n                </ExpansionPanelDetails>\n                <Divider />\n                <ExpansionPanelActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setPlayerDetails.bind(this)}>Continue</MaterialUIButton>\n                </ExpansionPanelActions></ExpansionPanel>\n            \n    }\n}","import React from 'react'\nimport { createSubObjectWithProperties, getTimeframeSteps } from '../../app/util'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport Source from './Source'\nimport User from './User'\nimport Filters from './Filters'\nimport Actions from './Actions'\nimport request from 'request'\nimport * as SitePolicy from '../../app/SitePolicy'\nimport {openingGraph} from '../../app/OpeningGraph'\n\nexport default class PGNLoader extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName: '',\n            site: '',\n            playerColor: this.props.settings.playerColor,\n            isAdvancedFiltersOpen: false,\n            isGamesSubsectionOpen: false,\n            expandedPanel: 'source',\n            notablePlayers:null,\n            notableEvents:null,\n            files:[],\n            selectedNotableEvent:{},\n            selectedNotablePlayer:{}\n\n        }\n        this.timeframeSteps = getTimeframeSteps()\n        this.state[Constants.FILTER_NAME_SELECTED_TIMEFRAME] = [0, this.timeframeSteps.length - 1]\n        this.state[Constants.FILTER_NAME_DOWNLOAD_LIMIT] = Constants.MAX_DOWNLOAD_LIMIT\n        this.state[Constants.TIME_CONTROL_ULTRA_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BLITZ] = true\n        this.state[Constants.TIME_CONTROL_RAPID] = true\n        this.state[Constants.TIME_CONTROL_CLASSICAL] = true\n        this.state[Constants.TIME_CONTROL_CORRESPONDENCE] = true\n        this.state[Constants.TIME_CONTROL_DAILY] = true\n        this.state[Constants.FILTER_NAME_RATED] = \"all\"\n        this.state[Constants.FILTER_NAME_ELO_RANGE] = [0, Constants.MAX_ELO_RATING]\n    }\n\n\n    advancedFilters() {\n        return createSubObjectWithProperties(this.state,\n            [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n            Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n            Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n            Constants.FILTER_NAME_ELO_RANGE])\n    }\n\n\n    handleExpansionChange(panel) {\n        return (event, newExpanded) => {\n            this.setState({ expandedPanel: newExpanded ? panel : false });\n        };\n    }\n\n    exportOpeningTreeObject(){\n        return {\n            object:{\n                gamesProcessed:this.props.gamesProcessed,\n                settings:this.props.settings,\n                playerName:this.state.playername,\n                site: this.state.site,\n                advancedFilters:this.advancedFilters()\n            },\n            array: [...this.props.openingGraph.graph.nodes.entries()]\n        }\n    }\n\n    importOpeningTreeObject(openingTreeSave) {\n        this.setState({\n            ...openingTreeSave.object.advancedFilters,\n            playerColor:openingTreeSave.object.settings.playerColor,\n            site:openingTreeSave.object.site,\n            playerName:openingTreeSave.object.settings.playerName\n        })\n        openingGraph.setEntries(openingTreeSave.array)\n        this.props.importCallback({\n            settings:openingTreeSave.object.settings,\n            gamesProcessed:openingTreeSave.object.gamesProcessed,\n            openingGraph:openingGraph\n        })\n    }\n\n    playerDetailsChange(playerName, files, selectedNotableEvent, selectedNotablePlayer) {\n        this.setState({\n            playerName: playerName,\n            expandedPanel:SitePolicy.isFilterPanelEnabled(this.state.site, playerName, selectedNotablePlayer)?'filters':'',\n            files:files,\n            selectedNotableEvent:selectedNotableEvent,\n            selectedNotablePlayer:selectedNotablePlayer\n        })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"PlayerNameSaved\")\n    }\n    fetchGOATGames(url, callback){\n        request.get(url, (error, response) =>{\n            if(error) {\n                this.props.showError(\"Could not fetch player list. Failed to connect to DB.\")\n                callback([])\n                return \n            }\n            let gamesDetails\n            try{\n                gamesDetails = JSON.parse(response.body).list\n            } catch (e) {\n                console.log(e)\n            }\n            if(!gamesDetails) {\n                this.props.showError(\"Failed to load games.\")\n                callback([])\n            } else {\n                callback(gamesDetails)\n            }\n        })\n    }\n\n    siteChange(event) {\n        let newSite = event.target.value\n        if(newSite === Constants.SITE_PLAYER_DB && !this.state.notablePlayers) {\n            this.fetchGOATGames('https://goatchess.github.io/list.json', (gamesDetails)=>{\n                this.setState({notablePlayers:gamesDetails})\n            })\n        }\n        if(newSite === Constants.SITE_EVENT_DB && !this.state.notableEvents) {\n            this.fetchGOATGames('https://goatevents.github.io/list.json', (gamesDetails)=>{\n                this.setState({notableEvents:gamesDetails})\n            })\n        }\n        this.setState({ site: newSite, expandedPanel:'user'})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ChangeSite\", newSite)\n    }\n\n    filtersChange(filters) {\n        this.setState({...filters, expandedPanel:''})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FitlersSaved\", this.state.site)\n    }\n\n    render() {\n        return <div><div className=\"pgnloadersection\">\n            <Source expandedPanel={this.state.expandedPanel}\n                handleExpansionChange={this.handleExpansionChange('source').bind(this)}\n                site={this.state.site} siteChange={this.siteChange.bind(this)}/>\n            <User expandedPanel={this.state.expandedPanel} playerName={this.state.playerName}\n                handleExpansionChange={this.handleExpansionChange('user').bind(this)} \n                showError={this.props.showError} files={this.state.files} notablePlayers={this.state.notablePlayers}\n                notableEvents={this.state.notableEvents} site={this.state.site} playerDetailsChange={this.playerDetailsChange.bind(this)}\n                pgnUrl={this.state.pgnUrl} selectedPlayer={this.state.selectedNotablePlayer} selectedEvent={this.state.selectedNotableEvent}/>\n            <Filters expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor}\n                handleExpansionChange={this.handleExpansionChange('filters').bind(this)}\n                site={this.state.site} playerName={this.state.playerName} advancedFilters={this.advancedFilters()}\n                timeframeSteps={this.timeframeSteps} filtersChange={this.filtersChange.bind(this)}\n                selectedNotablePlayer={this.state.selectedNotablePlayer} />\n            </div>\n            <Actions expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor} files={this.state.files}\n                playerName={this.state.playerName} site={this.state.site} advancedFilters={this.advancedFilters()}\n                notify={this.props.notify} showError={this.props.showError} onChange={this.props.onChange}\n                setDownloading={this.props.setDownloading} clear={this.props.clear} isDownloading={this.props.isDownloading}\n                switchToMovesTab={this.props.switchToMovesTab} gamesProcessed={this.props.gamesProcessed} \n                selectedNotablePlayer={this.state.selectedNotablePlayer} selectedNotableEvent={this.state.selectedNotableEvent}\n                exportOpeningTreeObject={this.exportOpeningTreeObject.bind(this)} showInfo={this.props.showInfo}\n                importOpeningTreeObject={this.importOpeningTreeObject.bind(this)}/>\n        </div>\n    }\n\n}","import React from 'react'\nimport {Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRetweet, faTrashAlt, faFastBackward, faDesktop } from '@fortawesome/free-solid-svg-icons'\nimport {Container, Row, Col} from 'reactstrap'\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\n\nexport default class SettingsView extends React.Component {\n    toggle(eventName){\n        return (()=> {\n            let newValue = this.props.settings[eventName] === Constants.PLAYER_COLOR_WHITE ? Constants.PLAYER_COLOR_BLACK:Constants.PLAYER_COLOR_WHITE\n            this.props.onChange(eventName, newValue)\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"ChangeOrientation\")\n        })\n    }\n    analyse() {\n        window.open(`https://www.lichess.org/analysis/${this.props.fen}`, '_blank');\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"AnalyzeGame\")\n\n    }\n    resetAction() {\n        this.props.reset()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Reset\")\n    }\n    clearAction() {\n        this.props.clear()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Clear\")\n    }\n\n    render() {\n        return <div>\n            <Container>\n                <Row sm=\"12\">\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.toggle('orientation')} color=\"\"><h3><FontAwesomeIcon icon={faRetweet} /></h3> Flip board</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.clearAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faTrashAlt} /></h3> Clear games</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.resetAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faFastBackward} /></h3> Starting position</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.analyse.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faDesktop} /></h3> Computer analysis</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter, TextField } from '@material-ui/core';\nimport React from 'react'\nimport {getPerformanceDetails} from '../app/util'\n\nexport default class ControlsContainer extends React.Component {\n    eatClicks(e) {\n        e.stopPropagation()\n    }\n\n    copyFen() {\n        /* Get the text field */\n        var copyText = document.getElementById(\"fenField\");\n      \n        /* Select the text field */\n        copyText.select();\n        copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n      \n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n      \n        /* Alert the copied text */\n        this.props.showInfo(\"FEN copied\");\n    }\n\n    getFenField() {\n        return this.props.simplifiedView?null:\n            <div className=\"fenDiv\">\n            <TextField\n                id=\"fenField\"\n                multiline\n                label=\"FEN\"\n                rowsMax=\"2\"\n                value={this.props.fen} \n                inputProps={{\n                    style: {fontSize: 12},\n                    spellCheck: false,\n                  }} \n                  variant=\"outlined\"\n                className=\"fenField\"\n                margin=\"dense\"\n                onClick = {this.copyFen.bind(this)}\n                /></div>\n    }\n\n      \n    render() {\n        if(!this.props.moveDetails.lastPlayedGame) {\n            return <div>{this.getFenField()}<div className = \"infoMessage\" >No data to show. Please enter a lichess or chess.com user name in the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and click \"Load\"</div>\n                </div>\n        }\n        let performanceDetails = {}\n        if(this.props.isOpen) {\n            performanceDetails = getPerformanceDetails(this.props.moveDetails.totalOpponentElo, \n                                                        this.props.moveDetails.whiteWins, \n                                                        this.props.moveDetails.draws, \n                                                        this.props.moveDetails.blackWins, \n                                                        this.props.settings.playerColor)\n        } \n\n        return <div>\n            {this.getFenField()}\n            <Table onClick={this.eatClicks}>\n            {isNaN(performanceDetails.performanceRating)?null:            <TableHead className={`performanceRatingRow${this.props.simplifiedView?\" performanceHeader\":\"\"}`}><TableRow>\n                <TableCell className=\"performanceRatingRow\"><b>Performance</b></TableCell>\n                <TableCell className=\"performanceRatingRow\"><b>{performanceDetails.performanceRating}</b></TableCell>\n                </TableRow></TableHead>}\n            <TableBody>\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Results</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.results}</TableCell>\n            </TableRow>\n            {isNaN(performanceDetails.averageElo)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Avg opponent</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.averageElo}</TableCell>\n            </TableRow>}\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Score</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.score}</TableCell>\n            </TableRow>\n            {this.props.simplifiedView || isNaN(performanceDetails.averageElo)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Rating change</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.ratingChange}</TableCell>\n            </TableRow>\n            }\n            {!this.props.simplifiedView && this.props.moveDetails.bestWin?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Best win</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.bestWin} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.bestWinGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {!this.props.simplifiedView && this.props.moveDetails.worstLoss?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Worst loss</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.worstLoss} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.worstLossGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Last played</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.removeQuestionMarksFromDate(this.props.moveDetails.lastPlayedGame.date)} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.lastPlayedGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>\n            </TableBody>\n            {this.props.simplifiedView?null:\n            <TableFooter>\n                <TableRow>\n                    <TableCell colSpan=\"2\">Calculated based on <a href=\"https://handbook.fide.com/chapter/B022017\" target=\"_blank\" rel=\"noopener noreferrer\">FIDE regulations</a></TableCell>\n                </TableRow>\n            </TableFooter>\n            }\n        </Table></div>\n    }\n\n    removeQuestionMarksFromDate(date) {\n        if(date.indexOf('?') === -1) {\n            return date\n        }\n        return date.slice(0, date.indexOf('.'))\n    }\n}","import {Progress, Popover } from \"reactstrap\"\nimport React from 'react'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faExternalLinkAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\nimport ReportControls from './ReportControls'\n\nexport default class MovesList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            openPerformanceIndex: null\n        }\n    }\n\n    move(from, to) {\n        return () => {\n            this.props.onMove(from, to)\n            trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"MoveClicked\")\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.turnColor !== this.props.turnColor) {\n            this.setState({\n                openPerformanceIndex: null,\n            })\n        }\n    }\n    togglePerformancePopover(moveIndex) {\n        return (e) => {\n            if(this.state.openPerformanceIndex !== null) {\n                this.setState({openPerformanceIndex:null})\n            } else {\n                this.setState({openPerformanceIndex: moveIndex})\n            }\n            e.stopPropagation()\n        }\n    }\n    render(){\n        if(!this.props.movesToShow) {\n            return <div className = \"infoMessage\" >No moves to show. Please select a source from the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and enter the details.</div>\n        }\n    return <div>{(this.props.gameResults && this.props.gameResults.length>0)?this.resultsTable():null}\n                {this.movesTable()}</div>\n    }\n    resultsTable() {\n        return <Table>\n            <TableBody>\n                {\n                this.props.gameResults.map(result => {\n                    let whitePlayer = this.player(result.white, result.whiteElo)\n                    let blackPlayer = this.player(result.black, result.blackElo)\n                    return <TableRow className=\"moveRow\" key = {`${result.url}`} onClick={this.props.launchGame(result)}>\n                        <TableCell>\n                            {result.result===\"1-0\"?<b>{whitePlayer}</b>:whitePlayer} {result.result} {result.result === \"0-1\"?<b>{blackPlayer}</b>:blackPlayer}\n                        </TableCell>\n                    </TableRow>\n                })}\n            </TableBody>\n        </Table>\n    }\n    player(name, elo) {\n        return `${name}${elo?`(${elo})`:''}`\n    }\n    getPopover(moveIndex) {\n        let performancePopoverOpen = this.state.openPerformanceIndex === moveIndex\n        let openMove = this.props.movesToShow[moveIndex]\n\n        return <Popover trigger=\"hover\" placement=\"right\" isOpen={performancePopoverOpen} target={`performancePopover${moveIndex}`} toggle={this.togglePerformancePopover(moveIndex)}>\n                <ReportControls moveDetails={openMove.details} simplifiedView={true} isOpen = {performancePopoverOpen} launchGame={this.props.launchGame} settings={this.props.settings}/>\n            </Popover>\n    }\n    movesTable() {\n        let hasMoves = (this.props.movesToShow && this.props.movesToShow.length>0)\n        return <Table>\n            {hasMoves?\n        <TableHead>\n        <TableRow>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Move</b></TableCell>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Games</b></TableCell>\n            <TableCell><b>Results</b></TableCell>\n        </TableRow></TableHead>  \n        :null}\n        {hasMoves?\n        <TableBody>\n        {\n        this.props.movesToShow.map((move, moveIndex) => {\n            let sampleResultWhite = this.player(move.details.lastPlayedGame.white, move.details.lastPlayedGame.whiteElo)\n            let sampleResultBlack = this.player(move.details.lastPlayedGame.black, move.details.lastPlayedGame.blackElo)\n            let sampleResult = move.details.lastPlayedGame.result\n\n            return move.details.count > 1?<TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san} </TableCell>\n                <TableCell size=\"small\" id={`performancePopover${moveIndex}`} className=\"smallCol\" onClick ={this.togglePerformancePopover(moveIndex)}>\n                    {move.details.count} <FontAwesomeIcon className=\"lowOpacity\" icon={faInfoCircle}/>\n                    {this.getPopover(moveIndex)}\n                </TableCell>\n                <TableCell>\n                    <Progress className = \"border\" multi>\n                        <Progress bar className=\"whiteMove\" value={`${move.details.whiteWins/move.details.count*100}`}>{move.details.whiteWins/move.details.count>0.1?move.details.whiteWins:''}</Progress>\n                        <Progress bar className=\"grayMove\" value={`${move.details.draws/move.details.count*100}`}>{move.details.draws/move.details.count>0.1?move.details.draws:''}</Progress>\n                        <Progress bar className=\"blackMove\" value={`${move.details.blackWins/move.details.count*100}`}>{move.details.blackWins/move.details.count>0.1?move.details.blackWins:''}</Progress>\n                    </Progress>\n                </TableCell>\n            </TableRow>:\n            <TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san}</TableCell>\n                <TableCell colSpan = \"2\">\n        {sampleResultWhite} {sampleResult} {sampleResultBlack} {<FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(move.details.lastPlayedGame)} icon={faExternalLinkAlt}/>}\n                </TableCell>\n            </TableRow>\n            }\n        )}\n    </TableBody>\n    :null}\n        <TableFooter><TableRow>\n        {this.props.settings.playerName?\n\n            hasMoves?\n                <TableCell colSpan=\"3\">\n                Showing moves that have been \n                played {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n                </TableCell>:\n                <TableCell colSpan=\"3\">\n                No moves found played by {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n                </TableCell>\n            :\n            hasMoves?\n                <TableCell colSpan=\"3\">\n                Showing all moves that have been \n                played by <b>{this.props.turnColor}</b> in \n                this position.\n                </TableCell>:                \n                <TableCell colSpan=\"3\">\n                No moves found \n                played by <b>{this.props.turnColor}</b> in \n                this position.\n                </TableCell>\n\n\n        }</TableRow></TableFooter>\n    </Table>\n    }\n}","import React from 'react'\nimport PGNLoader from './loader/PGNLoader'\nimport SettingsView from './Settings'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col,Button } from 'reactstrap';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faList, faCog, faChartBar } from '@fortawesome/free-solid-svg-icons'\nimport MovesList from './MovesList';\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\nimport ReportControls from './ReportControls'\nimport {Modal, ModalHeader, ModalFooter} from 'reactstrap'\nimport {Table, TableRow, TableBody, TableCell} from '@material-ui/core'\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n          activeTab:'user',\n          activeGame:null\n      }\n      this.toggleModal = ()=>{\n        this.setState({activeGame:null})\n      }\n    }\n    \n\n    launchGame(game) {\n      if(game.url) {\n          return (e) => {\n              e.stopPropagation()\n              window.open(game.url, '_blank');\n              trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"ViewGameExternal\")\n          }\n      }\n      return ((e) => {\n        e.stopPropagation()\n        this.setState({activeGame:game})\n      })\n    }\n\n    toggle(tab) {\n        if(this.state.activeTab !== tab) {\n            this.setState({activeTab:tab})\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS,`activeTab:${tab}`)\n        }\n    }\n    switchToUserTab() {\n      this.toggle('user')\n    }\n    switchToMovesTab() {\n      this.toggle('moves')\n    }\n\n    render(){\n        return <div>\n              <Modal isOpen={this.state.activeGame} toggle={this.toggleModal}>\n              <ModalHeader toggle={this.toggleModal}>Game details</ModalHeader>\n              {!this.state.activeGame?null:\n              <Table>\n                \n                <TableBody>\n                  {\n                    Object.entries(this.state.activeGame.headers).map((entry)=>!entry[1]?null:<TableRow className=\"performanceRatingRow\">\n                        <TableCell className=\"performanceRatingRow\">{entry[0]}</TableCell>\n                        <TableCell className=\"performanceRatingRow\">{entry[1]}</TableCell>\n                    </TableRow>\n                    )}\n                  \n                </TableBody>\n              </Table>\n              }\n              <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggleModal}>Done</Button>\n        </ModalFooter>\n              </Modal>\n            <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'user' })}\n            onClick={() => { this.toggle('user'); }}\n          >\n            <FontAwesomeIcon icon={faUser} /> {this.state.activeTab === 'user'?\"User\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'moves' })}\n            onClick={() => { this.toggle('moves'); }}\n          >\n            <FontAwesomeIcon icon={faList} /> {this.state.activeTab === 'moves'?\"Moves\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'report' })}\n            onClick={() => { this.toggle('report'); }}\n          >\n            <FontAwesomeIcon icon={faChartBar} /> {this.state.activeTab === 'report'?\"Report\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'settings' })}\n            onClick={() => { this.toggle('settings'); }}\n          >\n            <FontAwesomeIcon icon={faCog} /> {this.state.activeTab === 'settings'?\"Controls\":\"\"}\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={this.state.activeTab}>\n        <TabPane tabId=\"user\">\n            <PGNLoader \n              switchToMovesTab={this.switchToMovesTab.bind(this)} \n              clear = {this.props.clear} \n              gamesProcessed = {this.props.gamesProcessed} \n              settings = {this.props.settings} \n              onChange = {this.props.settingsChange} \n              notify = {this.props.updateProcessedGames}\n              showError = {this.props.showError}\n              showInfo = {this.props.showInfo}\n              setDownloading = {this.props.setDownloading}\n              isDownloading = {this.props.isDownloading}\n              openingGraph={this.props.openingGraph}\n              importCallback={this.props.importCallback}\n              />\n            </TabPane>\n        <TabPane tabId=\"moves\">\n            <MovesList \n              switchToUserTab={this.switchToUserTab.bind(this)} \n              movesToShow={this.props.movesToShow} \n              gameResults={this.props.gameResults}\n              onMove={this.props.onMove}\n              settings={this.props.settings}\n              turnColor={this.props.turnColor}\n              settingsChange={this.props.settingsChange}\n              launchGame = {this.launchGame.bind(this)}\n              />\n        </TabPane>\n        <TabPane tabId=\"report\">\n          <ReportControls fen={this.props.fen} simplifiedView = {false}\n            moveDetails = {this.props.openingGraph.getDetailsForFen(this.props.fen)}\n            launchGame={this.launchGame.bind(this)} settings={this.props.settings}\n            switchToUserTab={this.switchToUserTab.bind(this)} \n            isOpen = {this.state.activeTab === \"report\"}\n            showInfo = {this.props.showInfo}/>\n        </TabPane>\n        <TabPane tabId=\"settings\">\n          <Row>\n            <Col sm=\"6\">\n            <SettingsView fen={this.props.fen} settings={this.props.settings} isOpen = {true} clear = {this.props.clear} reset = {this.props.reset} onChange = {this.props.settingsChange}/>\n            \n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n        </div>\n    }\n}","import Chess from 'chess.js'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nfunction turnColor() {\n    return fullTurnName(this.chess.turn())\n}\n\nfunction fullTurnName(shortName) {\n    return shortName === 'w' ? Constants.PLAYER_COLOR_WHITE : Constants.PLAYER_COLOR_BLACK\n}\n\nfunction playerColor() {\n    return this.state.settings.playerColor\n}\n\nfunction brushes() {\n    if(this.playerColor() === this.turnColor()) {\n        return this.forBrushes\n    }\n    return this.againstBrushes\n}\n\nfunction calcMovable() {\nconst dests = {}\n    this.chess.SQUARES.forEach(s => {\n        const ms = this.chess.moves({square: s, verbose: true})\n        if (ms.length) dests[s] = ms.map(m => m.to)\n    })\n    return {\n        free: false,\n        dests,\n        color: this.turnColor()\n    }\n}\n\nfunction orientation() {\n    return this.state.settings.orientation\n}\n\nfunction onMove(from, to) {\n    const chess = this.chess\n    let move = chess.move({ from, to, promotion: 'q'})\n    this.setState({ fen: chess.fen(), lastMove: move})\n}\n\n\nfunction onMoveAction(from, to) {\n    this.onMove(from,to)\n    trackEvent(Constants.EVENT_CATEGORY_CHESSBOARD, \"Move\")\n}\n\nfunction navigateTo(fen, previousMove){\n    this.chess = new Chess(fen)\n    this.setState({fen:fen, lastMove:previousMove})\n\n}\nfunction updateProcessedGames(downloadLimit, n, openingGraph) {\n    let totalGamesProcessed = this.state.gamesProcessed+n\n    this.setState({\n    gamesProcessed: totalGamesProcessed,\n    openingGraph: openingGraph,\n    downloadingGames: (totalGamesProcessed<downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)?this.state.downloadingGames:false\n    })\n    // continue to download games if \n    // 1. we have not reached download limit OR\n    //    there is no download limit set (downloadLimit>MAX condition)\n    // 2. user did not hit stop button\n    return (totalGamesProcessed < downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)&& this.state.downloadingGames\n}\nfunction moveToShape(move) {\n    return {\n        orig:move.orig,\n                    dest: move.dest,\n                    brush: this.brushes()[move.level]\n    }\n}\n\nfunction autoShapes() {\n    var moves = this.movesToShow()\n    if(moves) {\n        var shapes = moves.map(this.moveToShape.bind(this))\n        return this.fillArray(shapes,  25)\n    }\n    return this.fillArray([], 25) // dummy arrow to clear out existing arrows\n}\n\nfunction movesToShow() {\n    if(!this.state.openingGraph.hasMoves()) {\n        return null;\n    }\n    var moves = this.state.openingGraph.movesForFen(this.chess.fen())\n    return moves?moves.sort((a,b)=>b.details.count-a.details.count):[]\n}\n\nfunction gameResults() {\n    return this.state.openingGraph.gameResultsForFen(this.chess.fen())\n}\n\nfunction fillArray(arr, len) {\n    for (var i = arr.length; i < len; i++) {\n        arr.push({'orig':'i'+i, 'dest':'i'+(i+1), brush:this.brushes()[0]});\n    }\n    return arr;\n}\n\nfunction reset() {\n    this.chess = new Chess()\n    this.setState({fen: this.chess.fen(), lastMove:null})\n}\n\nfunction clear() {\n    this.state.openingGraph.clear()\n    this.state.gamesProcessed = 0\n    this.reset()\n}\n\nfunction settingsChange(name, value) {\n    let settings = this.state.settings\n    settings[name] = value;\n    this.setState({\n        'settings':settings\n    })\n}\nfunction showError(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:\"error\"})\n    trackEvent(Constants.EVENT_CATEGORY_ERROR,\"errorShown\",\n        trackingLabel?trackingLabel:message)\n}\n\nfunction showInfo(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:\"success\"})\n    trackEvent(Constants.EVENT_CATEGORY_ERROR,\"infoShown\",\n        trackingLabel?trackingLabel:message)\n}\n\n\nfunction closeError() {\n    this.setState({message:''})\n}\n\nfunction setDownloading(val) {\n    this.setState({downloadingGames:val})\n}\n\nfunction addStateManagement(obj){\n    obj.orientation  = orientation\n    obj.turnColor = turnColor\n    obj.calcMovable = calcMovable\n    obj.onMove = onMove\n    obj.onMoveAction = onMoveAction\n    obj.autoShapes = autoShapes\n    obj.updateProcessedGames = updateProcessedGames\n    obj.settingsChange = settingsChange\n    obj.reset = reset\n    obj.clear = clear\n    obj.navigateTo = navigateTo\n    obj.playerColor = playerColor\n    obj.fillArray = fillArray\n    obj.brushes = brushes\n    obj.moveToShape = moveToShape\n    obj.movesToShow = movesToShow\n    obj.gameResults = gameResults\n    obj.showError = showError\n    obj.showInfo = showInfo\n    obj.closeError = closeError\n    obj.setDownloading = setDownloading\n}\n\nexport {addStateManagement}","import green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport {withStyles} from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles = (theme) => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction SnackbarContentWrapper(props) {\n    const {classes, className, message, onClose, variant, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nSnackbarContentWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles)(SnackbarContentWrapper);","import React from 'react'\nimport Chess from 'chess.js'\nimport Chessground from 'react-chessground'\nimport 'react-chessground/dist/styles/chessground.css'\nimport {openingGraph} from '../app/OpeningGraph'\nimport Navigator from './Navigator'\nimport GlobalHeader from './GlobalHeader'\nimport {Container, Row, Col} from 'reactstrap'\nimport ControlsContainer from './ControlsContainer'\nimport {addStateManagement} from './StateManagement'\nimport {Snackbar} from '@material-ui/core'\nimport SnackbarContentWrapper from './SnackbarContentWrapper'\nimport * as Constants from '../app/Constants'\n\nexport default class MainContainer extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.chess = new Chess()\n    addStateManagement(this)\n    this.state = {\n        fen: this.chess.fen(),\n        lastMove: null,\n        gamesProcessed:0,\n        openingGraph:openingGraph,\n        settings:{\n          playerName:'',\n          orientation:Constants.PLAYER_COLOR_WHITE,\n          playerColor:''\n        },\n        message:'',\n        downloadingGames:false\n      }\n    this.chessboardWidth = this.getChessboardWidth()\n\n    this.forBrushes = ['paleGrey', 'paleGreen', 'green']\n    this.againstBrushes = ['paleRed', 'paleRed', 'red']\n\n  }\n\n  importGameState(importState) {\n    this.setState({\n      settings:importState.settings,\n      openingGraph:importState.openingGraph,\n      gamesProcessed:importState.gamesProcessed\n    })\n  }\n  getChessboardWidth(){\n    // have to manually set the width to pixels instead of \"vw\" value\n    // this is because chessground component does not behave well with \"vw\" values\n    if (window.innerWidth<=768) {\n      return `${Math.round(window.innerWidth*95/100)}px` //95vw\n    } else if ((window.innerWidth<=1024)) {\n      return `${Math.round(window.innerWidth*40/100)}px` // 40vw\n    } else {\n      return \"512px\"\n    }\n\n  }\n\n\n  render() {\n    let lastMoveArray = this.state.lastMove ? [this.state.lastMove.from, this.state.lastMove.to] : null\n    let snackBarOpen = this.state.message?true:false\n    return <div className=\"rootView\"> \n        <GlobalHeader/>\n        <Container className=\"mainContainer\">\n          <Row><Col lg={{order:0, size:2}} xs={{order:2}}><Navigator fen = {this.state.fen} move={this.state.lastMove} onChange ={this.navigateTo.bind(this)}/>\n    </Col><Col lg=\"6\"><Chessground\n      height={this.chessboardWidth}\n      width={this.chessboardWidth}\n      orientation={this.orientation()}\n      turnColor={this.turnColor()}\n      movable={this.calcMovable()}\n      \n      lastMove={lastMoveArray}\n      fen={this.state.fen}\n      onMove={this.onMoveAction.bind(this)}\n      drawable ={{\n        enabled: true,\n        visible: true,\n        autoShapes: this.autoShapes()\n      }}\n      style={{ margin: 'auto' }}\n    />\n    </Col><Col lg=\"4\" className=\"paddingTop\"><ControlsContainer fen={this.state.fen}\n                gamesProcessed={this.state.gamesProcessed} \n                updateProcessedGames={this.updateProcessedGames.bind(this)}\n                settingsChange={this.settingsChange.bind(this)}\n                settings={this.state.settings}\n                reset={this.reset.bind(this)}\n                clear={this.clear.bind(this)}\n                movesToShow={this.movesToShow()}\n                gameResults={this.gameResults()}\n                onMove={this.onMove.bind(this)}\n                turnColor={this.turnColor()}\n                showError={this.showError.bind(this)}\n                showInfo={this.showInfo.bind(this)}\n                setDownloading={this.setDownloading.bind(this)}\n                isDownloading={this.state.downloadingGames}\n                openingGraph={this.state.openingGraph}\n                importCallback={this.importGameState.bind(this)}\n                /></Col>\n    </Row></Container>\n    <Snackbar anchorOrigin={{ vertical:'bottom', horizontal:\"left\" }} open={snackBarOpen} autoHideDuration={6000} onClose={this.closeError.bind(this)}>\n    <SnackbarContentWrapper\n                            onClose={this.closeError.bind(this)}\n                            variant={this.state.messageSeverity}\n                            message={this.state.message}\n                        />\n    </Snackbar>\n    </div>\n  }\n}\n","import ReactDOM from 'react-dom'\nimport MainContainer from './pres/MainContainer'\nimport React from 'react'\nimport {trackPageView} from './app/Analytics'\n\nReactDOM.render(<MainContainer />, document.getElementById('root'))\ntrackPageView()","import {simplifiedFen, isDateMoreRecentThan} from './util'\nimport * as Constants from './Constants'\n\nclass OpeningGraph {\n    constructor() {\n        this.graph=new Graph()\n    }\n    setEntries(arrayEntries){\n        this.graph=new Graph(arrayEntries)\n    }\n\n    hasMoves() {\n        return this.graph.nodes.size>0\n    }\n    clear() {\n        this.graph = new Graph()\n    }\n    addGameResultOnFen(fullFen, resultObject) {\n        var currNode = this.getNodeFromGraph(fullFen)\n        currNode.gameResults.push(resultObject)\n    }\n    addResultToRoot(resultObject, playerColor) {\n        var targetNode = this.getNodeFromGraph(Constants.ROOT_FEN)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject, playerColor)\n        targetNode.details = newDetails\n    }\n\n    getDetailsForFen(fullFen) {\n        return this.getNodeFromGraph(simplifiedFen(fullFen)).details\n    }\n\n    addMoveForFen(fullSourceFen, fullTargetFen, move, resultObject, playerColor) {\n        var targetNode = this.getNodeFromGraph(fullTargetFen)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject, playerColor)\n        targetNode.details = newDetails\n\n        var currNode = this.getNodeFromGraph(fullSourceFen)\n        var movePlayedBy = this.createOrGetMoveNode(currNode.playedBy, move, fullTargetFen)\n        currNode.playedByMax = Math.max(currNode.playedByMax, targetNode.details.count)\n        currNode.playedBy = movePlayedBy\n    }\n\n    getNodeFromGraph(fullFen) {\n        let fen = simplifiedFen(fullFen)\n        var currNode = this.graph.nodes.get(fen)\n        if(!currNode) {\n            currNode = new GraphNode()\n            currNode.fen = fen\n            this.graph.nodes.set(fen, currNode)\n        }\n        return currNode\n    }\n    createOrGetMoveNode(movesPlayedNode, move, fullTargetFen){\n        var movePlayed = movesPlayedNode[move.san]\n\n        if(!movePlayed) {\n            movePlayed = new GraphMove()\n            movePlayed.move = move\n            movePlayed.fen = simplifiedFen(fullTargetFen)\n            movesPlayedNode[move.san]= movePlayed\n        }\n        return movesPlayedNode\n    }\n\n    getUpdatedMoveDetails(currentMoveDetails, resultObject, playerColor) {\n        let whiteWin = 0, blackWin = 0, draw = 0, opponentElo=0, resultInt = 0;\n        if(resultObject.result === '1-0') {\n            whiteWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_WHITE? 1 : -1\n        } else if (resultObject.result === '0-1') {\n            blackWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_BLACK? 1 : -1\n        } else {\n            draw = 1\n        }\n\n        if(playerColor === Constants.PLAYER_COLOR_WHITE) {\n            opponentElo = resultObject.blackElo\n        } else {\n            opponentElo = resultObject.whiteElo\n        }\n        if(resultInt === 1) {\n            if(!currentMoveDetails.bestWin || parseInt(opponentElo)>parseInt(currentMoveDetails.bestWin)) {\n                currentMoveDetails.bestWin = opponentElo\n                currentMoveDetails.bestWinGame = resultObject\n            }\n        }\n        if(resultInt === -1) {\n            if(!currentMoveDetails.worstLoss || parseInt(opponentElo)<parseInt(currentMoveDetails.worstLoss)) {\n                currentMoveDetails.worstLoss = opponentElo\n                currentMoveDetails.worstLossGame = resultObject\n            }\n        }\n        if(!currentMoveDetails.lastPlayedGame || \n            isDateMoreRecentThan(resultObject.date, currentMoveDetails.lastPlayedGame.date)) {\n                currentMoveDetails.lastPlayedGame = resultObject\n        }\n        currentMoveDetails.count += 1\n        currentMoveDetails.blackWins += blackWin\n        currentMoveDetails.whiteWins += whiteWin\n        currentMoveDetails.draws += draw\n        currentMoveDetails.totalOpponentElo += parseInt(opponentElo)\n        return currentMoveDetails\n    }\n\n    gameResultsForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return currNode.gameResults\n        }\n        return null\n    }\n    movesForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return Array.from(Object.entries(currNode.playedBy)).map((entry)=> {\n                let gMove = entry[1]\n                let targetNode = this.graph.nodes.get(gMove.fen)\n                return {\n                    orig:gMove.move.from,\n                    dest:gMove.move.to,\n                    level:this.levelFor(targetNode.details.count, currNode.playedByMax),\n                    san:gMove.move.san,\n                    details:targetNode.details\n                }\n            })\n        }        \n        return null\n    }\n\n    levelFor(moveCount, maxCount){\n        if(maxCount <= 0 ||moveCount/maxCount > 0.8) {\n            return 2\n        }\n        if(moveCount/maxCount>0.3) {\n            return 1\n        }\n        return 0\n    }\n\n}\n\n\nclass Graph {\n    constructor(arrayEntries){\n        this.nodes = new Map()\n        if(arrayEntries) {\n            arrayEntries.forEach((entry)=> {\n                this.nodes.set(entry[0],entry[1])\n            })\n        }\n    }\n}\n\nclass GraphNode {\n    \n            fen = ''\n            playedByMax = 0 // used to keep track of how many times the most frequent move is played for ease of calculation later\n            playedBy = {}\n            gameResults = []\n            properties = {}\n            details = emptyDetails()\n}\n\nclass GraphMove {\n    fen = ''\n    move = {}\n}\n\nfunction emptyDetails() {\n    return {\n        count: 0,\n        blackWins: 0,\n        whiteWins: 0,\n        draws: 0,\n        totalOpponentElo: 0,\n        bestWin:null,\n        bestWinGame:null,\n        worstLoss:null,\n        worstLossGame:null,\n        lastPlayedGame:null\n    }\n}\n\nexport const openingGraph = new OpeningGraph()","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(gs) {return gs.map(function(g) { return g[0]})},\n      peg$c1 = function(h, c, m, r) {return [m, r]},\n      peg$c2 = function(h, c, r) {return [null, r]},\n      peg$c3 = function(h, c, mr) {return make_game(h, c, mr[0], mr[1])},\n      peg$c4 = peg$anyExpectation(),\n      peg$c5 = \"\\\"\",\n      peg$c6 = peg$literalExpectation(\"\\\"\", false),\n      peg$c7 = /^[^\"]/,\n      peg$c8 = peg$classExpectation([\"\\\"\"], true, false),\n      peg$c9 = function(str) {return str.join('')},\n      peg$c10 = /^[1-9]/,\n      peg$c11 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c12 = /^[0-9]/,\n      peg$c13 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c14 = function(a, b) {return parseInt(a+b.join(''), 10)},\n      peg$c15 = /^[A-Za-z0-9_\\-]/,\n      peg$c16 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"], \"_\", \"-\"], false, false),\n      peg$c17 = function(chars) {return chars.join('')},\n      peg$c18 = \" \",\n      peg$c19 = peg$literalExpectation(\" \", false),\n      peg$c20 = \"\\f\",\n      peg$c21 = peg$literalExpectation(\"\\f\", false),\n      peg$c22 = \"\\t\",\n      peg$c23 = peg$literalExpectation(\"\\t\", false),\n      peg$c24 = \"\\n\",\n      peg$c25 = peg$literalExpectation(\"\\n\", false),\n      peg$c26 = \"[\",\n      peg$c27 = peg$literalExpectation(\"[\", false),\n      peg$c28 = \"]\",\n      peg$c29 = peg$literalExpectation(\"]\", false),\n      peg$c30 = function(hn, hv) { return make_header(hn,hv) },\n      peg$c31 = function(hs) {return hs},\n      peg$c32 = /^[NKQRBP]/,\n      peg$c33 = peg$classExpectation([\"N\", \"K\", \"Q\", \"R\", \"B\", \"P\"], false, false),\n      peg$c34 = /^[a-h]/,\n      peg$c35 = peg$classExpectation([[\"a\", \"h\"]], false, false),\n      peg$c36 = /^[1-8]/,\n      peg$c37 = peg$classExpectation([[\"1\", \"8\"]], false, false),\n      peg$c38 = \"+\",\n      peg$c39 = peg$literalExpectation(\"+\", false),\n      peg$c40 = \"#\",\n      peg$c41 = peg$literalExpectation(\"#\", false),\n      peg$c42 = /^[x@]/,\n      peg$c43 = peg$classExpectation([\"x\", \"@\"], false, false),\n      peg$c44 = \".\",\n      peg$c45 = peg$literalExpectation(\".\", false),\n      peg$c46 = \"1-0\",\n      peg$c47 = peg$literalExpectation(\"1-0\", false),\n      peg$c48 = \"0-1\",\n      peg$c49 = peg$literalExpectation(\"0-1\", false),\n      peg$c50 = \"*\",\n      peg$c51 = peg$literalExpectation(\"*\", false),\n      peg$c52 = \"1/2-1/2\",\n      peg$c53 = peg$literalExpectation(\"1/2-1/2\", false),\n      peg$c54 = function(mn) {return mn},\n      peg$c55 = function(r, f) {return r+f},\n      peg$c56 = \"=\",\n      peg$c57 = peg$literalExpectation(\"=\", false),\n      peg$c58 = /^[QRBNK]/,\n      peg$c59 = peg$classExpectation([\"Q\", \"R\", \"B\", \"N\", \"K\"], false, false),\n      peg$c60 = \"$\",\n      peg$c61 = peg$literalExpectation(\"$\", false),\n      peg$c62 = \"!!\",\n      peg$c63 = peg$literalExpectation(\"!!\", false),\n      peg$c64 = \"??\",\n      peg$c65 = peg$literalExpectation(\"??\", false),\n      peg$c66 = \"!?\",\n      peg$c67 = peg$literalExpectation(\"!?\", false),\n      peg$c68 = \"?!\",\n      peg$c69 = peg$literalExpectation(\"?!\", false),\n      peg$c70 = \"!\",\n      peg$c71 = peg$literalExpectation(\"!\", false),\n      peg$c72 = \"?\",\n      peg$c73 = peg$literalExpectation(\"?\", false),\n      peg$c74 = /^[^}]/,\n      peg$c75 = peg$classExpectation([\"}\"], true, false),\n      peg$c76 = \"{\",\n      peg$c77 = peg$literalExpectation(\"{\", false),\n      peg$c78 = \"}\",\n      peg$c79 = peg$literalExpectation(\"}\", false),\n      peg$c80 = function(cc) {return cc.join('');},\n      peg$c81 = \"O-O-O\",\n      peg$c82 = peg$literalExpectation(\"O-O-O\", false),\n      peg$c83 = \"O-O\",\n      peg$c84 = peg$literalExpectation(\"O-O\", false),\n      peg$c85 = function(m) {return flatten(m).join('');},\n      peg$c86 = function(mn, m, n) {return n},\n      peg$c87 = function(mn, m, nags, c2) {return c2},\n      peg$c88 = function(mn, m, nags, com, r) {return r},\n      peg$c89 = function(mn, m, nags, com, ravs) {return make_move(mn, m, nags, ravs, com)},\n      peg$c90 = function(first, rest) {return first ? [first].concat(rest.map(function(m) {return m[1]})) : []},\n      peg$c91 = \"(\",\n      peg$c92 = peg$literalExpectation(\"(\", false),\n      peg$c93 = \")\",\n      peg$c94 = peg$literalExpectation(\")\", false),\n      peg$c95 = function(m, r) {return make_rav(m, r)},\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsegame();\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$parsenewline();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parsenewline();\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$parsegame();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsenewline();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsenewline();\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOF();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsegame() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseheaders();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsewhitespace();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsewhitespace();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parsemovetext();\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseresult();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c1(s1, s2, s5, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parseresult();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c2(s1, s2, s5);\n            }\n            s4 = s5;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsewhitespace();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsewhitespace();\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c3(s1, s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedouble_quote() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s0 = peg$c5;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestring() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedouble_quote();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c7.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c7.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsedouble_quote();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c9(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (peg$c10.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c12.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c12.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesymbol() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c15.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c15.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 12) {\n        s0 = peg$c20;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 9) {\n          s0 = peg$c22;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewhitespace() {\n    var s0;\n\n    s0 = peg$parsews();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsenewline();\n    }\n\n    return s0;\n  }\n\n  function peg$parsenewline() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c24;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseheader() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c26;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesymbol();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsews();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsestring();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c28;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c30(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseheaders() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseheader();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseheader();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c31(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepiece() {\n    var s0;\n\n    if (peg$c32.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserank() {\n    var s0;\n\n    if (peg$c34.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefile() {\n    var s0;\n\n    if (peg$c36.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheck() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c38;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheckmate() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s0 = peg$c40;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecapture() {\n    var s0;\n\n    if (peg$c42.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseperiod() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c44;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseresult() {\n    var s0;\n\n    if (input.substr(peg$currPos, 3) === peg$c46) {\n      s0 = peg$c46;\n      peg$currPos += 3;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c48) {\n        s0 = peg$c48;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s0 = peg$c50;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c52) {\n            s0 = peg$c52;\n            peg$currPos += 7;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c53); }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemove_number() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseperiod();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseperiod();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c54(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesquare() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parserank();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefile();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c55(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepromotion() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s1 = peg$c56;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$c58.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenag() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s2 = peg$c60;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseinteger();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsenag_alts() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c62) {\n      s0 = peg$c62;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c64) {\n        s0 = peg$c64;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c66) {\n          s0 = peg$c66;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c68) {\n            s0 = peg$c68;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c69); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 33) {\n              s0 = peg$c70;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 63) {\n                s0 = peg$c72;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c73); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecontinuation() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseperiod();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseperiod();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment_chars() {\n    var s0;\n\n    if (peg$c74.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c75); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c76;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsecomment_chars();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsecomment_chars();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c78;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c79); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c80(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepawn_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parserank();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecapture();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesquare();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepromotion();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecapture();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsesquare();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_disambiguation_half_move() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parserank();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsefile();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecapture();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesquare();\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecastle_half_move() {\n    var s0;\n\n    if (input.substr(peg$currPos, 5) === peg$c81) {\n      s0 = peg$c81;\n      peg$currPos += 5;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c82); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c83) {\n        s0 = peg$c83;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c84); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsehalf_move() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsecontinuation();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecastle_half_move();\n      if (s3 === peg$FAILED) {\n        s3 = peg$parsepiece_disambiguation_half_move();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parsepiece_half_move();\n          if (s3 === peg$FAILED) {\n            s3 = peg$parsepawn_half_move();\n          }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsecheck();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parsecheckmate();\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsenag_alts();\n          if (s5 === peg$FAILED) {\n            s5 = null;\n          }\n          if (s5 !== peg$FAILED) {\n            s2 = [s2, s3, s4, s5];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c85(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsemove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove_number();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsehalf_move();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = [];\n          s7 = peg$parsewhitespace();\n          if (s7 !== peg$FAILED) {\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parsewhitespace();\n            }\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsenag();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c86(s1, s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsenag();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c86(s1, s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsecomment();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c87(s1, s3, s4, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$currPos;\n              s8 = [];\n              s9 = peg$parsewhitespace();\n              if (s9 !== peg$FAILED) {\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parsewhitespace();\n                }\n              } else {\n                s8 = peg$FAILED;\n              }\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parserav();\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s7;\n                  s8 = peg$c88(s1, s3, s4, s5, s9);\n                  s7 = s8;\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$currPos;\n                s8 = [];\n                s9 = peg$parsewhitespace();\n                if (s9 !== peg$FAILED) {\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parsewhitespace();\n                  }\n                } else {\n                  s8 = peg$FAILED;\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parserav();\n                  if (s9 !== peg$FAILED) {\n                    peg$savedPos = s7;\n                    s8 = peg$c88(s1, s3, s4, s5, s9);\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c89(s1, s3, s4, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemovetext() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parsewhitespace();\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewhitespace();\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsemove();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parsewhitespace();\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsemove();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserav() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c91;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c92); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsemovetext();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsewhitespace();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseresult();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c93;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c94); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c95(s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n\n      function flatten(a, acc = []) {\n          for (var i = 0; i < a.length; i++) {\n              if (Array.isArray(a[i])) {\n                  flatten(a[i], acc);\n              } else {\n                  acc.push(a[i]);\n              }\n          }\n          return acc;\n      }\n      function make_header(hn,hv) {\n          var m = {};\n          m[hn] = hv;\n          return m;\n      }\n      function make_move(move_number, move, nags, ravs, comment) {\n          var m = {};\n          if (move_number) m.move_number = move_number;\n          if (move) m.move = move;\n          if (nags && nags.length) m.nags = nags;\n          if (ravs && ravs.length) m.ravs = ravs;\n          if (comment) m.comment = comment;\n          return m;\n      }\n      function make_rav(moves, result) {\n          return {\n              moves, \n              result\n          };\n      }\n      function make_game(h, c, m, r) {\n          h = h || [];\n          return {\n              headers: h.reduce((acc, x) => Object.assign(acc, x), {}),\n              comment: c,\n              moves: m || [],\n              result: r\n          };\n      }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"sourceRoot":""}