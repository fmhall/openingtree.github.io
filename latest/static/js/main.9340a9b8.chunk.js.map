{"version":3,"sources":["app/Analytics.js","app/util.js","app/Constants.js","pres/loader/Filters.js","pres/loader/TimeControlLabels.js","pres/loader/FilterLabels.js","pres/loader/AdvancedFilters.js","pres/loader/Common.js","app/OpeningGraph.js","app/OpeningManager.js","pres/Navigator.js","pres/GlobalHeader.js","pres/loader/Source.js","pres/loader/Dropzone.js","pres/loader/NotableChessGames.js","pres/loader/User.js","app/iterator/IteratorUtils.js","app/iterator/BaseUrlIterator.js","app/iterator/LichessIterator.js","app/iterator/ChessComIterator.js","app/iterator/PGNFileIterator.js","app/iterator/PGNUrlIterator.js","app/iterator/NotablePlayerIterator.js","app/PGNReader.js","pres/loader/Actions.js","pres/loader/PGNLoader.js","pres/Settings.js","pres/ReportControls.js","pres/MovesList.js","pres/ControlsContainer.js","pres/StateManagement.js","pres/MainContainer.js","index.js","app/Common.js","app/SitePolicy.js","app/PGNParser.js"],"names":["trackPageView","ReactGA","pageview","window","location","pathname","trackEvent","category","action","label","value","event","initialize","createSubObjectWithProperties","mainObject","properties","subObject","forEach","property","simplifiedFen","fen","fenComponents","split","length","getTimeControlsArray","site","timeControlState","selected","Constants","Common","filter","timeControl","monthLabels","getTimeframeSteps","steps","year","startYear","currentYear","Date","getFullYear","currentMonth","getMonth","push","toLongLabel","fromLongLabel","i","month","getSelectedTimeFrameData","timeframe","timeframeSteps","fromIndex","toIndex","fromTimeframe","toTimeframe","currentDate","fromMonth","frmYear","getYear","fromTimeStamp","getTimeStampInfoFor","fromYear","toYear","toMonth","toTimeStamp","minOrMax","getTime","getDate","getDaysInMonth","getPerformanceDetails","totalElo","white","draws","black","playerColor","totalGames","averageElo","Math","round","playerWins","playerLosses","score","scorePercentage","ratingChange","results","performanceRating","Number","isInteger","toFixed","abs","isOpponentEloInSelectedRange","elo","range","isDateMoreRecentThan","date","than","TIME_CONTROL_ULTRA_BULLET","TIME_CONTROL_BULLET","TIME_CONTROL_BLITZ","TIME_CONTROL_RAPID","TIME_CONTROL_CLASSICAL","TIME_CONTROL_CORRESPONDENCE","TIME_CONTROL_DAILY","FILTER_NAME_RATED","FILTER_NAME_SELECTED_TIMEFRAME","FILTER_NAME_DOWNLOAD_LIMIT","FILTER_NAME_ELO_RANGE","SITE_LICHESS","SITE_CHESS_DOT_COM","SITE_PGN_FILE","SITE_EVENT_DB","SITE_PLAYER_DB","SITE_OPENING_TREE_FILE","MAX_DOWNLOAD_LIMIT","MAX_ELO_RATING","EVENT_CATEGORY_PGN_LOADER","EVENT_CATEGORY_MOVES_LIST","EVENT_CATEGORY_CONTROLS","EVENT_CATEGORY_NAVIGATOR","EVENT_CATEGORY_CHESSBOARD","EVENT_CATEGORY_ERROR","ROOT_FEN","PLAYER_COLOR_WHITE","PLAYER_COLOR_BLACK","LOADER_ANIMATION_DURATION_MS","User","props","state","isAdvancedFiltersOpen","filtersSet","Object","assign","advancedFilters","defaultAdvancedFilters","this","rated","setState","newState","target","SitePolicy","setImmediate","setFilters","bind","name","checked","newValue","filtersChange","isDisabled","getNumberIcon","areAdvancedFiltersApplied","className","entries","key","playerName","selectedNotablePlayer","expanded","expandedPanel","TransitionComponent","MuiCollapse","TransitionProps","timeout","onChange","handleExpansionChange","disabled","expandIcon","getSummary","playerColorChange","control","color","onClick","toggleState","icon","faCaretUp","faCaretDown","isOpen","toggleRated","handleTimeControlChange","handleTimeframeChange","handleEloRangeChange","handleDownloadLimitChange","size","React","Component","timeClasses","selectedTimeControls","unselectedTimeControls","includesAll","arr","subArray","every","v","includes","getTimeControlLabel","timeClass","map","join","lichessTimeControlLabel","AdvancedFilters","currentlyOpenAdvancedFilter","timeframeMarks","downloadLimitMarks","eloRangeMarks","filterName","subSectionComponent","setCurrentlyOpenAdvancedFilter","Collapse","getTimeControlFilters","getTimeFrameFilters","selectedEloRange","getEloRangeFilters","downloadLimit","getDownloadLimitFilters","Slider","valueLabelDisplay","valueLabelFormat","val","step","min","marks","max","firstRow","middleRow","lastRow","colWidth","FormControl","FormGroup","Container","getTimeControlFilterRow","controls","firstColumnWidth","position","clsName","Row","Col","sm","FormControlLabel","Checkbox","title","changeCallback","children","getFilters","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","display","margin","MuiExpansionPanel","n","src","height","OpeningGraph","graph","Graph","nodes","fullFen","resultObject","getNodeFromGraph","gameResults","targetNode","newDetails","getUpdatedMoveDetails","details","fullSourceFen","fullTargetFen","move","currNode","movePlayedBy","createOrGetMoveNode","playedBy","playedByMax","count","get","GraphNode","set","movesPlayedNode","movePlayed","san","GraphMove","currentMoveDetails","whiteWin","blackWin","draw","opponentElo","resultInt","result","blackElo","whiteElo","bestWin","parseInt","bestWinGame","worstLoss","worstLossGame","lastPlayedGame","blackWins","whiteWins","totalOpponentElo","Array","from","entry","gMove","orig","dest","to","level","levelFor","moveCount","maxCount","Map","openingGraph","OpeningManager","plys","pgn","currentIndex","slice","pgnAsList","moveForward","pgnList","pgnSoFar","pgnListSoFar","moveNumber","whitePly","blackPly","currMove","floor","moveTo","index","Navigator","openingManager","currentMove","addEventListener","keyHandler","e","keyCode","previous","next","newProps","addPly","device","moveBack","opening","ChessEcoCodes","openingCode","code","lg","Button","faStepBackward","faStepForward","GlobalHeader","useState","setIsOpen","modal","setModal","toggleModal","launch","url","open","Navbar","light","expand","width","alt","NavbarBrand","href","NavbarToggler","navbar","Nav","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","divider","Modal","toggle","ModalHeader","ListGroup","ListGroupItem","tag","ModalFooter","Source","source","addNumber","ExpansionPanelSummary","aria-controls","id","getSourceOption","ExpansionPanelDetails","RadioGroup","siteChange","Radio","Divider","Dropzone","acceptedFiles","dropzoneText","filesChange","dropzoneParagraphClass","showFileNames","useChipsForPreview","previewChipProps","dropzoneClass","filesLimit","maxFileSize","NotableChessGames","updateDetails","option","profile","imageUrl","subText","list","options","selectedDetail","placeholder","renderOption","renderDetails","files","selectedPlayer","selectedEvent","playerNameError","player","showError","validateInputDetailsSet","playerDetailsChange","finalPlayerName","helperText","TextField","editPlayerName","variant","error","notablePlayers","notablePlayerChange","notableEvents","notableEventChange","getPlayerNameInput","getPgnFIleSelection","getGoatDBEventSelection","getGoatDBSelection","getInputsToShow","ExpansionPanelActions","setPlayerDetails","normalizePGN","pgnString","dataString","normalizeNewLine","replace","BaseUrlIterator","shouldNormalizePGN","responseCodeCallback","errorCallback","dataCallback","endCallback","remainingBody","requestObject","request","json","on","response","statusCode","data","newBody","toString","lastValidPGN","lastIndexOf","body","callDataCallback","abort","LichessIterator","ready","playerNameFilter","encodeURIComponent","colorFilter","ratedFilter","selectedTimeFrameData","timeSinceFilter","timeUntilFilter","perfFilter","responseCode","pgnStringArray","parsedPGNs","parse","console","log","headers","Variant","BlackElo","WhiteElo","ChessComIterator","chessAPI","ChessWebAPI","queue","pendingRequests","parseGames","archiveResponse","games","game","rules","username","toLowerCase","ratedMode","time_class","rating","dequeue","fetchAllGames","responseBody","archives","reverse","archiveUrl","components","archiveMonth","archiveYear","shouldFetchGamesFromArchive","dispatch","getPlayerCompleteMonthlyArchives","jsonBody","JSON","reader","FileReader","playerColorHeaderName","lowerCasePlayerName","onload","evt","parsedPGN","playerColorHeaderValue","onerror","onloadend","readAsText","PGNUrlIterator","lowerCasePlayerNames","NotablePlayerIterator","lowerCaseAliases","pgnAliases","alias","pgnUrl","PGNReader","pendingGames","pendingDownloads","streamsaver","mitm","fileWriter","close","header","moves","moveObject","selectedNotableEvent","shouldDownloadToFile","notify","stopDownloading","continueProcessingGames","fileStream","createWriteStream","getWriter","encoder","TextEncoder","processor","write","encode","getPgnString","then","setTimeout","parsePGNTimed","PGNFileIterator","pgnArray","move_number","chess","Chess","gameResult","element","sourceFen","sloppy","targetFen","addMoveForFen","addGameResultOnFen","addResultToRoot","Link","Site","White","Black","Actions","unload","pgnReader","isGamesSubsectionOpen","removeEventListener","fetchPGNFromSite","readPgn","clear","setDownloading","style","load","startIcon","disableElevation","download","gamesProcessed","isDownloading","stopDownloadingAction","switchToMovesTab","faList","Fade","mainComponent","in","PGNLoader","settings","panel","newExpanded","callback","gamesDetails","newSite","fetchGOATGames","filters","Filters","SettingsView","eventName","reset","faRetweet","clearAction","faTrashAlt","resetAction","faFastBackward","analyse","faDesktop","ControlsContainer","stopPropagation","copyText","document","getElementById","select","setSelectionRange","execCommand","showInfo","simplifiedView","multiline","rowsMax","inputProps","fontSize","spellCheck","copyFen","moveDetails","getFenField","switchToUserTab","faUser","performanceDetails","Table","eatClicks","isNaN","TableHead","TableRow","TableCell","TableBody","launchGame","faExternalLinkAlt","removeQuestionMarksFromDate","TableFooter","colSpan","rel","indexOf","MovesList","openPerformanceIndex","onMove","prevProps","prevState","turnColor","moveIndex","movesToShow","resultsTable","movesTable","whitePlayer","blackPlayer","performancePopoverOpen","openMove","Popover","trigger","placement","togglePerformancePopover","hasMoves","sampleResultWhite","sampleResultBlack","sampleResult","faInfoCircle","getPopover","Progress","multi","bar","activeTab","activeGame","tab","tabs","NavItem","NavLink","classnames","active","faChartBar","faCog","TabContent","TabPane","tabId","settingsChange","updateProcessedGames","getDetailsForFen","turn","brushes","forBrushes","againstBrushes","calcMovable","dests","SQUARES","s","ms","square","verbose","m","free","orientation","promotion","lastMove","onMoveAction","navigateTo","previousMove","totalGamesProcessed","downloadingGames","moveToShape","brush","autoShapes","shapes","fillArray","movesForFen","sort","a","b","gameResultsForFen","len","message","trackingLabel","messageSeverity","closeError","MainContainer","obj","chessboardWidth","getChessboardWidth","innerWidth","lastMoveArray","snackBarOpen","order","xs","movable","drawable","enabled","visible","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","ReactDOM","render","LICHESS_TIME_CONTROLS","CHESS_DOT_COM_TIME_CONTROLS","TIME_CONTROL_LABELS","DP_TABLE","isAdvancedFiltersEnabled","isFilterPanelEnabled","exportFileName","peg$SyntaxError","expected","found","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","parts","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toUpperCase","j","descriptions","type","describeExpected","describeFound","module","exports","SyntaxError","input","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","h","c","mr","r","reduce","acc","x","comment","make_game","peg$c4","peg$c6","peg$literalExpectation","peg$c7","peg$c8","peg$classExpectation","peg$c10","peg$c11","peg$c12","peg$c13","peg$c15","peg$c16","peg$c17","chars","peg$c19","peg$c21","peg$c23","peg$c25","peg$c27","peg$c29","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c39","peg$c41","peg$c42","peg$c43","peg$c45","peg$c47","peg$c49","peg$c51","peg$c53","peg$c57","peg$c58","peg$c59","peg$c61","peg$c63","peg$c65","peg$c67","peg$c69","peg$c71","peg$c73","peg$c74","peg$c75","peg$c77","peg$c79","peg$c82","peg$c84","peg$c85","flatten","isArray","peg$c86","mn","peg$c88","nags","com","peg$c92","peg$c94","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","s2","s3","s4","s5","peg$parsegame","peg$parsenewline","charAt","peg$parseEOF","g","s6","s7","peg$parseheader","peg$parseheaders","peg$parsecomment","peg$parsewhitespace","peg$parsemovetext","peg$parseresult","peg$c2","peg$parsedouble_quote","peg$parseinteger","test","peg$parsews","peg$parsesymbol","peg$parsestring","hn","hv","make_header","peg$parsepiece","peg$parserank","peg$parsefile","peg$parsecapture","peg$parseperiod","substr","peg$parsesquare","peg$parsenag","peg$parsecomment_chars","peg$parsepawn_half_move","peg$parsepromotion","peg$parsehalf_move","peg$parsecontinuation","peg$parsecastle_half_move","peg$parsepiece_disambiguation_half_move","peg$parsepiece_half_move","peg$parsecheck","peg$parsecheckmate","peg$parsenag_alts","peg$parsemove","s8","s9","peg$parsemove_number","peg$parserav","ravs","make_move","first","rest","concat"],"mappings":"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","file":"static/js/main.9340a9b8.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\nReactGA.initialize('UA-159149755-1');\n\nexport function trackPageView() {\n    ReactGA.pageview(window.location.pathname);\n}\n\nexport function trackEvent(category, action, label, value) {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n        value: value\n      })\n}","import * as Constants from '../app/Constants'\nimport * as Common from '../app/Common'\n\nexport function createSubObjectWithProperties(mainObject, properties) {\n    let subObject = {}\n    properties.forEach(property => {\n        subObject[property] = mainObject[property]\n    });\n    return subObject\n}\nexport function simplifiedFen(fen) {\n    let fenComponents = fen.split(' ')\n    if(fenComponents.length <=4) {\n        return fen\n    }\n    //exclude move and halfMove components\n    return `${fenComponents[0]} ${fenComponents[1]} ${fenComponents[2]}`\n}\n\nexport function getTimeControlsArray(site,timeControlState, selected) {\n    let allTimeControls = site === Constants.SITE_LICHESS ? \n        Common.LICHESS_TIME_CONTROLS : Common.CHESS_DOT_COM_TIME_CONTROLS\n    return allTimeControls.filter((timeControl)=>!!timeControlState[timeControl] === selected)\n}\nlet monthLabels = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n]\nexport function getTimeframeSteps() {\n    let steps = [{\n        year:2007,\n        value:0\n    }]\n    let value = 1;\n    let startYear = 2010\n    let currentYear = new Date().getFullYear()\n    let currentMonth = new Date().getMonth()\n    while(startYear < currentYear-1) {\n        steps.push({\n            toLongLabel:`${monthLabels[11]} ${startYear}`,\n            fromLongLabel:`${monthLabels[0]} ${startYear}`,\n            year:startYear,\n            value:value\n        })\n        startYear++\n        value++\n    }\n    for(let i=11;i>0;i--) {\n\n        let month = (currentMonth+12-i)%12\n        let year = month<currentMonth?currentYear:currentYear-1\n        steps.push({\n            fromLongLabel: `${monthLabels[month]} ${year}`,\n            toLongLabel: `${monthLabels[month]} ${year}`,\n            month:month,\n            year: year,\n            value:value\n        })\n        value++\n    }\n    steps.push({\n        month:12,\n        year: currentYear,\n        value:value\n    })\n    return steps\n}\n\nexport function getSelectedTimeFrameData(timeframe, timeframeSteps) {\n    let fromIndex = timeframe[0]\n    let toIndex = timeframe[1]\n    let fromTimeframe = timeframeSteps[fromIndex]\n    let toTimeframe = timeframeSteps[toIndex]\n    \n    if(fromIndex === timeframeSteps.length-1 && toIndex === timeframeSteps.length-1) {\n        let currentDate = new Date()\n        return {\n            label:\"Current month\",\n            fromMonth:currentDate.getMonth(),\n            frmYear:currentDate.getYear(),\n            fromTimeStamp:getTimeStampInfoFor(currentDate.getMonth(), currentDate.getYear(), \"min\")\n        }\n    }\n    if(fromIndex === 0 && toIndex === 0) {\n        return {label:\"Anytime\"}\n    }\n    if(fromIndex === 0 && toIndex === timeframeSteps.length-1) {\n        return {label:\"Anytime\"}\n    }\n    if(toIndex === timeframeSteps.length-1) {\n        let month = fromTimeframe.month ? fromTimeframe.month : 0\n        return {\n            label:`Since ${fromTimeframe.fromLongLabel}`,\n            fromYear: fromTimeframe.year,\n            fromMonth: month,\n            fromTimeStamp: getTimeStampInfoFor(month, fromTimeframe.year, \"min\")\n        }\n    }\n    if(fromIndex === 0) {\n        let month = toTimeframe.month ? toTimeframe.month : 11\n        return {\n            label:`Until ${toTimeframe.toLongLabel}`,\n            toYear: toTimeframe.year,\n            toMonth: month,\n            toTimeStamp: getTimeStampInfoFor(month, toTimeframe.year, \"max\")\n        }\n    }\n    let fromMonth = fromTimeframe.month ? fromTimeframe.month : 0\n    let toMonth = toTimeframe.month ? toTimeframe.month : 11\n    return {\n        label:`From ${fromTimeframe.fromLongLabel} to ${toTimeframe.toLongLabel}`,\n        fromYear: fromTimeframe.year,\n        fromMonth: fromMonth,\n        fromTimeStamp: getTimeStampInfoFor(fromMonth, fromTimeframe.year, \"min\"),\n        toYear: toTimeframe.year,\n        toMonth: toMonth,\n        toTimeStamp: getTimeStampInfoFor(toMonth, toTimeframe.year, \"max\")\n    }\n}\n\nfunction getTimeStampInfoFor(month, year, minOrMax) {\n    if(minOrMax === \"min\") {\n        return new Date(year, month).getTime()\n    } else {\n        return new Date(year,month,getDaysInMonth(year, month)).getTime()\n    }\n}\n\nfunction getDaysInMonth(year,month) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\nexport function getPerformanceDetails(totalElo, white, draws, black, playerColor) {\n    let totalGames = white + draws + black\n    let averageElo = Math.round(totalElo/totalGames)\n    let playerWins = playerColor === Constants.PLAYER_COLOR_WHITE?white:black\n    let playerLosses = playerColor !== Constants.PLAYER_COLOR_WHITE?white:black\n    let score = playerWins+(draws/2)\n    let scorePercentage = Math.round(score*100/totalGames)\n    let ratingChange = Common.DP_TABLE[scorePercentage]\n    return {\n        results:`+${playerWins}-${playerLosses}=${draws}`,\n        performanceRating:averageElo+ratingChange,\n        averageElo: averageElo,\n        score:`${Number.isInteger(score)?score:score.toFixed(1)}/${totalGames}`,\n        ratingChange:`${ratingChange===0?'':(ratingChange>0?'+':'-')}${Math.abs(ratingChange)}`\n    }\n}\n\nexport function isOpponentEloInSelectedRange(elo, range) {\n    if(range[1]===Constants.MAX_ELO_RATING) {\n        return elo>=range[0]\n    }\n    return elo<=range[1] && elo>=range[0]\n}\n\nexport function isDateMoreRecentThan(date, than) {\n    // give priority to game which has a date\n    if(!than) {\n        return false\n    }\n    if(!date) {\n        return true\n    } \n    return new Date(date)>new Date(than)\n}","export const TIME_CONTROL_ULTRA_BULLET = \"ultraBullet\"\nexport const TIME_CONTROL_BULLET = \"bullet\"\nexport const TIME_CONTROL_BLITZ = \"blitz\"\nexport const TIME_CONTROL_RAPID = \"rapid\"\nexport const TIME_CONTROL_CLASSICAL = \"classical\"\nexport const TIME_CONTROL_CORRESPONDENCE = \"correspondence\"\nexport const TIME_CONTROL_DAILY = \"daily\"\nexport const FILTER_NAME_RATED = \"rated\"\nexport const FILTER_NAME_SELECTED_TIMEFRAME = \"selectedTimeframe\"\nexport const FILTER_NAME_DOWNLOAD_LIMIT = \"downloadLimit\"\nexport const FILTER_NAME_ELO_RANGE = \"eloRange\"\n\nexport const SITE_LICHESS = \"lichess\"\nexport const SITE_CHESS_DOT_COM = \"chesscom\"\nexport const SITE_PGN_FILE = \"pgnfile\"\nexport const SITE_EVENT_DB = \"eventdb\"\nexport const SITE_PLAYER_DB = \"playerdb\"\nexport const SITE_OPENING_TREE_FILE = \"opntfile\"\n\nexport const MAX_DOWNLOAD_LIMIT = 2000\nexport const MAX_ELO_RATING = 3000\n\nexport const EVENT_CATEGORY_PGN_LOADER = \"loader\"\nexport const EVENT_CATEGORY_MOVES_LIST = \"moves\"\nexport const EVENT_CATEGORY_CONTROLS = \"controls\"\nexport const EVENT_CATEGORY_NAVIGATOR = \"navigator\"\nexport const EVENT_CATEGORY_CHESSBOARD = \"chessboard\"\nexport const EVENT_CATEGORY_ERROR = \"error\"\n\nexport const ROOT_FEN = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n\nexport const PLAYER_COLOR_WHITE = 'white'\nexport const PLAYER_COLOR_BLACK = 'black'\n\nexport const LOADER_ANIMATION_DURATION_MS = 500","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport { Button, Collapse } from 'reactstrap'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport { faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\nimport AdvancedFilters from './AdvancedFilters'\nimport {advancedFilters} from './Common'\nimport MuiCollapse from '@material-ui/core/Collapse';\nimport * as SitePolicy from '../../app/SitePolicy'\nimport { Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\n\nexport default class User extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerColor: this.props.playerColor,\n            isAdvancedFiltersOpen: false,\n            filtersSet:false,\n        }\n        this.timeframeSteps=this.props.timeframeSteps\n        Object.assign(this.state, this.props.advancedFilters)\n        this.defaultAdvancedFilters = this.props.advancedFilters\n    }\n\n    toggleRated() {\n        if (this.state.rated === 'all') {\n            this.setState({ rated: 'rated' })\n        } else if (this.state.rated === 'rated') {\n            this.setState({ rated: 'casual' })\n        } else {\n            this.setState({ rated: 'all' })\n        }\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", \"rated\")\n    }\n    toggleState(property) {\n        return () => {\n            let newState = {}\n            newState[property] = !this.state[property]\n            this.setState(newState)\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ToggleAdvancedFilters\", this.state.site)\n        }\n    }\n    playerColorChange(event) {\n        let playerColor = event.target.value\n        this.setState({ playerColor: playerColor })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ColorChange\", playerColor)\n        if(!SitePolicy.isAdvancedFiltersEnabled(this.props.site)) {\n            setImmediate(this.setFilters.bind(this))\n        }\n}\n    handleTimeControlChange(event) {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n    handleTimeframeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_SELECTED_TIMEFRAME]: newValue });\n    }\n    handleEloRangeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_ELO_RANGE]: newValue });\n    }\n    handleDownloadLimitChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_DOWNLOAD_LIMIT]: newValue });\n    }\n\n    setFilters(){\n        this.setState({filtersSet:true})\n        this.props.filtersChange(this.state)\n    }\n    getSummary(isDisabled) {\n        if(this.state.filtersSet && !isDisabled) {\n            return <span>\n                {getNumberIcon('done')}\n                Color: <b>{this.props.playerColor===Constants.PLAYER_COLOR_WHITE?\"White\":\"Black\"} </b>\n                {this.areAdvancedFiltersApplied()?<span className=\"smallText\">(Filters applied)</span>:null}</span>\n\n        }\n        return <span>{getNumberIcon(3)} Color and filters</span>\n    }\n    areAdvancedFiltersApplied(){\n        for (let [key, value] of Object.entries(this.defaultAdvancedFilters)) {\n            if(this.props.advancedFilters[key] !== value) {\n                return true\n            } \n        }\n        return false\n    }\n    render(){\n        let isDisabled = !SitePolicy.isFilterPanelEnabled(this.props.site, this.props.playerName, this.props.selectedNotablePlayer)\n        return <ExpansionPanel expanded={this.props.expandedPanel === 'filters'}\n                    TransitionComponent={MuiCollapse}\n                    TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            onChange={this.props.handleExpansionChange}\n            disabled={isDisabled}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary(isDisabled)}</ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <div className=\"pgnloaderfirstsection\">\n                    Games where <b>{this.props.playerName}</b> is playing as:\n                    <RadioGroup onChange={this.playerColorChange.bind(this)}>\n                        <FormControlLabel className=\"whitelabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_WHITE} label={this.state.playerColor === Constants.PLAYER_COLOR_WHITE?<b>White</b>:\"White\"}/>\n                        <FormControlLabel className=\"blacklabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_BLACK} label={this.state.playerColor === Constants.PLAYER_COLOR_BLACK?<b>Black</b>:\"Black\"}/>\n                    </RadioGroup>\n                </div>\n                {SitePolicy.isAdvancedFiltersEnabled(this.props.site)?<div className=\"pgnloadersection\"><span className=\"linkStyle\" onClick={this.toggleState('isAdvancedFiltersOpen').bind(this)}>Advanced filters <FontAwesomeIcon icon={this.state.isAdvancedFiltersOpen ? faCaretUp : faCaretDown} /></span>\n                    <Collapse isOpen={this.state.isAdvancedFiltersOpen}>\n                            <AdvancedFilters\n                                site={this.props.site}\n                                toggleRated={this.toggleRated.bind(this)}\n                                handleTimeControlChange={this.handleTimeControlChange.bind(this)}\n                                handleTimeframeChange={this.handleTimeframeChange.bind(this)}\n                                handleEloRangeChange={this.handleEloRangeChange.bind(this)}\n                                timeframeSteps={this.timeframeSteps}\n                                handleDownloadLimitChange={this.handleDownloadLimitChange.bind(this)}\n                                advancedFilters={advancedFilters(this.state)}\n                            />\n                    </Collapse>\n                </div>:null}\n                </ExpansionPanelDetails>\n                <Divider />\n                <ExpansionPanelActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setFilters.bind(this)}>Save</MaterialUIButton>\n                </ExpansionPanelActions></ExpansionPanel>\n    \n    }\n}","import * as Constants from '../../app/Constants'\nimport * as Common from '../../app/Common'\nimport {getTimeControlsArray} from '../../app/util'\n\nlet timeClasses = [\n    {\n        label:\"Fast time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    },\n    {\n        label:\"Slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ]\n    },\n    {\n        label:\"Reasonable time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET\n        ]\n    },\n    {\n        label:\"Exclude slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    }\n]\n        \n\n\nexport function timeControlLabel(site, timeControlState) {\n    let selectedTimeControls = getTimeControlsArray(site, timeControlState, true)\n    let unselectedTimeControls = getTimeControlsArray(site, timeControlState, false)\n    if(unselectedTimeControls.length === 0 || selectedTimeControls.length === 0) {\n        return \"All time controls\"\n    }\n    if(selectedTimeControls.length === 1) {\n        return Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]\n    }\n    if(unselectedTimeControls.length === 1) {\n        return `All except ${Common.TIME_CONTROL_LABELS[unselectedTimeControls[0]]}`\n    }\n    if(selectedTimeControls.length === 2) {\n        return `${Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]} and ${Common.TIME_CONTROL_LABELS[selectedTimeControls[1]]}`\n    }\n\n    return lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls)\n}\n\nfunction lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls) {\n    let timeClass = timeClasses.filter(\n        (timeClass) => {\n            return includesAll(unselectedTimeControls,timeClass.unselectedTimeControls)\n                && includesAll(selectedTimeControls,timeClass.selectedTimeControls)\n    })\n    if(timeClass.length) {\n        return timeClass[0].label\n    } \n    return selectedTimeControls.map(control=>Common.TIME_CONTROL_LABELS[control]).join(', ')\n}\n\nfunction includesAll(arr, subArray) {\n    return subArray.every(v => arr.includes(v));\n}\n","import {timeControlLabel} from './TimeControlLabels'\nimport {getSelectedTimeFrameData} from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const getTimeControlLabel = timeControlLabel\n\nexport function getRatedLabel(rated) {\n    if(rated === 'all') {\n        return \"Rated and casual\"\n    } else if (rated === 'rated') {\n        return \"Rated only\"\n    } else if (rated === 'casual') {\n        return \"Casual only\"\n    }\n}\n\nexport function getWhenPlayedLabel(timeframe, timeframeSteps) {\n    return getSelectedTimeFrameData(timeframe, timeframeSteps).label\n}\n\nexport function getELORangeLabel(selectedEloRange) {\n    if(selectedEloRange[0] === 0 && selectedEloRange[1]===Constants.MAX_ELO_RATING) {\n        return \"All elo ratings\"\n    } else if (selectedEloRange[0] === 0) {\n        return `Below ${selectedEloRange[1]}`\n    } else if (selectedEloRange[1] === Constants.MAX_ELO_RATING) {\n        return `Above ${selectedEloRange[0]}`\n    } else {\n        return `Between ${selectedEloRange[0]} and ${selectedEloRange[1]}`\n    }\n}\nexport function getDownloadLimitLabel(downloadLimit) {\n    return downloadLimit>= Constants.MAX_DOWNLOAD_LIMIT?\"No limit\":`${downloadLimit} games`\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport React from 'react'\nimport {Collapse, Container, Row, Col} from 'reactstrap'\nimport { FormControlLabel,Slider } from '@material-ui/core';\nimport * as Constants from '../../app/Constants'\nimport {getTimeControlLabel, getELORangeLabel, getRatedLabel, getWhenPlayedLabel, getDownloadLimitLabel} from './FilterLabels'\nimport * as Common from '../../app/Common'\nimport {trackEvent} from '../../app/Analytics'\n\nexport default class AdvancedFilters extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentlyOpenAdvancedFilter:'',\n        }\n        this.timeframeMarks=[\n            {\n                value:0,\n                label:\"Big bang\"\n            }, {\n                value:props.timeframeSteps.length-1,\n                label:\"Now\"\n            }]\n        this.downloadLimitMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_DOWNLOAD_LIMIT,\n                label:`No limit`\n            }]\n        this.eloRangeMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_ELO_RATING,\n                label:`No limit`\n            }]\n    \n    }\n    setCurrentlyOpenAdvancedFilter(filterName) {\n        return () => {\n            if(this.state.currentlyOpenAdvancedFilter === filterName) {\n                //close if already open\n                filterName = ''\n            }\n            this.setState({currentlyOpenAdvancedFilter:filterName})\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", filterName)\n        }\n    }\n\n    getFilters(site){\n        return <div>\n            {this.subSectionComponent('Mode', getRatedLabel(this.props.advancedFilters.rated), this.props.toggleRated)}\n            {this.subSectionComponent('Time control', getTimeControlLabel(this.props.site, this.props.advancedFilters), \n                    this.setCurrentlyOpenAdvancedFilter('timeControl').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'timeControl'}>\n                    {this.getTimeControlFilters(site, 4)}\n                </Collapse>\n            )}\n            {this.subSectionComponent('When played', getWhenPlayedLabel(this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], this.props.timeframeSteps), \n                this.setCurrentlyOpenAdvancedFilter('whenPlayed').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'whenPlayed'}>\n                    {this.getTimeFrameFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Opponent elo range', getELORangeLabel(this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]), \n                this.setCurrentlyOpenAdvancedFilter('eloRange').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'eloRange'}>\n                    {this.getEloRangeFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Download limit', getDownloadLimitLabel(this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]), \n                this.setCurrentlyOpenAdvancedFilter('downloadLimit').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'downloadLimit'}>\n                    {this.getDownloadLimitFilters()}\n                </Collapse>)}\n      </div>\n    }\n\n    getDownloadLimitFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]}\n            onChange={this.props.handleDownloadLimitChange}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={(val)=>val>=Constants.MAX_DOWNLOAD_LIMIT?\"All\":val}\n            step={100}\n            min={0}\n            marks={this.downloadLimitMarks}\n            max={Constants.MAX_DOWNLOAD_LIMIT}\n        />\n    }\n\n    getTimeFrameFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME]}\n            onChange={this.props.handleTimeframeChange}\n            valueLabelDisplay=\"off\"\n            valueLabelFormat={(val)=>this.props.timeframeSteps[val].label}\n            step={1}\n            marks={this.timeframeMarks}\n            min={0}\n            max={this.props.timeframeSteps.length-1}\n        />\n    }\n\n    getEloRangeFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]}\n            onChange={this.props.handleEloRangeChange}\n            valueLabelDisplay=\"off\"\n            marks={this.eloRangeMarks}\n            min={0}\n            max={Constants.MAX_ELO_RATING}\n        />\n    }\n\n    getTimeControlFilters(site){\n        let firstRow = null, middleRow = null, lastRow = null\n        let colWidth = null\n        if(site === 'lichess') {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_ULTRA_BULLET]\n            middleRow = [Constants.TIME_CONTROL_BLITZ,\n                        Constants.TIME_CONTROL_CLASSICAL]\n            lastRow = [Constants.TIME_CONTROL_RAPID,\n                        Constants.TIME_CONTROL_CORRESPONDENCE]\n            colWidth = '4'\n                    \n        } else {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_BLITZ]\n            lastRow = [Constants.TIME_CONTROL_RAPID, \n                        Constants.TIME_CONTROL_DAILY]\n            colWidth = '6'\n        }\n        return <FormControl><FormGroup><Container>\n            {this.getTimeControlFilterRow(firstRow,colWidth,'first')}\n            {middleRow?this.getTimeControlFilterRow(middleRow,colWidth,'middle'):null}\n            {this.getTimeControlFilterRow(lastRow,colWidth,'last')}\n          </Container>\n        </FormGroup></FormControl>\n      \n    }\n\n    getTimeControlFilterRow(controls,firstColumnWidth, position){\n        let clsName = 'topBottomNegativeMargin'\n        if(position === \"first\") {\n            clsName = 'bottomNegativeMargin'\n        } else if (position === \"last\") {\n            clsName = 'topNegativeMargin'\n        } \n        return <Row className={clsName}>\n            {controls.map((control) => \n            <Col sm={firstColumnWidth} key={`ctrl${control}`}>\n                \n            <FormControlLabel className = \"nomargin\"\n                control={<Checkbox checked={this.props.advancedFilters[control]} color=\"primary\" \n                onChange={this.props.handleTimeControlChange} name={control} />}\n                label={Common.TIME_CONTROL_LABELS[control]}\n          /></Col>)}</Row>\n    }\n\n    subSectionComponent(title, label, changeCallback, children) {\n        return <div className=\"pgnloadersection\">{title}: <span className=\"smallText\">[<span className=\"linkStyle\" onClick={changeCallback}>change</span>]</span>\n        <div><b>{label}</b></div>{children}\n        </div>\n    }\n\n\n    render() {\n        return this.getFilters(this.props.site)\n    }\n\n}","import { withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport React from 'react'\nimport { createSubObjectWithProperties, getTimeframeSteps } from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const ExpansionPanel = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nexport function getNumberIcon(n) {\n    return <img className = 'lowOpacity styledNumbers' src={`/images/styled-${n}.png`} height={24}/>\n}\n\nexport function advancedFilters(state) {\n    return createSubObjectWithProperties(state,\n        [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n        Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n        Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n        Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n        Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n        Constants.FILTER_NAME_ELO_RANGE])\n}","import {simplifiedFen, isDateMoreRecentThan} from './util'\nimport * as Constants from './Constants'\n\nclass OpeningGraph {\n    constructor() {\n        this.graph=new Graph()\n    }\n    hasMoves() {\n        return this.graph.nodes.size>0\n    }\n    clear() {\n        this.graph = new Graph()\n    }\n    addGameResultOnFen(fullFen, resultObject) {\n        var currNode = this.getNodeFromGraph(fullFen)\n        currNode.gameResults.push(resultObject)\n    }\n    addResultToRoot(resultObject, playerColor) {\n        var targetNode = this.getNodeFromGraph(Constants.ROOT_FEN)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject, playerColor)\n        targetNode.details = newDetails\n    }\n\n    getDetailsForFen(fullFen) {\n        return this.getNodeFromGraph(simplifiedFen(fullFen)).details\n    }\n\n    addMoveForFen(fullSourceFen, fullTargetFen, move, resultObject, playerColor) {\n        var targetNode = this.getNodeFromGraph(fullTargetFen)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject, playerColor)\n        targetNode.details = newDetails\n\n        var currNode = this.getNodeFromGraph(fullSourceFen)\n        var movePlayedBy = this.createOrGetMoveNode(currNode.playedBy, move, fullTargetFen)\n        currNode.playedByMax = Math.max(currNode.playedByMax, targetNode.details.count)\n        currNode.playedBy = movePlayedBy\n    }\n\n    getNodeFromGraph(fullFen) {\n        let fen = simplifiedFen(fullFen)\n        var currNode = this.graph.nodes.get(fen)\n        if(!currNode) {\n            currNode = new GraphNode()\n            currNode.fen = fen\n            this.graph.nodes.set(fen, currNode)\n        }\n        return currNode\n    }\n    createOrGetMoveNode(movesPlayedNode, move, fullTargetFen){\n        var movePlayed = movesPlayedNode.get(move.san)\n\n        if(!movePlayed) {\n            movePlayed = new GraphMove()\n            movePlayed.move = move\n            movePlayed.fen = simplifiedFen(fullTargetFen)\n            movesPlayedNode.set(move.san, movePlayed)\n        }\n        return movesPlayedNode\n    }\n\n    getUpdatedMoveDetails(currentMoveDetails, resultObject, playerColor) {\n        let whiteWin = 0, blackWin = 0, draw = 0, opponentElo=0, resultInt = 0;\n        if(resultObject.result === '1-0') {\n            whiteWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_WHITE? 1 : -1\n        } else if (resultObject.result === '0-1') {\n            blackWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_BLACK? 1 : -1\n        } else {\n            draw = 1\n        }\n\n        if(playerColor === Constants.PLAYER_COLOR_WHITE) {\n            opponentElo = resultObject.blackElo\n        } else {\n            opponentElo = resultObject.whiteElo\n        }\n        if(resultInt === 1) {\n            if(!currentMoveDetails.bestWin || parseInt(opponentElo)>parseInt(currentMoveDetails.bestWin)) {\n                currentMoveDetails.bestWin = opponentElo\n                currentMoveDetails.bestWinGame = resultObject\n            }\n        }\n        if(resultInt === -1) {\n            if(!currentMoveDetails.worstLoss || parseInt(opponentElo)<parseInt(currentMoveDetails.worstLoss)) {\n                currentMoveDetails.worstLoss = opponentElo\n                currentMoveDetails.worstLossGame = resultObject\n            }\n        }\n        if(!currentMoveDetails.lastPlayedGame || \n            isDateMoreRecentThan(resultObject.date, currentMoveDetails.lastPlayedGame.date)) {\n                currentMoveDetails.lastPlayedGame = resultObject\n        }\n        currentMoveDetails.count += 1\n        currentMoveDetails.blackWins += blackWin\n        currentMoveDetails.whiteWins += whiteWin\n        currentMoveDetails.draws += draw\n        currentMoveDetails.totalOpponentElo += parseInt(opponentElo)\n        return currentMoveDetails\n    }\n\n    gameResultsForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return currNode.gameResults\n        }\n        return null\n    }\n    movesForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return Array.from(currNode.playedBy.entries()).map((entry)=> {\n                let gMove = entry[1]\n                let targetNode = this.graph.nodes.get(gMove.fen)\n                return {\n                    orig:gMove.move.from,\n                    dest:gMove.move.to,\n                    level:this.levelFor(targetNode.details.count, currNode.playedByMax),\n                    san:gMove.move.san,\n                    details:targetNode.details\n                }\n            })\n        }        \n        return null\n    }\n\n    levelFor(moveCount, maxCount){\n        if(maxCount <= 0 ||moveCount/maxCount > 0.8) {\n            return 2\n        }\n        if(moveCount/maxCount>0.3) {\n            return 1\n        }\n        return 0\n    }\n\n}\n\n\nclass Graph {\n    nodes = new Map()\n}\n\nclass GraphNode {\n    fen = ''\n    playedByMax = 0 // used to keep track of how many times the most frequent move is played for ease of calculation later\n    playedBy = new Map()\n    gameResults = []\n    properties = {}\n    details = emptyDetails()\n}\n\nclass GraphMove {\n    fen = ''\n    move = {}\n}\n\nfunction emptyDetails() {\n    return {\n        count: 0,\n        blackWins: 0,\n        whiteWins: 0,\n        draws: 0,\n        totalOpponentElo: 0,\n        bestWin:null,\n        bestWinGame:null,\n        worstLoss:null,\n        worstLossGame:null,\n        lastPlayedGame:null\n    }\n}\n\nexport const openingGraph = new OpeningGraph()","import * as Constants from './Constants'\n\nexport default class OpeningManager {\n    plys = [{pgn:'', fen:Constants.ROOT_FEN, move:null}]\n    currentIndex = 0\n    addPly(fen,move) {\n        if(this.currentIndex<this.plys.length-1 && this.plys[this.currentIndex+1].move.san === move.san) {\n            this.moveForward()\n            return\n        }\n        this.plys = this.plys.slice(0,this.currentIndex+1)\n        this.plys.push({\n            pgnAsList:this.pgnAsList(move.san),\n            fen: fen,\n            move: move\n        })\n        this.currentIndex++;\n        return this.plys[this.currentIndex]\n    }\n\n    pgnAsList(san) {\n        let pgnSoFar = this.pgnListSoFar()\n        let pgnList\n        if (!pgnSoFar) {\n            pgnList = []\n        } else {\n            pgnList = [...pgnSoFar]\n        }\n        let numPlys = this.plys.length\n        if(numPlys%2 !== 0) {\n            pgnList.push({\n                moveNumber:pgnList.length+1,\n                whitePly:san,\n                blackPly:''\n            })\n        } else {\n            let currMove = pgnList[pgnList.length-1]\n            currMove.blackPly = san\n            pgnList[pgnList.length-1] = currMove\n        }\n        return pgnList\n    }\n\n    currentMove() {\n        return Math.floor((this.currentIndex-1)/2);\n    }\n\n    pgnListSoFar(){\n        return this.plys[this.plys.length-1].pgnAsList\n    }\n\n    fen(){\n        return this.plys[this.currentIndex].fen\n    }\n\n    moveForward() {\n        return this.moveTo(this.currentIndex+1)\n    }\n    moveBack() {\n        return this.moveTo(this.currentIndex-1)\n    }\n    moveTo(index) {\n        if(index>=0 && index<this.plys.length) {\n            this.currentIndex = index\n        }\n        return this.plys[this.currentIndex]\n    }\n\n}","import React from 'react'\nimport ChessEcoCodes from 'chess-eco-codes'\nimport OpeningManager from '../app/OpeningManager'\nimport {Container, Row, Col, Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepForward, faStepBackward } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nexport default class Navigator extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.openingManager = new OpeningManager()\n        this.state = {\n            currentMove:0,\n          }      \n          window.addEventListener(\"keydown\",this.keyHandler.bind(this))\n  \n    }\n    keyHandler(e){\n        switch(e.keyCode) {\n          case 37:\n            this.previous(e, \"keyboard\")\n          break\n          case 39:\n            this.next(e, \"keyboard\")\n            break\n        }\n      }\n    \n    shouldComponentUpdate(newProps) {\n        //console.log(newProps)\n        if(newProps.fen !== this.openingManager.fen()) {\n            if(newProps.move === null) {\n                this.openingManager = new OpeningManager()\n                return true\n            }\n            this.openingManager.addPly(newProps.fen, newProps.move)\n            return true\n        }\n        return true\n    }\n\n    previous(e, device) {\n        let newState = this.openingManager.moveBack()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Previous\", device?device:\"mouse\")\n    }\n\n    next(e, device) {\n        let newState = this.openingManager.moveForward()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Next\", device?device:\"mouse\")\n    }\n\n    moveTo(index) {\n        return () => {\n            let newState = this.openingManager.moveTo(index*2+1)\n            this.props.onChange(newState.fen, newState.move)\n            this.setState({currentMove:this.openingManager.currentMove()})\n            trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"move\", null, index)\n        }\n    }\n\n    render(){\n        let opening = ChessEcoCodes(this.openingManager.fen())\n        if (opening) {\n            this.opening = opening.name\n            this.openingCode = opening.code\n        }\n        if(!this.openingManager.pgnListSoFar()) {\n            return <div></div>\n        }\n        return <Container>\n            <Row>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick= {this.previous.bind(this)}><FontAwesomeIcon icon={faStepBackward} /> prev</Button> </Col>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick = {this.next.bind(this)}>next <FontAwesomeIcon icon={faStepForward} /></Button></Col></Row>\n            <Row className=\"greyText\">{this.openingCode}: {this.opening}</Row>\n            {\n                this.openingManager.pgnListSoFar().map((move, index)=>\n                    <Row key={`${move.moveNumber}`} onClick={this.moveTo(index).bind(this)} className={`navCol ${this.openingManager.currentMove() === index? 'selectedMove':''}`}>\n                        <Col sm=\"12\" className = \"navMove border\">{`${move.moveNumber}. ${move.whitePly} ${move.blackPly}`}</Col>\n                    </Row>)\n            }\n        </Container>\n    }\n}","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  ListGroup,\n  ListGroupItem\n} from 'reactstrap'\n\nconst GlobalHeader = (props) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [modal, setModal] = useState(false);\n  \n  const toggle = () => setIsOpen(!isOpen)\n  const toggleModal = () => setModal(!modal)\n  \n  const launch = (url) => {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <img src=\"/opening-tree-logo.png\" height=\"32px\" width=\"32px\" alt=\"Logo\"/>\n        <NavbarBrand href=\"/\">&nbsp;OpeningTree.com</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n          </Nav>\n          <UncontrolledDropdown navbar>\n              <DropdownToggle className=\"bootNavColor\" nav caret>\n                More\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={toggleModal}>\n                  Acknowledgements\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"mailto:openingtreechess@gmail.com\")}>\n                  Feedback\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.reddit.com/message/compose/?to=opening_tree\")}>\n                  Message me on reddit\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={launch(\"https://lichess.org/\")}>\n                  Lichess\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.lichess4545.com/\")}>\n                  Lichess4545\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.chess.com\")}>\n                  Chess.com\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n        </Collapse>\n      </Navbar>\n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Acknowledgements</ModalHeader>\n        <ListGroup className=\"acknowledgement\">\n        <ListGroupItem tag=\"a\" href=\"https://lichess.org/api\" target=\"_blank\" action>Lichess API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.chess.com/club/chess-com-developer-community\" target=\"_blank\" action>Chess.com API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/ruilisi/react-chessground\" target=\"_blank\" action>ChessGround</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jhlywa/chess.js\" target=\"_blank\" action>Chess.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/niklasf/eco\" target=\"_blank\" action>Eco</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jimmywarting/StreamSaver.js\" target=\"_blank\" action>StreamSaver.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/authors/google/\" target=\"_blank\" action>Icons made by google</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/\" target=\"_blank\" action>FlatIcons.com</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.freelogodesign.org\" target=\"_blank\" action>Free logo design</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/kevinludwig/pgn-parser\" target=\"_blank\" action>PGN Parser</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.reddit.com/r/chess\" target=\"_blank\" action>r/chess</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.reddit.com/r/anarchychess\" target=\"_blank\" action>r/anarchychess</ListGroupItem>\n        </ListGroup>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GlobalHeader\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport { Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Backup from '@material-ui/icons/Backup';\nimport People from '@material-ui/icons/People';\nimport Save from '@material-ui/icons/Save';\nimport Divider from '@material-ui/core/Divider';\nimport DateRange from '@material-ui/icons/DateRange';\n\nexport default class Source extends React.Component {\n    getSourceOption(source, addNumber) {\n        if (source === Constants.SITE_LICHESS) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"lichess\" className=\"siteimage\" src=\"./lichesslogo.png\" /><span className=\"sourceName\"> lichess.org </span></span>\n        } else if (source === Constants.SITE_CHESS_DOT_COM) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"chess.com\" className=\"siteimage\" src=\"./chesscomlogo.png\" /></span>\n        } else if (source === Constants.SITE_PGN_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Backup className=\"lowOpacity\"/><span className=\"sourceName\"> Upload PGN file</span></span>\n        } else if (source === Constants.SITE_EVENT_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<DateRange className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess events</span></span>\n        } else if (source === Constants.SITE_PLAYER_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<People className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess players</span></span>\n        }  else if (source === Constants.SITE_OPENING_TREE_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Save className=\"lowOpacity\"/><span className=\"sourceName\"> Openingtree save file</span></span>\n        }\n        return <span>{getNumberIcon(1, addNumber)}Select a source</span>\n    }\n\n    render() {\n        return <ExpansionPanel TransitionComponent={Collapse}\n            TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            expanded={this.props.expandedPanel === 'source'}\n            onChange={this.props.handleExpansionChange}>\n            <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n            >\n                <div>\n                    {this.getSourceOption(this.props.site, true)}\n                </div>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <RadioGroup onChange={this.props.siteChange}>\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_LICHESS} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_LICHESS)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_CHESS_DOT_COM} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_CHESS_DOT_COM)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_OPENING_TREE_FILE} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_OPENING_TREE_FILE)} />\n                    <Divider className=\"dividerMargin\"/>\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_PLAYER_DB} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_PLAYER_DB)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_EVENT_DB} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_EVENT_DB)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_PGN_FILE} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_PGN_FILE)} />\n               </RadioGroup>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n        \n    }\n}","import React from 'react'\nimport {DropzoneArea} from 'material-ui-dropzone'\n\nexport default class Dropzone extends React.Component{\n    render(){\n      return (\n        <DropzoneArea \n        acceptedFiles={[]}\n        dropzoneText={this.props.dropzoneText}\n          onChange={this.props.filesChange}\n          dropzoneParagraphClass=\"dropzonetext\"\n          showFileNames={true}\n          useChipsForPreview={true}\n          previewChipProps={{className:\"previewChip\"}}\n          dropzoneClass=\"dropzone\"\n          filesLimit={this.props.filesLimit}\n          maxFileSize={3000000000000}\n          />\n      )  \n    }\n  } ","import SelectSearch from 'react-select-search';\nimport React from 'react'\n\n\nexport default class NotableChessGames extends React.Component {\n\n    constructor(props) {\n        super(props)\n        \n    }\n    updateDetails = (value) => {\n        this.props.onChange(value)\n    }\n    \n    renderDetails(option) {\n        return (<div>\n                <img alt={option.name} className=\"profilePicture\" width=\"40\" height=\"40\" src={option.profile.imageUrl} />\n                <div>{option.name}</div>\n                <div className=\"smallText\">{option.profile.subText}</div>\n                </div>);\n    }\n    render() {\n        if(!this.props.list) {\n            return <div className=\"lowOpacity textCenter\"><img width='25' height='25' src=\"./spinner.gif\"/> Loading List</div>\n        } else if(!this.props.list.length) {\n            return <div className=\"lowOpacity textCenter\"> Could not fetch list</div>\n        }\n        let options = this.props.list.map(option=>{return {...option, value:option.name}})\n        return <SelectSearch\n            name=\"goatPlayers\"\n            value={this.props.selectedDetail.value}\n            options={options}\n            placeholder={this.props.placeholder}\n            renderOption={this.renderDetails}\n            onChange={this.updateDetails}\n        />\n    }\n}\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport { Button as MaterialUIButton, TextField } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Collapse from '@material-ui/core/Collapse';\nimport Dropzone from './Dropzone'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport InsertLink from '@material-ui/icons/InsertLink'\nimport NotableChessGames from './NotableChessGames';\n\nexport default class User extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName:'',\n            files:[],\n            selectedPlayer:{},\n            selectedEvent:{}\n        }\n    }\n\n    editPlayerName(event) {\n        this.setState({\n            playerName: event.target.value,\n            playerNameError:''\n        })\n    }\n\n    filesChange(files) {\n        this.setState({files:files})\n    }\n\n    notablePlayerChange(player) {\n        this.setState({\n            selectedPlayer:player})\n    }\n    notableEventChange(event) {\n        this.setState({\n            selectedEvent:event})\n    }\n\n    componentWillReceiveProps() {\n        this.setState({playerNameError:''})\n    }\n\n    validateInputDetailsSet() {\n        if(this.props.site === Constants.SITE_EVENT_DB){\n            if(!this.state.selectedEvent){\n                this.props.showError(\"Please select an event\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(!this.state.selectedPlayer){\n                this.props.showError(\"Please select a player\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_LICHESS ||\n            this.props.site === Constants.SITE_CHESS_DOT_COM) {\n                if(!this.state.playerName){\n                    this.setState({\n                        playerNameError:'Please enter a username'\n                    })\n                    return false\n                } \n        } else if(this.props.site === Constants.SITE_PGN_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload a PGN file\")\n                return false\n            }\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload an openingtree file\")\n                return false\n            }\n        } \n        return true\n    }\n    finalPlayerName(source, playerName, selectedNotablePlayer) {\n        if(source === Constants.SITE_PLAYER_DB) {\n            return selectedNotablePlayer.name\n        }\n        if(source === Constants.SITE_EVENT_DB) {\n            return ''\n        }\n        return playerName\n    }\n    setPlayerDetails() {\n         if(this.validateInputDetailsSet()) {\n            this.props.playerDetailsChange(\n                this.finalPlayerName(\n                    this.props.site, \n                    this.state.playerName,\n                    this.state.selectedPlayer), \n                this.state.files, \n                this.state.selectedEvent, \n                this.state.selectedPlayer)\n        }\n    }\n    \n    getSummary() {\n        if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(this.props.selectedPlayer.name) {\n                return <span>\n                        {getNumberIcon('done')}\n                        {this.props.selectedPlayer.profile.title}{'\\u00A0'}\n                        <b>{this.props.selectedPlayer.name}</b>\n                    </span>\n            }\n        } else if(this.props.site === Constants.SITE_LICHESS || \n            this.props.site === Constants.SITE_CHESS_DOT_COM){\n            if(this.props.playerName) {\n                return <span>{getNumberIcon('done')}User: <b>{this.props.playerName}</b></span>\n            }\n        } else if(this.props.site === Constants.SITE_PGN_FILE || \n            this.props.site === Constants.SITE_OPENING_TREE_FILE){\n            if(this.props.files.length===1) {\n                return <span>{getNumberIcon('done')}File: <b>{this.props.files[0].name}</b></span>\n            }\n            if(this.props.files.length>1) {\n                return <span>{getNumberIcon('done')}{this.props.files.length} PGN files uploaded</span>\n            }\n        } else if(this.props.site === Constants.SITE_EVENT_DB) {\n            if(this.props.selectedEvent.name) {\n                return <span>{getNumberIcon('done')}{this.props.selectedEvent.name}</span>\n            }\n        }\n        return <span>{getNumberIcon(2)}Player details</span>\n    }\n\n    getPlayerNameInput(label, helperText) {\n        return <TextField\n            className=\"playernameField\" name=\"playerName\" id=\"playerNameTextBox\" \n            margin=\"dense\" onChange={this.editPlayerName.bind(this)}\n            label={label} variant=\"outlined\"\n            helperText={this.state.playerNameError? this.state.playerNameError:helperText}\n            error={this.state.playerNameError?true:false}/>\n    }\n    getGoatDBSelection(){\n        return <NotableChessGames \n            list={this.props.notablePlayers} \n            placeholder=\"Select a player\"\n            onChange={this.notablePlayerChange.bind(this)}\n            selectedDetail={this.state.selectedPlayer}/>\n    }\n    getGoatDBEventSelection(){\n        return <NotableChessGames \n            list={this.props.notableEvents} \n            placeholder=\"Select an event\"\n            onChange={this.notableEventChange.bind(this)}\n            selectedDetail={this.state.selectedEvent}/>\n    }\n\n    getPgnFIleSelection() {\n        return <div><Dropzone filesChange={this.filesChange.bind(this)} filesLimit={10}\n        dropzoneText=\"Drag and drop up to 10 pgn files here or click here to select files\"\n                />\n                {this.getPlayerNameInput('player name in PGN', 'Leave blank to load all games')}\n                </div>\n    }\n\n    getInputsToShow() {\n        if(this.props.site === Constants.SITE_PGN_FILE) {\n            return this.getPgnFIleSelection()\n        } else if (this.props.site === Constants.SITE_LICHESS) {\n            return this.getPlayerNameInput('lichess username')\n        } else if (this.props.site === Constants.SITE_CHESS_DOT_COM) {\n            return this.getPlayerNameInput('chess.com username')\n        } else if (this.props.site === Constants.SITE_EVENT_DB) {\n            return this.getGoatDBEventSelection()\n        } else if (this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.getGoatDBSelection()\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            return <Dropzone filesChange={this.filesChange.bind(this)} filesLimit={1}\n                    dropzoneText=\"Drag and drop openingtree save file here or click here to select a file\"\n                />\n        }\n    }\n\n    render() {\n        return <ExpansionPanel expanded={this.props.expandedPanel === 'user'}\n                TransitionComponent={Collapse}\n                TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n                onChange={this.props.handleExpansionChange} \n                disabled={this.props.site===''}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary()}</ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                        {this.getInputsToShow()}\n                </ExpansionPanelDetails>\n                <Divider />\n                <ExpansionPanelActions>\n                    <MaterialUIButton size=\"small\">Random</MaterialUIButton>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setPlayerDetails.bind(this)}>Save</MaterialUIButton>\n                </ExpansionPanelActions></ExpansionPanel>\n            \n    }\n}","import normalizeNewLine from 'normalize-newline'\n\nexport function normalizePGN(pgnString) {\n    // parser cannot handle \\r characters\n    // normalize newlines coverts everything to \\n\n    let dataString = normalizeNewLine(pgnString)\n\n    // Remove Single line commments because parser does not handle them\n    dataString = dataString.replace(/^;.*$/gm, '')\n    \n    // some pgn files dont have triple \\n separating games\n    // so converting all double \\n with triple \\n if it happens before a [\n    // this separates games with atleast a triple \\n\n    dataString = dataString.replace(/\\n\\n+\\[/g, `\\n\\n\\n[`);\n\n    // some pgn files have the result in a separate line instead of \n    // at the end of the moves this moves those results to the end of the moves\n    // $1 replaces the first captured group which is the result\n    dataString = dataString.replace(/\\s*\\n+(1\\-0|0\\-1|1\\/2\\-1\\/2)/g, ` $1`);\n\n    return dataString\n}\n","import request from 'request'\nimport {normalizePGN} from './IteratorUtils'\n\nexport default class BaseUrlIterator {\n\n    constructor(url, shouldNormalizePGN, responseCodeCallback, errorCallback, dataCallback, endCallback) {\n        let remainingBody=''\n\n        let requestObject = request.get(\n                url, \n                { json: false }).on('error', errorCallback)\n            .on('response',(response)=>{\n                return responseCodeCallback(response.statusCode)\n            }).on('data', (data) => {\n                let newBody = shouldNormalizePGN? \n                    normalizePGN(remainingBody + data.toString()):\n                    remainingBody + data.toString()\n                let lastValidPGN = newBody.lastIndexOf(`\\n\\n\\n`)\n                let body = newBody.slice(0, lastValidPGN)\n\n                remainingBody = newBody.slice(lastValidPGN)\n                if(!this.callDataCallback(body, dataCallback)) {\n                    requestObject.abort()\n                }\n            }).on('end', () => {\n                this.callDataCallback(remainingBody, dataCallback)\n                endCallback()\n            })\n    }\n\n    callDataCallback(body, dataCallback) {\n        let pgnArray = body.split(`\\n\\n\\n`)\n            .map(\n                pgnString=> pgnString.replace(/^\\s+|\\s+$/g, '')//trim string\n            )\n        return dataCallback(pgnArray)\n\n    }\n}","import { parse }  from '../PGNParser'\nimport {getTimeControlsArray, getTimeframeSteps, getSelectedTimeFrameData, isOpponentEloInSelectedRange} from '../util'\nimport * as Constants from '../Constants'\nimport {trackEvent} from '../Analytics'\nimport BaseUrlIterator from './BaseUrlIterator'\n\nexport default class LichessIterator {\n\n    constructor(playerName, playerColor, advancedFilters, ready, showError) {\n        let lichessBaseURL = `https://lichess.org/api/games/user/`\n        let playerNameFilter = encodeURIComponent(playerName)\n        let colorFilter = `?color=${playerColor}`\n        let ratedFilter = `${advancedFilters[Constants.FILTER_NAME_RATED]===\"all\"?\"\":`&rated=${advancedFilters[Constants.FILTER_NAME_RATED]===\"rated\"?\"true\":\"false\"}`}`\n        let selectedTimeFrameData = getSelectedTimeFrameData(advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], getTimeframeSteps())\n        let timeSinceFilter = `${selectedTimeFrameData.fromTimeStamp?`&since=${selectedTimeFrameData.fromTimeStamp}`:\"\"}`\n        let timeUntilFilter = `${selectedTimeFrameData.toTimeStamp?`&until=${selectedTimeFrameData.toTimeStamp}`:\"\"}`\n        let selectedTimeControls = getTimeControlsArray(Constants.SITE_LICHESS, advancedFilters, true)\n        let perfFilter = selectedTimeControls.length === 0 || selectedTimeControls.length === 6?\n                \"\" : `&perfType=${selectedTimeControls.join(\",\")}`\n        new BaseUrlIterator(lichessBaseURL+playerNameFilter+colorFilter+ratedFilter+perfFilter+timeSinceFilter+timeUntilFilter, false,\n            (responseCode)=>{\n                if(responseCode === 404) {\n                    showError('could not find lichess user ' + playerName)\n                } else if (responseCode !== 200) {\n                    showError('could not load games of lichess user ' + playerName)\n                }\n            }, (error)=> {\n                showError('failed to connect to lichess.org')\n                ready([], false)\n            }, (pgnStringArray) => {\n                let parsedPGNs = pgnStringArray.map((pgnString)=> {\n                    try {\n                        return parse(pgnString)[0]\n                    } catch (e) {\n                        console.log(\"failed to parse pgn\", pgnString)\n                        console.log(e)\n                        trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedLichess\", playerName)\n                        return null\n                    }\n                })\n    \n                let continueProcessing = ready(parsedPGNs.filter((pgn)=>{\n                    if(!pgn || pgn.headers.Variant !== \"Standard\") {\n                        return false\n                    }\n                    let opponentElo = playerColor === Constants.PLAYER_COLOR_WHITE?pgn.headers.BlackElo:pgn.headers.WhiteElo\n                    if(!isOpponentEloInSelectedRange(opponentElo, advancedFilters[Constants.FILTER_NAME_ELO_RANGE])) {\n                        return false\n                    }\n                    return true\n                }), true)\n                return continueProcessing\n            }, ()=>{\n                ready([], false)\n            })\n    }\n}\n","import ChessWebAPI from 'chess-web-api'\nimport { parse }  from '../PGNParser'\nimport request from 'request'\nimport * as Constants from '../Constants'\nimport {isOpponentEloInSelectedRange, getTimeframeSteps, getSelectedTimeFrameData} from '../util'\nimport {trackEvent} from '../Analytics'\n\nexport default class ChessComIterator {\n\n    constructor(playerName, playerColor, advancedFilters, ready, showError) {\n        let chessAPI = new ChessWebAPI({\n            queue: true,\n        });\n        let pendingRequests = 0;\n        let parseGames= (archiveResponse)=>{\n            pendingRequests--\n            let continueProcessing = ready(archiveResponse.body.games.filter(\n                game=>{\n                    if(game.rules!==\"chess\" || game[playerColor].username.toLowerCase() !== playerName.toLowerCase()) {\n                        return false\n                    }\n                    let ratedMode = advancedFilters[Constants.FILTER_NAME_RATED]\n                    if(ratedMode === 'rated' && !game.rated) {\n                        return false\n                    } else if (ratedMode === 'casual' && game.rated) {\n                        return false\n                    }\n                    if(!advancedFilters[game.time_class]) {\n                        return false\n                    }\n                    let opponentElo = playerColor === Constants.PLAYER_COLOR_WHITE?game.black.rating:game.white.rating\n                    if(!isOpponentEloInSelectedRange(opponentElo, advancedFilters[Constants.FILTER_NAME_ELO_RANGE])) {\n                        return false\n                    }\n                    return true \n                }).map(\n                    game=> {\n                        try {\n                            return parse(game.pgn)[0]\n                        } catch (e) {\n                            console.log(\"failed to parse pgn\", game)\n                            console.log(e)\n                            trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedChessCom\", `${playerName}:${playerColor}`)\n                            return null\n                        }\n                    }).filter(game=> game !== null), pendingRequests>0)\n            if(!continueProcessing) {\n                //cancel all pending requests\n                while(chessAPI.dequeue()){}\n                pendingRequests = 0\n                ready([],false)\n            }\n        }\n        let shouldFetchGamesFromArchive = (archiveMonth,archiveYear, selectedTimeFrameData) => {\n            let fromYear = selectedTimeFrameData.fromYear || 1970\n            let toYear = selectedTimeFrameData.toYear || 10000\n            let fromMonth = selectedTimeFrameData.fromYear || 0\n            let toMonth = selectedTimeFrameData.toYear || 11\n    \n            if(archiveYear>fromYear && archiveYear<toYear) {\n                return true\n            }\n            if(archiveYear<fromYear || archiveYear>toYear) {\n                return false\n            }\n            if(archiveYear === fromYear) {\n                return archiveMonth >= fromMonth\n            }\n            if(archiveYear === toYear) {\n                return archiveMonth <= toMonth\n            }\n            console.log(\"should not happen\")\n            return true\n        }\n        let selectedTimeFrameData = getSelectedTimeFrameData(advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], getTimeframeSteps())\n        let fetchAllGames = function(responseBody) {\n            responseBody.archives.reverse().forEach((archiveUrl)=>{\n\n                let components=archiveUrl.split('/')\n                let year=components[components.length-2]\n                let month=components[components.length-1]\n                if(shouldFetchGamesFromArchive(month,year, selectedTimeFrameData)) {\n                    pendingRequests++\n                    chessAPI.dispatch(chessAPI.getPlayerCompleteMonthlyArchives, parseGames, [playerName, year, month]);\n                }\n            })\n            if(pendingRequests === 0) {\n                showError('Could not find games for chess.com user '+playerName)\n                ready([], false)\n            }\n        }\n\n        request(`https://api.chess.com/pub/player/${playerName}/games/archives`, function (error, response, body) {\n            if(error) {\n                showError('Could not connect to chess.com')\n                ready([], false)\n            } else if(response.statusCode === 404) {\n                showError('Could not find chess.com user '+playerName)\n                ready([], false)\n            } else if (response.statusCode !== 200) {\n                showError('Could not load games for chess.com user '+playerName)\n                ready([], false)\n            } else {\n                if(response.body) {\n                    try{\n                        let jsonBody = JSON.parse(response.body)\n                        fetchAllGames(jsonBody)\n                    }catch(e) {\n                        showError('Could not find games for chess.com user '+playerName)\n                        ready([], false)\n                    }\n                }\n            }\n        });\n    }\n\n\n}","import { parse }  from '../PGNParser'\nimport * as Constants from '../Constants'\nimport {trackEvent} from '../Analytics'\nimport {normalizePGN} from './IteratorUtils'\n\nexport default class LichessIterator {\n\n    constructor(playerName, files, playerColor, advancedFilters, ready, showError) {\n        let reader = new FileReader()\n        let playerColorHeaderName = playerColor === Constants.PLAYER_COLOR_WHITE? 'White': 'Black'\n        let lowerCasePlayerName = playerName? playerName.toLowerCase() : null\n        reader.onload = function(evt) {\n            let fileData = normalizePGN(evt.target.result);\n            let pgnsArray = fileData.split(\"\\n\\n\\n\")\n\n            let parsedPGNs = pgnsArray.map((pgnString)=> {\n                try {\n                    let parsedPGN =  parse(pgnString)[0]\n                    let playerColorHeaderValue = parsedPGN.headers[playerColorHeaderName]\n                    if(playerName && playerColorHeaderValue && !playerColorHeaderValue.toLowerCase().includes(lowerCasePlayerName)) {\n                        // filter out games not from selected player\n                        return null\n                    }\n                    return parsedPGN\n                } catch (e) {\n                    console.log(\"failed to parse pgn\", pgnString)\n                    console.log(e)\n                    trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedPGNFile\", playerName)\n                    return null\n                }\n            })\n            ready(parsedPGNs.filter(pgn=>!!pgn), true)\n        };\n        reader.onerror = function() {\n            showError(\"Failed to load pgn file\")\n            ready([], false)\n        }\n        reader.onloadend = function() {\n            ready([], false)\n        }\n        reader.readAsText(files[0])\n    }\n}","import { parse }  from '../PGNParser'\nimport * as Constants from '../Constants'\nimport {trackEvent} from '../Analytics'\nimport BaseUrlIterator from './BaseUrlIterator'\n\nexport default class PGNUrlIterator {\n\n    constructor(url, lowerCasePlayerNames, playerColor, advancedFilters, ready, showError) {\n        let playerColorHeaderName = playerColor === Constants.PLAYER_COLOR_WHITE? 'White': 'Black'\n        new BaseUrlIterator(url, true, \n            (responseCode)=>{\n                if (responseCode !== 200) {\n                    showError('could not load url')\n                }\n            }, (error)=> {\n                showError('could not connect to url')\n                ready([], false)\n            }, (pgnStringArray) => {\n                let parsedPGNs = pgnStringArray.map((pgnString)=> {\n                    try {\n\n                        return parse(pgnString)[0]\n                    } catch (e) {\n                        console.log(\"failed to parse pgn\", pgnString)\n                        console.log(e)\n                        trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedPGNUrl\")\n                        return null\n                    }\n                })\n    \n                let continueProcessing = ready(parsedPGNs.filter((game)=>{\n                    if(!game) {\n                        return false\n                    }\n                    if(lowerCasePlayerNames && !lowerCasePlayerNames.includes(game.headers[playerColorHeaderName].toLowerCase())) {\n                        return false\n                    }\n                    return true\n                }), true)\n                return continueProcessing\n            }, ()=>{\n                ready([], false)\n            })\n    }\n\n}\n","import PGNUrlIterator from './PGNUrlIterator'\n\nexport default class NotablePlayerIterator {\n\n    constructor(selectedPlayer, playerColor, advancedFilters, ready, showError) {\n        let lowerCaseAliases = selectedPlayer.pgnAliases?selectedPlayer.pgnAliases.map(alias=>alias.toLowerCase()):null\n        new PGNUrlIterator(selectedPlayer.pgnUrl, lowerCaseAliases, playerColor, advancedFilters, ready, showError)\n    }\n\n}\n","import {openingGraph} from './OpeningGraph'\nimport Chess from 'chess.js'\nimport LichessIterator from './iterator/LichessIterator'\nimport ChessComIterator from './iterator/ChessComIterator'\nimport PGNFileIterator from './iterator/PGNFileIterator'\nimport * as Constants from './Constants'\nimport streamsaver from 'streamsaver'\nimport NotablePlayerIterator from './iterator/NotablePlayerIterator'\nimport * as SitePolicy from './SitePolicy'\n\nexport default class PGNReader {\n    constructor() {\n        this.totalGames = 0;\n        this.pendingGames = 0;\n        this.pendingDownloads = true;\n        streamsaver.mitm = \"download/download-mitm.html\"\n        this.fileWriter = null\n    }\n\n    stopDownloading() {\n        if(this.fileWriter) {\n            this.fileWriter.close()\n            this.fileWriter = null\n        }\n    }\n\n    getPgnString(game){\n        return `${Object.entries(game.headers).map(header=>`[${header[0]} \"${header[1]}\"]`).join(\"\\n\")}\n                \\n${game.moves.map((moveObject, index)=>{\n                    return `${index%2!==0?'':index/2+1+\".\"} ${moveObject.move}`\n                }).join(' ')} ${game.result}\\n\\n\\n`\n    }\n\n    fetchPGNFromSite(playerName, playerColor, site, selectedNotablePlayer,\n        selectedNotableEvent, shouldDownloadToFile, advancedFilters, notify, \n        showError, stopDownloading, files) {\n        this.continueProcessingGames = true\n        if(shouldDownloadToFile) {\n            let fileStream =  streamsaver.createWriteStream(SitePolicy.exportFileName(site, playerName, playerColor, selectedNotableEvent))\n            this.fileWriter = fileStream.getWriter()\n        }\n        let encoder = new TextEncoder()\n        let downloadResponse = (result, pendingDownloads) => {\n            this.fileWriter.write(encoder.encode(result.map(game=>this.getPgnString(game)).join(\"\"))).then(()=>{\n                if(!pendingDownloads) {\n                    this.stopDownloading()\n                }\n            })\n            return true\n        }\n        let handleResponse = (result, pendingDownloads) => {\n            if(!result) {\n                return this.continueProcessingGames\n            }\n            this.totalGames += result.length\n            this.pendingGames += result.length\n            this.pendingDownloads = pendingDownloads\n            \n\n            setTimeout(() => {\n                this.parsePGNTimed(site, result, advancedFilters, playerColor, 0, playerName, notify, showError, stopDownloading)\n            } ,1)\n            return this.continueProcessingGames\n        }\n        let processor = shouldDownloadToFile? downloadResponse: handleResponse\n        if (site === Constants.SITE_LICHESS) {\n            new LichessIterator(playerName, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_CHESS_DOT_COM) {\n            new ChessComIterator(playerName, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_PGN_FILE) {\n            new PGNFileIterator(playerName, files, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_PLAYER_DB) {\n            new NotablePlayerIterator(selectedNotablePlayer, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_EVENT_DB) {\n            new NotablePlayerIterator(selectedNotableEvent, playerColor, advancedFilters, processor, showError)\n        } \n\n        \n    }\n\n    parsePGNTimed(site, pgnArray, advancedFilters, playerColor, index,  playerName, notify, showError, stopDownloading) {\n        if(index< pgnArray.length) {\n            this.pendingGames--\n        }\n        if(!this.pendingDownloads && this.pendingGames <= 0) {\n            stopDownloading()\n        }\n\n        if(index>= pgnArray.length || !this.continueProcessingGames) {\n            return\n        }\n\n        var pgn = pgnArray[index]\n        if(pgn.moves[0] && pgn.moves[0].move_number === 1) {\n            let chess = new Chess()\n            let resultObject = this.gameResult(pgn, site)\n\n            pgn.moves.forEach(element => {\n                let sourceFen = chess.fen()\n                let move = chess.move(element.move, {sloppy: true})\n                let targetFen = chess.fen()\n                if(!move){\n                    console.log('failed to load game ' + pgn)\n                    showError(\"Failed to load game\", `${playerName}:${playerColor}`)\n                    return\n                }\n                openingGraph.addMoveForFen(sourceFen, targetFen, move, resultObject, playerColor)\n            })\n            let fen = chess.fen()\n            openingGraph.addGameResultOnFen(fen, resultObject)\n            openingGraph.addResultToRoot(resultObject, playerColor)\n            this.continueProcessingGames = notify(advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT],1, openingGraph)\n        }\n            setTimeout(()=>{this.parsePGNTimed(site, pgnArray, advancedFilters, playerColor, index+1, playerName, notify, showError, stopDownloading)},1)\n    }\n\n    gameResult(pgn, site) {\n        let url= null \n        if (site === Constants.SITE_CHESS_DOT_COM) {\n            url = pgn.headers.Link\n        } else if(site === Constants.SITE_LICHESS) {\n            url = pgn.headers.Site\n        }\n        let headers=null\n        if(!url) {\n            headers = pgn.headers\n        }\n        return {\n            result:pgn.result,\n            white:pgn.headers.White,\n            black:pgn.headers.Black,\n            whiteElo:pgn.headers.WhiteElo,\n            blackElo:pgn.headers.BlackElo,\n            url:url,\n            date:pgn.headers.Date,\n            headers:headers\n        }\n    }\n}","import React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport PGNReader from '../../app/PGNReader'\nimport { faList} from '@fortawesome/free-solid-svg-icons'\nimport GetApp from '@material-ui/icons/GetApp'\nimport Equalizer from '@material-ui/icons/Equalizer'\nimport Fade from '@material-ui/core/Fade'\nimport * as SitePolicy from '../../app/SitePolicy'\n\nexport default class Actions extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            isGamesSubsectionOpen : false\n        }\n    }\n    unload = () => {\n        if (this.pgnReader) {\n            this.pgnReader.stopDownloading()\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.unload);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"beforeunload\", this.unload);\n    }\n\n    readPgn(shouldDownloadToFile) {\n        this.pgnReader = new PGNReader()\n        this.pgnReader.fetchPGNFromSite(this.props.playerName,\n            this.props.playerColor,\n            this.props.site,\n            this.props.selectedNotablePlayer,\n            this.props.selectedNotableEvent,\n            shouldDownloadToFile,\n            this.props.advancedFilters,\n            this.props.notify,\n            this.props.showError,\n            this.stopDownloading.bind(this),\n            this.props.files)\n    }\n\n    download() {\n        this.readPgn(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Download\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n\n    }\n\n    getPlayerName() {\n        if(this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.props.selectedNotablePlayer.name\n        }\n        return this.props.playerName\n    }\n\n    load() {\n        this.props.clear()\n        this.setState({ isGamesSubsectionOpen: true })\n        // set the player name and color in the global state\n        this.props.onChange(\"playerName\", this.props.playerName)\n        this.props.onChange(\"playerColor\", this.props.playerColor)\n        this.readPgn(false)\n        this.props.setDownloading(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Load\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n    }\n    stopDownloading() {\n        this.props.setDownloading(false)\n    }\n    stopDownloadingAction() {\n        this.stopDownloading()\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"StopDownloading\", this.props.site)\n    }\n    mainComponent() {\n        return <div style={{}}>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.load.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<Equalizer />}\n            className=\"mainButton\" disableElevation\n        >\n            Analyze games\n        </MaterialUIButton></div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.download.bind(this)}\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<GetApp />}\n            className=\"mainButton\" disableElevation\n        >\n            Export as PGN\n        </MaterialUIButton></div>\n        {\n            this.state.isGamesSubsectionOpen ?\n                <div>\n                    <div className=\"pgnloadersection\">\n                        {`Games Loaded: ${this.props.gamesProcessed} `}{this.props.isDownloading ? <span className=\"stopDownloading\">[<span className=\"linkStyle\" onClick={this.stopDownloadingAction.bind(this)}><img alt=\"loading spinner\" src=\"./spinner.gif\" height=\"15\" />stop</span>]</span> : \"\"}\n                    </div>\n                    <div onClick={() => this.props.switchToMovesTab()} className=\"navLinkButton pgnloadersection\">\n                        <FontAwesomeIcon icon={faList} /> View Moves>>\n                </div>\n                </div>\n                : \"\"\n        }\n        </div>\n    }\n    render(){\n        if(this.props.expandedPanel) {\n            return <Fade timeout={Constants.LOADER_ANIMATION_DURATION_MS*2}>\n            {this.mainComponent()}\n        </Fade>\n        }\n        return <Fade in timeout={Constants.LOADER_ANIMATION_DURATION_MS*3}>\n            {this.mainComponent()}\n        </Fade>\n    }\n}","import React from 'react'\nimport { createSubObjectWithProperties, getTimeframeSteps } from '../../app/util'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport Source from './Source'\nimport User from './User'\nimport Filters from './Filters'\nimport Actions from './Actions'\nimport request from 'request'\nimport * as SitePolicy from '../../app/SitePolicy'\n\nexport default class PGNLoader extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName: '',\n            site: '',\n            playerColor: this.props.settings.playerColor,\n            isAdvancedFiltersOpen: false,\n            isGamesSubsectionOpen: false,\n            expandedPanel: 'source',\n            notablePlayers:null,\n            notableEvents:null,\n            files:[],\n            selectedNotableEvent:{},\n            selectedNotablePlayer:{}\n\n        }\n        this.timeframeSteps = getTimeframeSteps()\n        this.state[Constants.FILTER_NAME_SELECTED_TIMEFRAME] = [0, this.timeframeSteps.length - 1]\n        this.state[Constants.FILTER_NAME_DOWNLOAD_LIMIT] = Constants.MAX_DOWNLOAD_LIMIT\n        this.state[Constants.TIME_CONTROL_ULTRA_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BLITZ] = true\n        this.state[Constants.TIME_CONTROL_RAPID] = true\n        this.state[Constants.TIME_CONTROL_CLASSICAL] = true\n        this.state[Constants.TIME_CONTROL_CORRESPONDENCE] = true\n        this.state[Constants.TIME_CONTROL_DAILY] = true\n        this.state[Constants.FILTER_NAME_RATED] = \"all\"\n        this.state[Constants.FILTER_NAME_ELO_RANGE] = [0, Constants.MAX_ELO_RATING]\n    }\n\n\n    advancedFilters() {\n        return createSubObjectWithProperties(this.state,\n            [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n            Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n            Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n            Constants.FILTER_NAME_ELO_RANGE])\n    }\n\n\n    handleExpansionChange(panel) {\n        return (event, newExpanded) => {\n            this.setState({ expandedPanel: newExpanded ? panel : false });\n        };\n    }\n\n    playerDetailsChange(playerName, files, selectedNotableEvent, selectedNotablePlayer) {\n        this.setState({\n            playerName: playerName,\n            expandedPanel:SitePolicy.isFilterPanelEnabled(this.state.site, playerName, selectedNotablePlayer)?'filters':'',\n            files:files,\n            selectedNotableEvent:selectedNotableEvent,\n            selectedNotablePlayer:selectedNotablePlayer\n        })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"PlayerNameSaved\")\n    }\n    fetchGOATGames(url, callback){\n        request.get(url, (error, response) =>{\n            if(error) {\n                this.props.showError(\"Could not fetch player list. Failed to connect to DB.\")\n                callback([])\n                return \n            }\n            let gamesDetails\n            try{\n                gamesDetails = JSON.parse(response.body).list\n            } catch (e) {\n                console.log(e)\n            }\n            if(!gamesDetails) {\n                this.props.showError(\"Failed to load games.\")\n                callback([])\n            } else {\n                callback(gamesDetails)\n            }\n        })\n    }\n\n    siteChange(event) {\n        let newSite = event.target.value\n        if(newSite === Constants.SITE_PLAYER_DB && !this.state.notablePlayers) {\n            this.fetchGOATGames('https://goatchess.github.io/list.json', (gamesDetails)=>{\n                this.setState({notablePlayers:gamesDetails})\n            })\n        }\n        if(newSite === Constants.SITE_EVENT_DB && !this.state.notableEvents) {\n            this.fetchGOATGames('https://goatevents.github.io/list.json', (gamesDetails)=>{\n                this.setState({notableEvents:gamesDetails})\n            })\n        }\n        this.setState({ site: newSite, expandedPanel:'user'})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ChangeSite\", this.state.site)\n    }\n\n    filtersChange(filters) {\n        this.setState({...filters, expandedPanel:''})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FitlersSaved\", this.state.site)\n    }\n\n    render() {\n        return <div><div className=\"pgnloadersection\">\n            <Source expandedPanel={this.state.expandedPanel}\n                handleExpansionChange={this.handleExpansionChange('source').bind(this)}\n                site={this.state.site} siteChange={this.siteChange.bind(this)}/>\n            <User expandedPanel={this.state.expandedPanel} playerName={this.state.playerName}\n                handleExpansionChange={this.handleExpansionChange('user').bind(this)} \n                showError={this.props.showError} files={this.state.files} notablePlayers={this.state.notablePlayers}\n                notableEvents={this.state.notableEvents} site={this.state.site} playerDetailsChange={this.playerDetailsChange.bind(this)}\n                pgnUrl={this.state.pgnUrl} selectedPlayer={this.state.selectedNotablePlayer} selectedEvent={this.state.selectedNotableEvent}/>\n            <Filters expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor}\n                handleExpansionChange={this.handleExpansionChange('filters').bind(this)}\n                site={this.state.site} playerName={this.state.playerName} advancedFilters={this.advancedFilters()}\n                timeframeSteps={this.timeframeSteps} filtersChange={this.filtersChange.bind(this)}\n                selectedNotablePlayer={this.state.selectedNotablePlayer} />\n            </div>\n            <Actions expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor} files={this.state.files}\n                playerName={this.state.playerName} site={this.state.site} advancedFilters={this.advancedFilters()}\n                notify={this.props.notify} showError={this.props.showError} onChange={this.props.onChange}\n                setDownloading={this.props.setDownloading} clear={this.props.clear} isDownloading={this.props.isDownloading}\n                switchToMovesTab={this.props.switchToMovesTab} gamesProcessed={this.props.gamesProcessed} \n                selectedNotablePlayer={this.state.selectedNotablePlayer} selectedNotableEvent={this.state.selectedNotableEvent}/>\n\n        </div>\n    }\n\n}","import React from 'react'\nimport {Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRetweet, faTrashAlt, faFastBackward, faDesktop } from '@fortawesome/free-solid-svg-icons'\nimport {Container, Row, Col} from 'reactstrap'\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\n\nexport default class SettingsView extends React.Component {\n    toggle(eventName){\n        return (()=> {\n            let newValue = this.props.settings[eventName] === Constants.PLAYER_COLOR_WHITE ? Constants.PLAYER_COLOR_BLACK:Constants.PLAYER_COLOR_WHITE\n            this.props.onChange(eventName, newValue)\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"ChangeOrientation\")\n        })\n    }\n    analyse() {\n        window.open(`https://www.lichess.org/analysis/${this.props.fen}`, '_blank');\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"AnalyzeGame\")\n\n    }\n    resetAction() {\n        this.props.reset()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Reset\")\n    }\n    clearAction() {\n        this.props.clear()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Clear\")\n    }\n\n    render() {\n        return <div>\n            <Container>\n                <Row sm=\"12\">\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.toggle('orientation')} color=\"\"><h3><FontAwesomeIcon icon={faRetweet} /></h3> Flip board</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.clearAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faTrashAlt} /></h3> Clear games</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.resetAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faFastBackward} /></h3> Starting position</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.analyse.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faDesktop} /></h3> Computer analysis</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter, TextField } from '@material-ui/core';\nimport React from 'react'\nimport {getPerformanceDetails, simplifiedFen} from '../app/util'\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    eatClicks(e) {\n        e.stopPropagation()\n    }\n\n    copyFen() {\n        /* Get the text field */\n        var copyText = document.getElementById(\"fenField\");\n      \n        /* Select the text field */\n        copyText.select();\n        copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n      \n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n      \n        /* Alert the copied text */\n        this.props.showInfo(\"FEN copied\");\n    }\n\n    getFenField() {\n        return this.props.simplifiedView?null:\n            <div className=\"fenDiv\">\n            <TextField\n                id=\"fenField\"\n                multiline\n                label=\"FEN\"\n                rowsMax=\"2\"\n                value={this.props.fen} \n                inputProps={{\n                    style: {fontSize: 12},\n                    spellCheck: false,\n                  }} \n                  variant=\"outlined\"\n                className=\"fenField\"\n                margin=\"dense\"\n                onClick = {this.copyFen.bind(this)}\n                /></div>\n    }\n\n      \n    render() {\n        if(!this.props.moveDetails.lastPlayedGame) {\n            return <div>{this.getFenField()}<div className = \"infoMessage\" >No data to show. Please enter a lichess or chess.com user name in the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and click \"Load\"</div>\n                </div>\n        }\n        let performanceDetails = {}\n        if(this.props.isOpen) {\n            performanceDetails = getPerformanceDetails(this.props.moveDetails.totalOpponentElo, \n                                                        this.props.moveDetails.whiteWins, \n                                                        this.props.moveDetails.draws, \n                                                        this.props.moveDetails.blackWins, \n                                                        this.props.settings.playerColor)\n        } \n\n        return <div>\n            {this.getFenField()}\n            <Table onClick={this.eatClicks}>\n            {isNaN(performanceDetails.performanceRating)?null:            <TableHead className={`performanceRatingRow${this.props.simplifiedView?\" performanceHeader\":\"\"}`}><TableRow>\n                <TableCell className=\"performanceRatingRow\"><b>Performance</b></TableCell>\n                <TableCell className=\"performanceRatingRow\"><b>{performanceDetails.performanceRating}</b></TableCell>\n                </TableRow></TableHead>}\n            <TableBody>\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Results</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.results}</TableCell>\n            </TableRow>\n            {isNaN(performanceDetails.averageElo)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Avg opponent</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.averageElo}</TableCell>\n            </TableRow>}\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Score</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.score}</TableCell>\n            </TableRow>\n            {this.props.simplifiedView || isNaN(performanceDetails.averageElo)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Rating change</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.ratingChange}</TableCell>\n            </TableRow>\n            }\n            {!this.props.simplifiedView && this.props.moveDetails.bestWin?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Best win</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.bestWin} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.bestWinGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {!this.props.simplifiedView && this.props.moveDetails.worstLoss?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Worst loss</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.worstLoss} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.worstLossGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Last played</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.removeQuestionMarksFromDate(this.props.moveDetails.lastPlayedGame.date)} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.lastPlayedGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>\n            </TableBody>\n            {this.props.simplifiedView?null:\n            <TableFooter>\n                <TableRow>\n                    <TableCell colSpan=\"2\">Calculated based on <a href=\"https://handbook.fide.com/chapter/B022017\" target=\"_blank\" rel=\"noopener noreferrer\">FIDE regulations</a></TableCell>\n                </TableRow>\n            </TableFooter>\n            }\n        </Table></div>\n    }\n\n    removeQuestionMarksFromDate(date) {\n        if(date.indexOf('?') === -1) {\n            return date\n        }\n        return date.slice(0, date.indexOf('.'))\n    }\n}","import {Progress, Popover } from \"reactstrap\"\nimport React from 'react'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faExternalLinkAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\nimport ReportControls from './ReportControls'\n\nexport default class MovesList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            openPerformanceIndex: null\n        }\n    }\n\n    move(from, to) {\n        return () => {\n            this.props.onMove(from, to)\n            trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"MoveClicked\")\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.turnColor !== this.props.turnColor) {\n            this.setState({\n                openPerformanceIndex: null,\n            })\n        }\n    }\n    togglePerformancePopover(moveIndex) {\n        return (e) => {\n            if(this.state.openPerformanceIndex !== null) {\n                this.setState({openPerformanceIndex:null})\n            } else {\n                this.setState({openPerformanceIndex: moveIndex})\n            }\n            e.stopPropagation()\n        }\n    }\n    render(){\n        if(!this.props.movesToShow) {\n            return <div className = \"infoMessage\" >No moves to show. Please select a source from the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and enter the details.</div>\n        }\n    return <div>{(this.props.gameResults && this.props.gameResults.length>0)?this.resultsTable():null}\n                {this.movesTable()}</div>\n    }\n    resultsTable() {\n        return <Table>\n            <TableBody>\n                {\n                this.props.gameResults.map(result => {\n                    let whitePlayer = this.player(result.white, result.whiteElo)\n                    let blackPlayer = this.player(result.black, result.blackElo)\n                    return <TableRow className=\"moveRow\" key = {`${result.url}`} onClick={this.props.launchGame(result)}>\n                        <TableCell>\n                            {result.result===\"1-0\"?<b>{whitePlayer}</b>:whitePlayer} {result.result} {result.result === \"0-1\"?<b>{blackPlayer}</b>:blackPlayer}\n                        </TableCell>\n                    </TableRow>\n                })}\n            </TableBody>\n        </Table>\n    }\n    player(name, elo) {\n        return `${name}${elo?`(${elo})`:''}`\n    }\n    getPopover(moveIndex) {\n        let performancePopoverOpen = this.state.openPerformanceIndex === moveIndex\n        let openMove = this.props.movesToShow[moveIndex]\n\n        return <Popover trigger=\"hover\" placement=\"right\" isOpen={performancePopoverOpen} target={`performancePopover${moveIndex}`} toggle={this.togglePerformancePopover(moveIndex)}>\n                <ReportControls moveDetails={openMove.details} simplifiedView={true} isOpen = {performancePopoverOpen} launchGame={this.props.launchGame} settings={this.props.settings}/>\n            </Popover>\n    }\n    movesTable() {\n        let hasMoves = (this.props.movesToShow && this.props.movesToShow.length>0)\n        return <Table>\n            {hasMoves?\n        <TableHead>\n        <TableRow>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Move</b></TableCell>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Games</b></TableCell>\n            <TableCell><b>Results</b></TableCell>\n        </TableRow></TableHead>  \n        :null}\n        {hasMoves?\n        <TableBody>\n        {\n        this.props.movesToShow.map((move, moveIndex) => {\n            let sampleResultWhite = this.player(move.details.lastPlayedGame.white, move.details.lastPlayedGame.whiteElo)\n            let sampleResultBlack = this.player(move.details.lastPlayedGame.black, move.details.lastPlayedGame.blackElo)\n            let sampleResult = move.details.lastPlayedGame.result\n\n            return move.details.count > 1?<TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san} </TableCell>\n                <TableCell size=\"small\" id={`performancePopover${moveIndex}`} className=\"smallCol\" onClick ={this.togglePerformancePopover(moveIndex)}>\n                    {move.details.count} <FontAwesomeIcon className=\"lowOpacity\" icon={faInfoCircle}/>\n                    {this.getPopover(moveIndex)}\n                </TableCell>\n                <TableCell>\n                    <Progress className = \"border\" multi>\n                        <Progress bar className=\"whiteMove\" value={`${move.details.whiteWins/move.details.count*100}`}>{move.details.whiteWins/move.details.count>0.1?move.details.whiteWins:''}</Progress>\n                        <Progress bar className=\"grayMove\" value={`${move.details.draws/move.details.count*100}`}>{move.details.draws/move.details.count>0.1?move.details.draws:''}</Progress>\n                        <Progress bar className=\"blackMove\" value={`${move.details.blackWins/move.details.count*100}`}>{move.details.blackWins/move.details.count>0.1?move.details.blackWins:''}</Progress>\n                    </Progress>\n                </TableCell>\n            </TableRow>:\n            <TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san}</TableCell>\n                <TableCell colSpan = \"2\">\n        {sampleResultWhite} {sampleResult} {sampleResultBlack} {<FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(move.details.lastPlayedGame)} icon={faExternalLinkAlt}/>}\n                </TableCell>\n            </TableRow>\n            }\n        )}\n    </TableBody>\n    :null}\n        <TableFooter><TableRow>\n        {this.props.settings.playerName?\n\n            hasMoves?\n                <TableCell colSpan=\"3\">\n                Showing moves that have been \n                played {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n                </TableCell>:\n                <TableCell colSpan=\"3\">\n                No moves found played by {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n                </TableCell>\n            :\n            hasMoves?\n                <TableCell colSpan=\"3\">\n                Showing all moves that have been \n                played by <b>{this.props.turnColor}</b> in \n                this position.\n                </TableCell>:                \n                <TableCell colSpan=\"3\">\n                No moves found \n                played by <b>{this.props.turnColor}</b> in \n                this position.\n                </TableCell>\n\n\n        }</TableRow></TableFooter>\n    </Table>\n    }\n}","import React from 'react'\nimport PGNLoader from './loader/PGNLoader'\nimport SettingsView from './Settings'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faList, faCog, faChartBar } from '@fortawesome/free-solid-svg-icons'\nimport MovesList from './MovesList';\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\nimport ReportControls from './ReportControls'\nimport {Modal, ModalHeader} from 'reactstrap'\nimport {Table, TableRow, TableBody, TableCell} from '@material-ui/core'\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n          activeTab:'user',\n          activeGame:null\n      }\n      this.toggleModal = ()=>{\n        this.setState({activeGame:null})\n      }\n    }\n    \n\n    launchGame(game) {\n      if(game.url) {\n          return (e) => {\n              e.stopPropagation()\n              window.open(game.url, '_blank');\n              trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"ViewGameExternal\")\n          }\n      }\n      return ((e) => {\n        e.stopPropagation()\n        this.setState({activeGame:game})\n      })\n    }\n\n    toggle(tab) {\n        if(this.state.activeTab !== tab) {\n            this.setState({activeTab:tab})\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS,`activeTab:${tab}`)\n        }\n    }\n    switchToUserTab() {\n      this.toggle('user')\n    }\n    switchToMovesTab() {\n      this.toggle('moves')\n    }\n\n    render(){\n        return <div>\n              <Modal isOpen={this.state.activeGame} toggle={this.toggleModal}>\n              <ModalHeader toggle={this.toggleModal}>Game details</ModalHeader>\n              {!this.state.activeGame?null:\n              <Table>\n                \n                <TableBody>\n                  {\n                    Object.entries(this.state.activeGame.headers).map((entry)=><TableRow className=\"performanceRatingRow\">\n                        <TableCell className=\"performanceRatingRow\">{entry[0]}</TableCell>\n                        <TableCell className=\"performanceRatingRow\">{entry[1]}</TableCell>\n                    </TableRow>\n                    )}\n                  \n                </TableBody>\n              </Table>\n              }\n              </Modal>\n            <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'user' })}\n            onClick={() => { this.toggle('user'); }}\n          >\n            <FontAwesomeIcon icon={faUser} /> {this.state.activeTab === 'user'?\"User\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'moves' })}\n            onClick={() => { this.toggle('moves'); }}\n          >\n            <FontAwesomeIcon icon={faList} /> {this.state.activeTab === 'moves'?\"Moves\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'report' })}\n            onClick={() => { this.toggle('report'); }}\n          >\n            <FontAwesomeIcon icon={faChartBar} /> {this.state.activeTab === 'report'?\"Report\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'settings' })}\n            onClick={() => { this.toggle('settings'); }}\n          >\n            <FontAwesomeIcon icon={faCog} /> {this.state.activeTab === 'settings'?\"Controls\":\"\"}\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={this.state.activeTab}>\n        <TabPane tabId=\"user\">\n            <PGNLoader \n              switchToMovesTab={this.switchToMovesTab.bind(this)} \n              clear = {this.props.clear} \n              gamesProcessed = {this.props.gamesProcessed} \n              settings = {this.props.settings} \n              onChange = {this.props.settingsChange} \n              notify = {this.props.updateProcessedGames}\n              showError = {this.props.showError}\n              setDownloading = {this.props.setDownloading}\n              isDownloading = {this.props.isDownloading}\n              />\n            </TabPane>\n        <TabPane tabId=\"moves\">\n            <MovesList \n              switchToUserTab={this.switchToUserTab.bind(this)} \n              movesToShow={this.props.movesToShow} \n              gameResults={this.props.gameResults}\n              onMove={this.props.onMove}\n              settings={this.props.settings}\n              turnColor={this.props.turnColor}\n              settingsChange={this.props.settingsChange}\n              launchGame = {this.launchGame.bind(this)}\n              />\n        </TabPane>\n        <TabPane tabId=\"report\">\n          <ReportControls fen={this.props.fen} simplifiedView = {false}\n            moveDetails = {this.props.openingGraph.getDetailsForFen(this.props.fen)}\n            launchGame={this.launchGame.bind(this)} settings={this.props.settings}\n            switchToUserTab={this.switchToUserTab.bind(this)} \n            isOpen = {this.state.activeTab === \"report\"}\n            showInfo = {this.props.showInfo}/>\n        </TabPane>\n        <TabPane tabId=\"settings\">\n          <Row>\n            <Col sm=\"6\">\n            <SettingsView fen={this.props.fen} settings={this.props.settings} isOpen = {true} clear = {this.props.clear} reset = {this.props.reset} onChange = {this.props.settingsChange}/>\n            \n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n        </div>\n    }\n}","import Chess from 'chess.js'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nfunction turnColor() {\n    return fullTurnName(this.chess.turn())\n}\n\nfunction fullTurnName(shortName) {\n    return shortName === 'w' ? Constants.PLAYER_COLOR_WHITE : Constants.PLAYER_COLOR_BLACK\n}\n\nfunction playerColor() {\n    return this.state.settings.playerColor\n}\n\nfunction brushes() {\n    if(this.playerColor() === this.turnColor()) {\n        return this.forBrushes\n    }\n    return this.againstBrushes\n}\n\nfunction calcMovable() {\nconst dests = {}\n    this.chess.SQUARES.forEach(s => {\n        const ms = this.chess.moves({square: s, verbose: true})\n        if (ms.length) dests[s] = ms.map(m => m.to)\n    })\n    return {\n        free: false,\n        dests,\n        color: this.turnColor()\n    }\n}\n\nfunction orientation() {\n    return this.state.settings.orientation\n}\n\nfunction onMove(from, to) {\n    const chess = this.chess\n    let move = chess.move({ from, to, promotion: 'q'})\n    this.setState({ fen: chess.fen(), lastMove: move})\n}\n\n\nfunction onMoveAction(from, to) {\n    this.onMove(from,to)\n    trackEvent(Constants.EVENT_CATEGORY_CHESSBOARD, \"Move\")\n}\n\nfunction navigateTo(fen, previousMove){\n    this.chess = new Chess(fen)\n    this.setState({fen:fen, lastMove:previousMove})\n\n}\nfunction updateProcessedGames(downloadLimit, n, openingGraph) {\n    let totalGamesProcessed = this.state.gamesProcessed+n\n    this.setState({\n    gamesProcessed: totalGamesProcessed,\n    openingGraph: openingGraph,\n    downloadingGames: (totalGamesProcessed<downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)?this.state.downloadingGames:false\n    })\n    // continue to download games if \n    // 1. we have not reached download limit OR\n    //    there is no download limit set (downloadLimit>MAX condition)\n    // 2. user did not hit stop button\n    return (totalGamesProcessed < downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)&& this.state.downloadingGames\n}\nfunction moveToShape(move) {\n    return {\n        orig:move.orig,\n                    dest: move.dest,\n                    brush: this.brushes()[move.level]\n    }\n}\n\nfunction autoShapes() {\n    var moves = this.movesToShow()\n    if(moves) {\n        var shapes = moves.map(this.moveToShape.bind(this))\n        return this.fillArray(shapes,  25)\n    }\n    return this.fillArray([], 25) // dummy arrow to clear out existing arrows\n}\n\nfunction movesToShow() {\n    if(!this.state.openingGraph.hasMoves()) {\n        return null;\n    }\n    var moves = this.state.openingGraph.movesForFen(this.chess.fen())\n    return moves?moves.sort((a,b)=>b.details.count-a.details.count):[]\n}\n\nfunction gameResults() {\n    return this.state.openingGraph.gameResultsForFen(this.chess.fen())\n}\n\nfunction fillArray(arr, len) {\n    for (var i = arr.length; i < len; i++) {\n        arr.push({'orig':'i'+i, 'dest':'i'+(i+1), brush:this.brushes()[0]});\n    }\n    return arr;\n}\n\nfunction reset() {\n    this.chess = new Chess()\n    this.setState({fen: this.chess.fen(), lastMove:null})\n}\n\nfunction clear() {\n    this.state.openingGraph.clear()\n    this.state.gamesProcessed = 0\n    this.reset()\n}\n\nfunction settingsChange(name, value) {\n    let settings = this.state.settings\n    settings[name] = value;\n    this.setState({\n        'settings':settings\n    })\n}\nfunction showError(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:\"warning\"})\n    trackEvent(Constants.EVENT_CATEGORY_ERROR,\"errorShown\",\n        trackingLabel?trackingLabel:message)\n}\n\nfunction showInfo(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:\"success\"})\n    trackEvent(Constants.EVENT_CATEGORY_ERROR,\"infoShown\",\n        trackingLabel?trackingLabel:message)\n}\n\n\nfunction closeError() {\n    this.setState({message:''})\n}\n\nfunction setDownloading(val) {\n    this.setState({downloadingGames:val})\n}\n\nfunction addStateManagement(obj){\n    obj.orientation  = orientation\n    obj.turnColor = turnColor\n    obj.calcMovable = calcMovable\n    obj.onMove = onMove\n    obj.onMoveAction = onMoveAction\n    obj.autoShapes = autoShapes\n    obj.updateProcessedGames = updateProcessedGames\n    obj.settingsChange = settingsChange\n    obj.reset = reset\n    obj.clear = clear\n    obj.navigateTo = navigateTo\n    obj.playerColor = playerColor\n    obj.fillArray = fillArray\n    obj.brushes = brushes\n    obj.moveToShape = moveToShape\n    obj.movesToShow = movesToShow\n    obj.gameResults = gameResults\n    obj.showError = showError\n    obj.showInfo = showInfo\n    obj.closeError = closeError\n    obj.setDownloading = setDownloading\n}\n\nexport {addStateManagement}","import React from 'react'\nimport Chess from 'chess.js'\nimport Chessground from 'react-chessground'\nimport 'react-chessground/dist/styles/chessground.css'\nimport {openingGraph} from '../app/OpeningGraph'\nimport Navigator from './Navigator'\nimport GlobalHeader from './GlobalHeader'\nimport {Container, Row, Col} from 'reactstrap'\nimport ControlsContainer from './ControlsContainer'\nimport {addStateManagement} from './StateManagement'\nimport {Snackbar} from '@material-ui/core'\nimport Alert from '@material-ui/lab/Alert';\nimport * as Constants from '../app/Constants'\n\nexport default class MainContainer extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.chess = new Chess()\n    addStateManagement(this)\n    this.state = {\n        fen: this.chess.fen(),\n        lastMove: null,\n        gamesProcessed:0,\n        openingGraph:openingGraph,\n        settings:{\n          playerName:'',\n          orientation:Constants.PLAYER_COLOR_WHITE,\n          playerColor:''\n        },\n        message:'',\n        downloadingGames:false\n      }\n    this.chessboardWidth = this.getChessboardWidth()\n\n    this.forBrushes = ['paleGrey', 'paleGreen', 'green']\n    this.againstBrushes = ['paleRed', 'paleRed', 'red']\n\n  }\n  getChessboardWidth(){\n    // have to manually set the width to pixels instead of \"vw\" value\n    // this is because chessground component does not behave well with \"vw\" values\n    if (window.innerWidth<=768) {\n      return `${Math.round(window.innerWidth*95/100)}px` //95vw\n    } else if ((window.innerWidth<=1024)) {\n      return `${Math.round(window.innerWidth*40/100)}px` // 40vw\n    } else {\n      return \"512px\"\n    }\n\n  }\n\n\n  render() {\n    let lastMoveArray = this.state.lastMove ? [this.state.lastMove.from, this.state.lastMove.to] : null\n    let snackBarOpen = this.state.message?true:false\n    return <div className=\"rootView\"> \n        <GlobalHeader/>\n        <Container className=\"mainContainer\">\n          <Row><Col lg={{order:0, size:2}} xs={{order:2}}><Navigator fen = {this.state.fen} move={this.state.lastMove} onChange ={this.navigateTo.bind(this)}/>\n    </Col><Col lg=\"6\"><Chessground\n      height={this.chessboardWidth}\n      width={this.chessboardWidth}\n      orientation={this.orientation()}\n      turnColor={this.turnColor()}\n      movable={this.calcMovable()}\n      \n      lastMove={lastMoveArray}\n      fen={this.state.fen}\n      onMove={this.onMoveAction.bind(this)}\n      drawable ={{\n        enabled: true,\n        visible: true,\n        autoShapes: this.autoShapes()\n      }}\n      style={{ margin: 'auto' }}\n    />\n    </Col><Col lg=\"4\" className=\"paddingTop\"><ControlsContainer fen={this.state.fen}\n                gamesProcessed={this.state.gamesProcessed} \n                updateProcessedGames={this.updateProcessedGames.bind(this)}\n                settingsChange={this.settingsChange.bind(this)}\n                settings={this.state.settings}\n                reset={this.reset.bind(this)}\n                clear={this.clear.bind(this)}\n                movesToShow={this.movesToShow()}\n                gameResults={this.gameResults()}\n                onMove={this.onMove.bind(this)}\n                turnColor={this.turnColor()}\n                showError={this.showError.bind(this)}\n                showInfo={this.showInfo.bind(this)}\n                setDownloading={this.setDownloading.bind(this)}\n                isDownloading={this.state.downloadingGames}\n                openingGraph={this.state.openingGraph}\n                /></Col>\n    </Row></Container>\n    <Snackbar anchorOrigin={{ vertical:'top', horizontal:\"center\" }} open={snackBarOpen} autoHideDuration={6000} onClose={this.closeError.bind(this)}>\n    <Alert onClose={this.closeError.bind(this)} severity={this.state.messageSeverity}>\n      {this.state.message}\n    </Alert>\n    </Snackbar>\n    </div>\n  }\n}\n","import ReactDOM from 'react-dom'\nimport MainContainer from './pres/MainContainer'\nimport React from 'react'\nimport {trackPageView} from './app/Analytics'\n\nReactDOM.render(<MainContainer />, document.getElementById('root'))\ntrackPageView()","import * as Constants from './Constants'\n\nexport const LICHESS_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_ULTRA_BULLET,\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_CLASSICAL,\n    Constants.TIME_CONTROL_CORRESPONDENCE\n]\nexport const CHESS_DOT_COM_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_DAILY,\n]\n\nexport const TIME_CONTROL_LABELS = {\n    [Constants.TIME_CONTROL_ULTRA_BULLET]: \"Ultrabullet\",\n    [Constants.TIME_CONTROL_BULLET]: \"Bullet\",\n    [Constants.TIME_CONTROL_BLITZ]: \"Blitz\",\n    [Constants.TIME_CONTROL_RAPID]: \"Rapid\",\n    [Constants.TIME_CONTROL_CLASSICAL]: \"Classical\",\n    [Constants.TIME_CONTROL_CORRESPONDENCE]: \"Correspondence\",\n    [Constants.TIME_CONTROL_DAILY]: \"Daily\"\n}\n\nexport const DP_TABLE = {\n    \"100\":800,\n    \"99\":677,\n    \"98\":589,\n    \"97\":538,\n    \"96\":501,\n    \"95\":470,\n    \"94\":444,\n    \"93\":422,\n    \"92\":401,\n    \"91\":383,\n    \"90\":366,\n    \"89\":351,\n    \"88\":336,\n    \"87\":322,\n    \"86\":309,\n    \"85\":296,\n    \"84\":284,\n    \"83\":273,\n    \"82\":262,\n    \"81\":251,\n    \"80\":240,\n    \"79\":230,\n    \"78\":220,\n    \"77\":211,\n    \"76\":202,\n    \"75\":193,\n    \"74\":184,\n    \"73\":175,\n    \"72\":166,\n    \"71\":158,\n    \"70\":149,\n    \"69\":141,\n    \"68\":133,\n    \"67\":125,\n    \"66\":117,\n    \"65\":110,\n    \"64\":102,\n    \"63\":95,\n    \"62\":87,\n    \"61\":80,\n    \"60\":72,\n    \"59\":65,\n    \"58\":57,\n    \"57\":50,\n    \"56\":43,\n    \"55\":36,\n    \"54\":29,\n    \"53\":21,\n    \"52\":14,\n    \"51\":7,\n    \"50\":0,\n    \"49\":-7,\n    \"48\":-14,\n    \"47\":-21,\n    \"46\":-29,\n    \"45\":-36,\n    \"44\":-43,\n    \"43\":-50,\n    \"42\":-57,\n    \"41\":-65,\n    \"40\":-72,\n    \"39\":-80,\n    \"38\":-87,\n    \"37\":-95,\n    \"36\":-102,\n    \"35\":-110,\n    \"34\":-117,\n    \"33\":-125,\n    \"32\":-133,\n    \"31\":-141,\n    \"30\":-149,\n    \"29\":-158,\n    \"28\":-166,\n    \"27\":-175,\n    \"26\":-184,\n    \"25\":-193,\n    \"24\":-202,\n    \"23\":-211,\n    \"22\":-220,\n    \"21\":-230,\n    \"20\":-240,\n    \"19\":-251,\n    \"18\":-262,\n    \"17\":-273,\n    \"16\":-284,\n    \"15\":-296,\n    \"14\":-309,\n    \"13\":-322,\n    \"12\":-336,\n    \"11\":-351,\n    \"10\":-366,\n    \"9\":-383,\n    \"8\":-401,\n    \"7\":-422,\n    \"6\":-444,\n    \"5\":-470,\n    \"4\":-501,\n    \"3\":-538,\n    \"2\":-589,\n    \"1\":-677,\n    \"0\":-800,\n}","import * as Constants from './Constants'\n\nexport function isAdvancedFiltersEnabled(source) {\n    return source === Constants.SITE_CHESS_DOT_COM ||\n        source === Constants.SITE_LICHESS\n}\n\n\nexport function isFilterPanelEnabled(source, playerName) {\n    if(source === Constants.SITE_EVENT_DB ||\n        source === Constants.SITE_OPENING_TREE_FILE) {\n            return false\n    }\n    return !!playerName\n}\n\nexport function exportFileName(source, playerName, playerColor, selectedEvent) {\n    if(source === Constants.SITE_EVENT_DB) {\n        return `${selectedEvent.name}.pgn`\n    }\n    if(playerName) {\n        return `${playerName}-${playerColor}.png`\n    }\n    return \"openingtree-exportedgames.pgn\"\n}","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(gs) {return gs.map(function(g) { return g[0]})},\n      peg$c1 = function(h, c, m, r) {return [m, r]},\n      peg$c2 = function(h, c, r) {return [null, r]},\n      peg$c3 = function(h, c, mr) {return make_game(h, c, mr[0], mr[1])},\n      peg$c4 = peg$anyExpectation(),\n      peg$c5 = \"\\\"\",\n      peg$c6 = peg$literalExpectation(\"\\\"\", false),\n      peg$c7 = /^[^\"]/,\n      peg$c8 = peg$classExpectation([\"\\\"\"], true, false),\n      peg$c9 = function(str) {return str.join('')},\n      peg$c10 = /^[1-9]/,\n      peg$c11 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c12 = /^[0-9]/,\n      peg$c13 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c14 = function(a, b) {return parseInt(a+b.join(''), 10)},\n      peg$c15 = /^[A-Za-z0-9_\\-]/,\n      peg$c16 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"], \"_\", \"-\"], false, false),\n      peg$c17 = function(chars) {return chars.join('')},\n      peg$c18 = \" \",\n      peg$c19 = peg$literalExpectation(\" \", false),\n      peg$c20 = \"\\f\",\n      peg$c21 = peg$literalExpectation(\"\\f\", false),\n      peg$c22 = \"\\t\",\n      peg$c23 = peg$literalExpectation(\"\\t\", false),\n      peg$c24 = \"\\n\",\n      peg$c25 = peg$literalExpectation(\"\\n\", false),\n      peg$c26 = \"[\",\n      peg$c27 = peg$literalExpectation(\"[\", false),\n      peg$c28 = \"]\",\n      peg$c29 = peg$literalExpectation(\"]\", false),\n      peg$c30 = function(hn, hv) { return make_header(hn,hv) },\n      peg$c31 = function(hs) {return hs},\n      peg$c32 = /^[NKQRBP]/,\n      peg$c33 = peg$classExpectation([\"N\", \"K\", \"Q\", \"R\", \"B\", \"P\"], false, false),\n      peg$c34 = /^[a-h]/,\n      peg$c35 = peg$classExpectation([[\"a\", \"h\"]], false, false),\n      peg$c36 = /^[1-8]/,\n      peg$c37 = peg$classExpectation([[\"1\", \"8\"]], false, false),\n      peg$c38 = \"+\",\n      peg$c39 = peg$literalExpectation(\"+\", false),\n      peg$c40 = \"#\",\n      peg$c41 = peg$literalExpectation(\"#\", false),\n      peg$c42 = /^[x@]/,\n      peg$c43 = peg$classExpectation([\"x\", \"@\"], false, false),\n      peg$c44 = \".\",\n      peg$c45 = peg$literalExpectation(\".\", false),\n      peg$c46 = \"1-0\",\n      peg$c47 = peg$literalExpectation(\"1-0\", false),\n      peg$c48 = \"0-1\",\n      peg$c49 = peg$literalExpectation(\"0-1\", false),\n      peg$c50 = \"*\",\n      peg$c51 = peg$literalExpectation(\"*\", false),\n      peg$c52 = \"1/2-1/2\",\n      peg$c53 = peg$literalExpectation(\"1/2-1/2\", false),\n      peg$c54 = function(mn) {return mn},\n      peg$c55 = function(r, f) {return r+f},\n      peg$c56 = \"=\",\n      peg$c57 = peg$literalExpectation(\"=\", false),\n      peg$c58 = /^[QRBNK]/,\n      peg$c59 = peg$classExpectation([\"Q\", \"R\", \"B\", \"N\", \"K\"], false, false),\n      peg$c60 = \"$\",\n      peg$c61 = peg$literalExpectation(\"$\", false),\n      peg$c62 = \"!!\",\n      peg$c63 = peg$literalExpectation(\"!!\", false),\n      peg$c64 = \"??\",\n      peg$c65 = peg$literalExpectation(\"??\", false),\n      peg$c66 = \"!?\",\n      peg$c67 = peg$literalExpectation(\"!?\", false),\n      peg$c68 = \"?!\",\n      peg$c69 = peg$literalExpectation(\"?!\", false),\n      peg$c70 = \"!\",\n      peg$c71 = peg$literalExpectation(\"!\", false),\n      peg$c72 = \"?\",\n      peg$c73 = peg$literalExpectation(\"?\", false),\n      peg$c74 = /^[^}]/,\n      peg$c75 = peg$classExpectation([\"}\"], true, false),\n      peg$c76 = \"{\",\n      peg$c77 = peg$literalExpectation(\"{\", false),\n      peg$c78 = \"}\",\n      peg$c79 = peg$literalExpectation(\"}\", false),\n      peg$c80 = function(cc) {return cc.join('');},\n      peg$c81 = \"O-O-O\",\n      peg$c82 = peg$literalExpectation(\"O-O-O\", false),\n      peg$c83 = \"O-O\",\n      peg$c84 = peg$literalExpectation(\"O-O\", false),\n      peg$c85 = function(m) {return flatten(m).join('');},\n      peg$c86 = function(mn, m, n) {return n},\n      peg$c87 = function(mn, m, nags, c2) {return c2},\n      peg$c88 = function(mn, m, nags, com, r) {return r},\n      peg$c89 = function(mn, m, nags, com, ravs) {return make_move(mn, m, nags, ravs, com)},\n      peg$c90 = function(first, rest) {return first ? [first].concat(rest.map(function(m) {return m[1]})) : []},\n      peg$c91 = \"(\",\n      peg$c92 = peg$literalExpectation(\"(\", false),\n      peg$c93 = \")\",\n      peg$c94 = peg$literalExpectation(\")\", false),\n      peg$c95 = function(m, r) {return make_rav(m, r)},\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsegame();\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$parsenewline();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parsenewline();\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$parsegame();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsenewline();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsenewline();\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOF();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsegame() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseheaders();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsewhitespace();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsewhitespace();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parsemovetext();\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseresult();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c1(s1, s2, s5, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parseresult();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c2(s1, s2, s5);\n            }\n            s4 = s5;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsewhitespace();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsewhitespace();\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c3(s1, s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedouble_quote() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s0 = peg$c5;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestring() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedouble_quote();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c7.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c7.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsedouble_quote();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c9(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (peg$c10.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c12.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c12.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesymbol() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c15.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c15.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 12) {\n        s0 = peg$c20;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 9) {\n          s0 = peg$c22;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewhitespace() {\n    var s0;\n\n    s0 = peg$parsews();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsenewline();\n    }\n\n    return s0;\n  }\n\n  function peg$parsenewline() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c24;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseheader() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c26;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesymbol();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsews();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsestring();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c28;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c30(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseheaders() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseheader();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseheader();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c31(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepiece() {\n    var s0;\n\n    if (peg$c32.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserank() {\n    var s0;\n\n    if (peg$c34.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefile() {\n    var s0;\n\n    if (peg$c36.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheck() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c38;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheckmate() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s0 = peg$c40;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecapture() {\n    var s0;\n\n    if (peg$c42.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseperiod() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c44;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseresult() {\n    var s0;\n\n    if (input.substr(peg$currPos, 3) === peg$c46) {\n      s0 = peg$c46;\n      peg$currPos += 3;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c48) {\n        s0 = peg$c48;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s0 = peg$c50;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c52) {\n            s0 = peg$c52;\n            peg$currPos += 7;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c53); }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemove_number() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseperiod();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseperiod();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c54(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesquare() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parserank();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefile();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c55(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepromotion() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s1 = peg$c56;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$c58.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenag() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s2 = peg$c60;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseinteger();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsenag_alts() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c62) {\n      s0 = peg$c62;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c64) {\n        s0 = peg$c64;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c66) {\n          s0 = peg$c66;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c68) {\n            s0 = peg$c68;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c69); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 33) {\n              s0 = peg$c70;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 63) {\n                s0 = peg$c72;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c73); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecontinuation() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseperiod();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseperiod();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment_chars() {\n    var s0;\n\n    if (peg$c74.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c75); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c76;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsecomment_chars();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsecomment_chars();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c78;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c79); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c80(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepawn_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parserank();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecapture();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesquare();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepromotion();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecapture();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsesquare();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_disambiguation_half_move() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parserank();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsefile();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecapture();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesquare();\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecastle_half_move() {\n    var s0;\n\n    if (input.substr(peg$currPos, 5) === peg$c81) {\n      s0 = peg$c81;\n      peg$currPos += 5;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c82); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c83) {\n        s0 = peg$c83;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c84); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsehalf_move() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsecontinuation();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecastle_half_move();\n      if (s3 === peg$FAILED) {\n        s3 = peg$parsepiece_disambiguation_half_move();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parsepiece_half_move();\n          if (s3 === peg$FAILED) {\n            s3 = peg$parsepawn_half_move();\n          }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsecheck();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parsecheckmate();\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsenag_alts();\n          if (s5 === peg$FAILED) {\n            s5 = null;\n          }\n          if (s5 !== peg$FAILED) {\n            s2 = [s2, s3, s4, s5];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c85(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsemove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove_number();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsehalf_move();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = [];\n          s7 = peg$parsewhitespace();\n          if (s7 !== peg$FAILED) {\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parsewhitespace();\n            }\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsenag();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c86(s1, s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsenag();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c86(s1, s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsecomment();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c87(s1, s3, s4, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$currPos;\n              s8 = [];\n              s9 = peg$parsewhitespace();\n              if (s9 !== peg$FAILED) {\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parsewhitespace();\n                }\n              } else {\n                s8 = peg$FAILED;\n              }\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parserav();\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s7;\n                  s8 = peg$c88(s1, s3, s4, s5, s9);\n                  s7 = s8;\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$currPos;\n                s8 = [];\n                s9 = peg$parsewhitespace();\n                if (s9 !== peg$FAILED) {\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parsewhitespace();\n                  }\n                } else {\n                  s8 = peg$FAILED;\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parserav();\n                  if (s9 !== peg$FAILED) {\n                    peg$savedPos = s7;\n                    s8 = peg$c88(s1, s3, s4, s5, s9);\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c89(s1, s3, s4, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemovetext() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parsewhitespace();\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewhitespace();\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsemove();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parsewhitespace();\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsemove();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserav() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c91;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c92); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsemovetext();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsewhitespace();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseresult();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c93;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c94); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c95(s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n\n      function flatten(a, acc = []) {\n          for (var i = 0; i < a.length; i++) {\n              if (Array.isArray(a[i])) {\n                  flatten(a[i], acc);\n              } else {\n                  acc.push(a[i]);\n              }\n          }\n          return acc;\n      }\n      function make_header(hn,hv) {\n          var m = {};\n          m[hn] = hv;\n          return m;\n      }\n      function make_move(move_number, move, nags, ravs, comment) {\n          var m = {};\n          if (move_number) m.move_number = move_number;\n          if (move) m.move = move;\n          if (nags && nags.length) m.nags = nags;\n          if (ravs && ravs.length) m.ravs = ravs;\n          if (comment) m.comment = comment;\n          return m;\n      }\n      function make_rav(moves, result) {\n          return {\n              moves, \n              result\n          };\n      }\n      function make_game(h, c, m, r) {\n          h = h || [];\n          return {\n              headers: h.reduce((acc, x) => Object.assign(acc, x), {}),\n              comment: c,\n              moves: m || [],\n              result: r\n          };\n      }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"sourceRoot":""}